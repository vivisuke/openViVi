!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ALNUM	ViewTokenizer.h	/^		ALNUM,		\/\/	Ëã±Â≠ó„ÅßÂßã„Åæ„ÇãËã±Êï∞Â≠óÂàó$/;"	e	enum:ViewTokenizer::__anon4c643b110103
ALNUM	drawTokenizer.h	/^		ALNUM,		\/\/	âpéöÇ≈énÇ‹ÇÈâpêîéöóÒ$/;"	e	enum:DrawTokenizer::__anon12121c440103
ANSI_SPACE	ViewTokenizer.h	/^		ANSI_SPACE,	\/\/	ÂçäËßíÁ©∫ÁôΩ$/;"	e	enum:ViewTokenizer::__anon4c643b110103
APP_NAME	MainWindow.cpp	/^#define		APP_NAME	/;"	d	file:
ASSOC_PAREN	TextCursor.h	/^		ASSOC_PAREN,	\/\/	ÂØæÂøú„Åô„ÇãÊã¨Âºß„Å∏ÁßªÂãï$/;"	e	enum:TextCursor::__anonc94c84fe0103
AUTOCompletionDLG_H	AutoCompletionDlg.h	/^#define AUTOCompletionDLG_H$/;"	d
AutoCompletionDlg	AutoCompletionDlg.cpp	/^AutoCompletionDlg::AutoCompletionDlg(const QStringList &lst, QString txt, bool selTail, QWidget /;"	f	class:AutoCompletionDlg
AutoCompletionDlg	AutoCompletionDlg.h	/^class AutoCompletionDlg$/;"	c
BACK_GROUND	typeSettings.h	/^		BACK_GROUND,$/;"	e	enum:TypeSettings::__anona2242e4e0103
BASE_QWIDGET	AutoCompletionDlg.h	/^#define	BASE_QWIDGET	/;"	d
BEG_DOC	TextCursor.h	/^		BEG_DOC,$/;"	e	enum:TextCursor::__anonc94c84fe0103
BEG_LINE	TextCursor.h	/^		BEG_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
BEG_OF_CUR_SECTION	TextCursor.h	/^		BEG_OF_CUR_SECTION,		\/\/	[[$/;"	e	enum:TextCursor::__anonc94c84fe0103
BEG_OF_CUR_SECTION	ViEngine.h	/^		BEG_OF_CUR_SECTION,		\/\/	[[$/;"	e	enum:ViCmd::__anon1176e0b00203
BEG_OF_NEXT_SECTION	TextCursor.h	/^		BEG_OF_NEXT_SECTION,	\/\/	]]$/;"	e	enum:TextCursor::__anonc94c84fe0103
BEG_OF_NEXT_SECTION	ViEngine.h	/^		BEG_OF_NEXT_SECTION,	\/\/	]]$/;"	e	enum:ViCmd::__anon1176e0b00203
BEG_WORD	TextCursor.h	/^		BEG_WORD,		\/\/	ÂçòË™ûÂÖàÈ†≠$/;"	e	enum:TextCursor::__anonc94c84fe0103
BLOCK_COMMENT_BEG	typeSettings.h	/^		BLOCK_COMMENT_BEG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
BLOCK_COMMENT_END	typeSettings.h	/^		BLOCK_COMMENT_END,$/;"	e	enum:TypeSettings::__anona2242e4e0103
BOX_MODE	TextCursor.h	/^		BOX_MODE,					\/\/	Áü©ÂΩ¢ÈÅ∏Êäû„É¢„Éº„Éâ$/;"	e	enum:TextCursor::__anonc94c84fe0103
CHAR_ENCODING	globalSettings.h	/^		CHAR_ENCODING = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
CHAR_ENC_EUC	globalSettings.h	/^		CHAR_ENC_EUC,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
CHAR_ENC_SJIS	globalSettings.h	/^		CHAR_ENC_SJIS,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
CHAR_ENC_UTF_16BE	globalSettings.h	/^		CHAR_ENC_UTF_16BE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
CHAR_ENC_UTF_16LE	globalSettings.h	/^		CHAR_ENC_UTF_16LE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
CHAR_ENC_UTF_8	globalSettings.h	/^		CHAR_ENC_UTF_8 = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
CLOSE_ALL_UNDO_BLOCK	ViEngine.h	/^		CLOSE_ALL_UNDO_BLOCK,$/;"	e	enum:ViCmd::__anon1176e0b00203
CLOSE_UNDO_BLOCK	ViEngine.h	/^		CLOSE_UNDO_BLOCK,$/;"	e	enum:ViCmd::__anon1176e0b00203
CMDLINE	ViEngine.h	/^		CMDLINE,			\/\/	: \/ „Ç≥„Éû„É≥„ÉâÂÖ•Âäõ„É¢„Éº„Éâ$/;"	e	enum:Mode::__anon1176e0b00103
COMMAND	ViEngine.h	/^		COMMAND,		\/\/	vi „Ç≥„Éû„É≥„Éâ„É¢„Éº„Éâ$/;"	e	enum:Mode::__anon1176e0b00103
COMMANDLINE_H	CommandLine.h	/^#define COMMANDLINE_H$/;"	d
COMMENT	ViewTokenizer.h	/^		COMMENT,	\/\/	„Ç≥„É°„É≥„Éà$/;"	e	enum:ViewTokenizer::__anon4c643b110103
COMMENT	drawTokenizer.h	/^		COMMENT,	\/\/	ÉRÉÅÉìÉg$/;"	e	enum:DrawTokenizer::__anon12121c440103
COMMENT	typeSettings.h	/^		COMMENT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
COMPLETIONWIDGET_H	CompletionWidget.h	/^#define COMPLETIONWIDGET_H$/;"	d
CR	charEncoding.h	/^		CR,$/;"	e	enum:CharEncoding::__anonf78c89200203
CRLF	charEncoding.h	/^		CRLF = 0,$/;"	e	enum:CharEncoding::__anonf78c89200203
CTRL	ViewTokenizer.h	/^		CTRL,		\/\/	0x20 Êú™Ê∫Ä$/;"	e	enum:ViewTokenizer::__anon4c643b110103
CTRL	drawTokenizer.h	/^		CTRL,		\/\/	0x20 ñ¢ñû$/;"	e	enum:DrawTokenizer::__anon12121c440103
CTabBar	CTabBar.cpp	/^CTabBar::CTabBar(QWidget *parent)$/;"	f	class:CTabBar
CTabBar	CTabBar.h	/^class CTabBar : public QTabBar$/;"	c
CTabWidget	CTabWidget.cpp	/^CTabWidget::CTabWidget(QWidget *parent)$/;"	f	class:CTabWidget
CTabWidget	CTabWidget.h	/^class CTabWidget : public QTabWidget$/;"	c
CURSOR	typeSettings.h	/^		CURSOR,$/;"	e	enum:TypeSettings::__anona2242e4e0103
CURSOR_WD	EditView.cpp	/^#define		CURSOR_WD	/;"	d	file:
CUR_ASSOC_PAREN	ViEngine.h	/^		CUR_ASSOC_PAREN,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_BEG_DOC	ViEngine.h	/^		CUR_BEG_DOC,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_BEG_LINE	ViEngine.h	/^		CUR_BEG_LINE,			\/\/	0 Ë°åÂÖàÈ†≠$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_BOTTOM_OF_SCREEN	ViEngine.h	/^		CUR_BOTTOM_OF_SCREEN,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_CAP_WORD	ViEngine.h	/^		CUR_CAP_WORD,		\/\/	cdy u$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_DOWN	ViEngine.h	/^		CUR_DOWN,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_END_DOC	ViEngine.h	/^		CUR_END_DOC,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_END_LINE	ViEngine.h	/^		CUR_END_LINE,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_END_SS_WORD	ViEngine.h	/^		CUR_END_SS_WORD,		\/\/	E$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_END_WORD	ViEngine.h	/^		CUR_END_WORD,		\/\/	e$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_FIRST_NOSPACE	ViEngine.h	/^		CUR_FIRST_NOSPACE,		\/\/	^ Ë°å„ÅÆÊúÄÂàù„ÅÆÈùûÁ©∫ÁôΩÊñáÂ≠ó$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_JUMP_LINE	ViEngine.h	/^		CUR_JUMP_LINE,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_LAST_CHAR_LINE	ViEngine.h	/^		CUR_LAST_CHAR_LINE,		\/\/	Ë°å„ÅÆÊúÄÂæå„ÅÆÊñáÂ≠ó„Å∏$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_LEFT	ViEngine.h	/^		CUR_LEFT,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_MIDDLE_OF_SCREEN	ViEngine.h	/^		CUR_MIDDLE_OF_SCREEN,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_NEXT_BLANK_LINE	ViEngine.h	/^		CUR_NEXT_BLANK_LINE,	\/\/	}$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_NEXT_FNS_LINE	ViEngine.h	/^		CUR_NEXT_FNS_LINE,		\/\/	Ê¨°Ë°åÂÖàÈ†≠ÈùûÁ©∫ÁôΩÊñáÂ≠ó$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_NEXT_SS_WORD	ViEngine.h	/^		CUR_NEXT_SS_WORD,		\/\/	W$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_NEXT_WORD	ViEngine.h	/^		CUR_NEXT_WORD,		\/\/	w$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_NTH_COLUMN	ViEngine.h	/^		CUR_NTH_COLUMN,			\/\/	ÊåáÂÆö„Ç´„É©„É†‰ΩçÁΩÆ„Å∏ÁßªÂãï$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_PREV_BLANK_LINE	ViEngine.h	/^		CUR_PREV_BLANK_LINE,		\/\/	{$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_PREV_FNS_LINE	ViEngine.h	/^		CUR_PREV_FNS_LINE,		\/\/	ÂâçË°åÂÖàÈ†≠ÈùûÁ©∫ÁôΩÊñáÂ≠ó$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_PREV_SS_WORD	ViEngine.h	/^		CUR_PREV_SS_WORD,		\/\/	B$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_PREV_WORD	ViEngine.h	/^		CUR_PREV_WORD,		\/\/	b$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_RIGHT	ViEngine.h	/^		CUR_RIGHT,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_TOP_OF_SCREEN	ViEngine.h	/^		CUR_TOP_OF_SCREEN,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_UP	ViEngine.h	/^		CUR_UP,$/;"	e	enum:ViCmd::__anon1176e0b00203
CUR_WORD_BG	typeSettings.h	/^		CUR_WORD_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
CharEncoding	charEncoding.h	/^namespace CharEncoding {$/;"	n
CommandLine	CommandLine.cpp	/^CommandLine::CommandLine(QWidget *parent)$/;"	f	class:CommandLine
CommandLine	CommandLine.h	/^class CommandLine : public QLineEdit$/;"	c
CompletionWidget	CompletionWidget.cpp	/^CompletionWidget::CompletionWidget(EditView *editor,$/;"	f	class:CompletionWidget
CompletionWidget	CompletionWidget.h	/^class CompletionWidget : public QDialog$/;"	c
DBCSsizeTable	charEncoding.cpp	/^uchar const DBCSsizeTable[0x100] = {$/;"	v	typeref:typename:uchar const[0x100]
DBCStable1	charEncoding.cpp	/^bool const DBCStable1[0x100] = {		\/\/	ÇcÇaï∂éöÇÃÉtÉ@Å[ÉXÉgÉoÉCÉgÇ©Ç«Ç§Ç©$/;"	v	typeref:typename:bool const[0x100]
DBCStable2	charEncoding.cpp	/^bool const DBCStable2[0x100] = {		\/\/	ÇcÇaï∂éöÇÃÉZÉJÉìÉhÉoÉCÉgÇ©Ç«Ç§Ç©$/;"	v	typeref:typename:bool const[0x100]
DECREMENT	ViEngine.h	/^		DECREMENT,			\/\/	-= 1$/;"	e	enum:ViCmd::__anon1176e0b00203
DELETE_CHAR	ViEngine.h	/^		DELETE_CHAR,				\/\/	ÊñáÂ≠óÂâäÈô§$/;"	e	enum:ViCmd::__anon1176e0b00203
DELETE_LINE	ViEngine.h	/^		DELETE_LINE,				\/\/	Ë°åÂâäÈô§$/;"	e	enum:ViCmd::__anon1176e0b00203
DELETE_PREV_CHAR	ViEngine.h	/^		DELETE_PREV_CHAR,		\/\/	ÂâçÊñáÂ≠óÂâäÈô§$/;"	e	enum:ViCmd::__anon1176e0b00203
DELETE_TO_EOL	ViEngine.h	/^		DELETE_TO_EOL,			\/\/	Ë°åÂæÖ„Å§„Åæ„ÅßÂâäÈô§$/;"	e	enum:ViCmd::__anon1176e0b00203
DEL_TEXT	typeSettings.h	/^		DEL_TEXT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
DIGITS	ViewTokenizer.h	/^		DIGITS,		\/\/	10ÈÄ≤Êï∞$/;"	e	enum:ViewTokenizer::__anon4c643b110103
DIGITS	drawTokenizer.h	/^		DIGITS,		\/\/	10êiêî$/;"	e	enum:DrawTokenizer::__anon12121c440103
DIGITS	typeSettings.h	/^		DIGITS,$/;"	e	enum:TypeSettings::__anona2242e4e0103
DOC_TYPE	globalSettings.h	/^		DOC_TYPE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
DOC_TYPE_CPP	globalSettings.h	/^		DOC_TYPE_CPP,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_CS	globalSettings.h	/^		DOC_TYPE_CS,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_CSS	globalSettings.h	/^		DOC_TYPE_CSS,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_DEFAULT	globalSettings.h	/^		DOC_TYPE_DEFAULT = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_FS	globalSettings.h	/^		DOC_TYPE_FS,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_HLSL	globalSettings.h	/^		DOC_TYPE_HLSL,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_HTML	globalSettings.h	/^		DOC_TYPE_HTML,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_JAVA	globalSettings.h	/^		DOC_TYPE_JAVA,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_JS	globalSettings.h	/^		DOC_TYPE_JS,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_LOG	globalSettings.h	/^		DOC_TYPE_LOG,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_MARKDOWN	globalSettings.h	/^		DOC_TYPE_MARKDOWN,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_PASCAL	globalSettings.h	/^		DOC_TYPE_PASCAL,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_PERL	globalSettings.h	/^		DOC_TYPE_PERL,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_PHP	globalSettings.h	/^		DOC_TYPE_PHP,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_PYTHON	globalSettings.h	/^		DOC_TYPE_PYTHON,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_RUBY	globalSettings.h	/^		DOC_TYPE_RUBY,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_SQL	globalSettings.h	/^		DOC_TYPE_SQL,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOC_TYPE_TXT	globalSettings.h	/^		DOC_TYPE_TXT,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
DOWN	TextCursor.h	/^		DOWN,$/;"	e	enum:TextCursor::__anonc94c84fe0103
DRAW_Y_OFFSET	EditView.cpp	/^#define		DRAW_Y_OFFSET	/;"	d	file:
Document	Document.cpp	/^Document::Document(QString typeName, QObject *parent)$/;"	f	class:Document
Document	Document.h	/^class Document : public QObject$/;"	c
DrawTokenizer	drawTokenizer.h	/^class DrawTokenizer$/;"	c
END_DOC	TextCursor.h	/^		END_DOC,$/;"	e	enum:TextCursor::__anonc94c84fe0103
END_LINE	TextCursor.h	/^		END_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
END_OF_FILE	tokenizer.h	/^		END_OF_FILE,$/;"	e	enum:Tokenizer::__anon1149ced60103
END_SS_WORD	TextCursor.h	/^		END_SS_WORD,			\/\/	Á©∫ÁôΩÂå∫Âàá„ÇäÂçòË™ûÊú´Â∞æ$/;"	e	enum:TextCursor::__anonc94c84fe0103
END_WORD	TextCursor.h	/^		END_WORD,		\/\/	ÂçòË™ûÊú´Â∞æ$/;"	e	enum:TextCursor::__anonc94c84fe0103
EOFLine	EditView.cpp	/^int EditView::EOFLine() const$/;"	f	class:EditView	typeref:typename:int
EOFLine	viewLineMgr.cpp	/^int ViewLineMgr::EOFLine() const$/;"	f	class:ViewLineMgr	typeref:typename:int
EOF_MARK	typeSettings.h	/^		EOF_MARK,$/;"	e	enum:TypeSettings::__anona2242e4e0103
ERR	ex.cpp	/^	ERR,$/;"	e	enum:__anonfc0e76330103	file:
EUC	charEncoding.h	/^		EUC,$/;"	e	enum:CharEncoding::__anonf78c89200103
EUC_KANA_LEADBYTE	charEncoding.cpp	/^#define		EUC_KANA_LEADBYTE	/;"	d	file:
EXEC_YANK_TEXT	ViEngine.h	/^		EXEC_YANK_TEXT,		\/\/	@@$/;"	e	enum:ViCmd::__anon1176e0b00203
EX_COPY_LINE	ViEngine.h	/^		EX_COPY_LINE,			\/\/	:co[py]$/;"	e	enum:ViCmd::__anon1176e0b00203
EX_DELETE_LINE	ViEngine.h	/^		EX_DELETE_LINE,		\/\/	:d[elete]$/;"	e	enum:ViCmd::__anon1176e0b00203
EX_MOVE_LINE	ViEngine.h	/^		EX_MOVE_LINE,			\/\/	:mo[ve]$/;"	e	enum:ViCmd::__anon1176e0b00203
EX_SHIFT_LEFT	ViEngine.h	/^		EX_SHIFT_LEFT,			\/\/	:<$/;"	e	enum:ViCmd::__anon1176e0b00203
EX_SHIFT_RIGHT	ViEngine.h	/^		EX_SHIFT_RIGHT,		\/\/	:>$/;"	e	enum:ViCmd::__anon1176e0b00203
EditView	EditView.cpp	/^EditView::EditView(MainWindow* mainWindow, Document *doc \/*, TypeSettings* typeSettings*\/)$/;"	f	class:EditView
EditView	EditView.h	/^class EditView : public QWidget		\/\/QScrollArea$/;"	c
FINDLINEEDIT_H	FindLineEdit.h	/^#define FINDLINEEDIT_H$/;"	d
FIND_BACKWARD	assocParen.cpp	/^	FIND_BACKWARD,$/;"	e	enum:__anonaec742250103	file:
FIND_FORWARD	assocParen.cpp	/^	FIND_FORWARD,$/;"	e	enum:__anonaec742250103	file:
FIRST_NOSPACE	TextCursor.h	/^		FIRST_NOSPACE,		\/\/	ÊúÄÂàù„ÅÆÈùûÁ©∫ÁôΩÊñáÂ≠ó$/;"	e	enum:TextCursor::__anonc94c84fe0103
FOCUS_OUTLINE_BAR	ViEngine.h	/^		FOCUS_OUTLINE_BAR,			\/\/	zo$/;"	e	enum:ViCmd::__anon1176e0b00203
FONT_NAME	typeSettings.h	/^		FONT_NAME = 0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
FONT_SIZE	typeSettings.h	/^		FONT_SIZE = 0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
FallingChar	EditView.h	/^	FallingChar(QString txt, QPointF pnt, QPointF v)$/;"	f	struct:FallingChar
FallingChar	EditView.h	/^struct FallingChar		\/\/	ËêΩ‰∏ã‰∏≠ÊñáÂ≠ó$/;"	s
FindLineEdit	FindLineEdit.cpp	/^FindLineEdit::FindLineEdit(QWidget *parent)$/;"	f	class:FindLineEdit
FindLineEdit	FindLineEdit.h	/^class FindLineEdit : public QLineEdit$/;"	c
GLOBALSTGDLG_H	GlobalStgDlg.h	/^#define GLOBALSTGDLG_H$/;"	d
GREPDLG_H	GrepDlg.h	/^#define GREPDLG_H$/;"	d
GREPENGINE_H	GrepEngine.h	/^#define GREPENGINE_H$/;"	d
GREPPINGDLG_H	GreppingDlg.h	/^#define GREPPINGDLG_H$/;"	d
GREP_SUB_DIR	globalSettings.h	/^		GREP_SUB_DIR,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
GREP_VIEW	globalSettings.h	/^		GREP_VIEW,						\/\/	OutputBar\/GrepView$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
GlobalSettings	globalSettings.cpp	/^GlobalSettings::GlobalSettings()$/;"	f	class:GlobalSettings
GlobalSettings	globalSettings.h	/^class GlobalSettings$/;"	c
GlobalStgDlg	GlobalStgDlg.cpp	/^GlobalStgDlg::GlobalStgDlg(GlobalSettings *globSettings, QWidget *parent)$/;"	f	class:GlobalStgDlg
GlobalStgDlg	GlobalStgDlg.h	/^class GlobalStgDlg : public QDialog$/;"	c
GrepDlg	GrepDlg.cpp	/^GrepDlg::GrepDlg(GlobalSettings *globSettings, const QStringList &grepDirHist, int cnt, QWidget /;"	f	class:GrepDlg
GrepDlg	GrepDlg.h	/^class GrepDlg : public QDialog$/;"	c
GrepEngine	GrepEngine.cpp	/^GrepEngine::GrepEngine(GlobalSettings *globalSettings, \/*SSSearch *sssrc,*\/ QObject *parent)$/;"	f	class:GrepEngine
GrepEngine	GrepEngine.h	/^class GrepEngine : public QObject$/;"	c
GreppingDlg	GreppingDlg.cpp	/^GreppingDlg::GreppingDlg(QWidget *parent)$/;"	f	class:GreppingDlg
GreppingDlg	GreppingDlg.h	/^class GreppingDlg : public QDialog$/;"	c
HEADING	viewLineMgr.h	/^		HEADING = 0x0001,$/;"	e	enum:ViewLine::__anon15d4c0840103
HOME_LINE	TextCursor.h	/^		HOME_LINE,		\/\/	ÊúÄÂàù„ÅÆÈùûÁ©∫ÁôΩÊñáÂ≠ó‰ΩçÁΩÆ or Ë°åÂÖàÈ†≠$/;"	e	enum:TextCursor::__anonc94c84fe0103
HS_MARGIN	EditView.cpp	/^#define		HS_MARGIN	/;"	d	file:
HTDOCS_ROOT	globalSettings.h	/^		HTDOCS_ROOT,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
HTML	typeSettings.h	/^		HTML,$/;"	e	enum:TypeSettings::__anona2242e4e0103
HTMLTAG	ViewTokenizer.h	/^		HTMLTAG,	\/\/	<...> ÂÜÖ„ÉÜ„Ç≠„Çπ„Éà$/;"	e	enum:ViewTokenizer::__anon4c643b110103
HTMLTAG	drawTokenizer.h	/^		HTMLTAG,	\/\/	<...> ì‡ÉeÉLÉXÉg$/;"	e	enum:DrawTokenizer::__anon12121c440103
HTML_SPECIAL_CHARS	ViewTokenizer.h	/^		HTML_SPECIAL_CHARS,		\/\/	&lt; Á≠â„ÅÆHTMLÁâπÊÆäÊñáÂ≠ó$/;"	e	enum:ViewTokenizer::__anon4c643b110103
HTML_SPECIAL_CHARS	drawTokenizer.h	/^		HTML_SPECIAL_CHARS,		\/\/	&lt; ìôÇÃHTMLì¡éÍï∂éö$/;"	e	enum:DrawTokenizer::__anon12121c440103
IDENT	tokenizer.h	/^		IDENT,		\/\/	Ëã±Â≠ó„ÅßÂßã„Åæ„ÇãËã±Êï∞Â≠óÂàó$/;"	e	enum:Tokenizer::__anon1149ced60103
IDI_ICON1	resource.h	/^#define IDI_ICON1 /;"	d
IGNORE_CASE	globalSettings.h	/^		IGNORE_CASE = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
IGNORE_CASE_KW1	typeSettings.h	/^		IGNORE_CASE_KW1,$/;"	e	enum:TypeSettings::__anona2242e4e0103
IGNORE_CASE_KW2	typeSettings.h	/^		IGNORE_CASE_KW2,$/;"	e	enum:TypeSettings::__anona2242e4e0103
IGNORE_MOC_FILE	globalSettings.h	/^		IGNORE_MOC_FILE,				\/\/	ÂÆöÁæ©‰ΩçÁΩÆ„Å∏„Ç∏„É£„É≥„ÉóÔºömoc_*.cpp „ÇíÁÑ°Ë¶ñ$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
INCREMENT	ViEngine.h	/^		INCREMENT,			\/\/	+= 1$/;"	e	enum:ViCmd::__anon1176e0b00203
INC_SEARCH	globalSettings.h	/^		INC_SEARCH,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
INSERT	ViEngine.h	/^		INSERT = 0,		\/\/	ÊåøÂÖ•„É¢„Éº„Éâ$/;"	e	enum:Mode::__anon1176e0b00103
INSERT	ViEngine.h	/^		INSERT,							\/\/	ÊñáÂ≠óÊåøÂÖ•$/;"	e	enum:ViCmd::__anon1176e0b00203
JOIN_LINES	ViEngine.h	/^		JOIN_LINES,			\/\/	J$/;"	e	enum:ViCmd::__anon1176e0b00203
JUMP_EOF_AT_OPEN	typeSettings.h	/^		JUMP_EOF_AT_OPEN,		\/\/	ÉIÅ[ÉvÉìéûÅAEOFÇ…ÉWÉÉÉìÉv$/;"	e	enum:TypeSettings::__anona2242e4e0103
JUMP_MARK_LINE	ViEngine.h	/^		JUMP_MARK_LINE,		\/\/	'$/;"	e	enum:ViCmd::__anon1176e0b00203
JUMP_MARK_POS	ViEngine.h	/^		JUMP_MARK_POS,		\/\/	`$/;"	e	enum:ViCmd::__anon1176e0b00203
KEEP_ANCHOR	TextCursor.h	/^		KEEP_ANCHOR,$/;"	e	enum:TextCursor::__anonc94c84fe0103
KEYWORD1	typeSettings.h	/^		KEYWORD1,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD1_BOLD	typeSettings.h	/^		KEYWORD1_BOLD,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD1_FILE	typeSettings.h	/^		KEYWORD1_FILE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD2	typeSettings.h	/^		KEYWORD2,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD2_BOLD	typeSettings.h	/^		KEYWORD2_BOLD,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD2_FILE	typeSettings.h	/^		KEYWORD2_FILE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD3	typeSettings.h	/^		KEYWORD3,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD3_BOLD	typeSettings.h	/^		KEYWORD3_BOLD,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD3_FILE	typeSettings.h	/^		KEYWORD3_FILE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEYWORD_COMPLETION	typeSettings.h	/^		KEYWORD_COMPLETION,		\/\/	ÉLÅ[ÉèÅ[Éhé©ìÆï‚äÆ$/;"	e	enum:TypeSettings::__anona2242e4e0103
KEY_FAVORITEFILELIST	MainWindow.cpp	/^#define		KEY_FAVORITEFILELIST	/;"	d	file:
KEY_MAINWIN_MAX	MainWindow.cpp	/^#define		KEY_MAINWIN_MAX	/;"	d	file:
KEY_MAINWIN_RECT	MainWindow.cpp	/^#define		KEY_MAINWIN_RECT	/;"	d	file:
KEY_OPENED_FILELIST	MainWindow.cpp	/^#define		KEY_OPENED_FILELIST	/;"	d	file:
KEY_RECENTDIRLIST	MainWindow.cpp	/^#define		KEY_RECENTDIRLIST	/;"	d	file:
KEY_RECENTFILELIST	MainWindow.cpp	/^#define		KEY_RECENTFILELIST	/;"	d	file:
KeyBoolItem	globalSettings.cpp	/^struct KeyBoolItem$/;"	s	file:
KeyBoolItem	typeSettings.cpp	/^struct KeyBoolItem$/;"	s	file:
KeyColor	typeSettings.cpp	/^struct KeyColor$/;"	s	file:
KeyEnumItem	globalSettings.cpp	/^struct KeyEnumItem$/;"	s	file:
KeyIntItem	globalSettings.cpp	/^struct KeyIntItem$/;"	s	file:
KeyIntItem	typeSettings.cpp	/^struct KeyIntItem$/;"	s	file:
KeyTextItem	globalSettings.cpp	/^struct KeyTextItem$/;"	s	file:
KeyTextItem	typeSettings.cpp	/^struct KeyTextItem$/;"	s	file:
LAST_CHAR_LINE	TextCursor.h	/^		LAST_CHAR_LINE,		\/\/	Ë°å„ÅÆÊúÄÂæå„ÅÆÊñáÂ≠ó$/;"	e	enum:TextCursor::__anonc94c84fe0103
LEFT	TextCursor.h	/^		LEFT = 0,$/;"	e	enum:TextCursor::__anonc94c84fe0103
LF	charEncoding.h	/^		LF,$/;"	e	enum:CharEncoding::__anonf78c89200203
LINENUM	typeSettings.h	/^		LINENUM,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINENUM_BG	typeSettings.h	/^		LINENUM_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINENUM_MODIFIED	typeSettings.h	/^		LINENUM_MODIFIED,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINENUM_SAVED	typeSettings.h	/^		LINENUM_SAVED,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINE_BREAK_WIN_WIDTH	typeSettings.h	/^		LINE_BREAK_WIN_WIDTH,		\/\/	âÊñ âEí[Ç≈ê‹ÇËï‘Çµ$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINE_COMMENT	typeSettings.h	/^		LINE_COMMENT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LINE_CURSOR	typeSettings.h	/^		LINE_CURSOR,$/;"	e	enum:TypeSettings::__anona2242e4e0103
LOOP_SEARCH	globalSettings.h	/^		LOOP_SEARCH,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
LineNumbers	ViEngine.h	/^	LineNumbers()$/;"	f	struct:LineNumbers
LineNumbers	ViEngine.h	/^struct LineNumbers$/;"	s
MARK	ViEngine.h	/^		MARK,						\/\/	„Éû„Éº„ÇØ„ÄÅ„Éû„Éº„ÇØÊñáÂ≠ó„ÅØ lastCmdChar „ÅßÊåáÂÆö$/;"	e	enum:ViCmd::__anon1176e0b00203
MARK_BG	typeSettings.h	/^		MARK_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
MATCHED_BG	typeSettings.h	/^		MATCHED_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
MATCHED_TEXT	typeSettings.h	/^		MATCHED_TEXT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
MATCHE_PAREN_BG	typeSettings.h	/^		MATCHE_PAREN_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
MAX_CLIPBOARD_HIST	MainWindow.cpp	/^#define		MAX_CLIPBOARD_HIST	/;"	d	file:
MAX_FIND_STR_HIST	MainWindow.cpp	/^#define		MAX_FIND_STR_HIST	/;"	d	file:
MAX_HSCB	EditView.cpp	/^#define		MAX_HSCB	/;"	d	file:
MAX_MINMAP_HEIGHT	Document.cpp	/^#define		MAX_MINMAP_HEIGHT	/;"	d	file:
MAX_MINMAP_HEIGHT	EditView.cpp	/^#define		MAX_MINMAP_HEIGHT	/;"	d	file:
MAX_N_EXT_CMD	MainWindow.cpp	/^#define		MAX_N_EXT_CMD	/;"	d	file:
MINI_MAP	globalSettings.h	/^		MINI_MAP,					\/\/	„Éü„Éã„Éû„ÉÉ„ÉóË°®Á§∫$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
MINMAP_LN_WD	Document.cpp	/^#define		MINMAP_LN_WD	/;"	d	file:
MINMAP_LN_WD	EditView.cpp	/^#define		MINMAP_LN_WD	/;"	d	file:
MINMAP_WIDTH	Document.cpp	/^#define		MINMAP_WIDTH	/;"	d	file:
MINMAP_WIDTH	EditView.cpp	/^#define		MINMAP_WIDTH	/;"	d	file:
MODE_EX	MainWindow.h	/^	MODE_EX,$/;"	e	enum:__anon34aec7180103
MODE_INS	MainWindow.h	/^	MODE_INS = 0,$/;"	e	enum:__anon34aec7180103
MODE_REP	MainWindow.h	/^	MODE_REP,$/;"	e	enum:__anon34aec7180103
MODE_VI	MainWindow.h	/^	MODE_VI,$/;"	e	enum:__anon34aec7180103
MODE_WIDTH	MainWindow.cpp	/^#define		MODE_WIDTH	/;"	d	file:
MOVE_ANCHOR	TextCursor.h	/^		MOVE_ANCHOR = 0,$/;"	e	enum:TextCursor::__anonc94c84fe0103
MainWindow	MainWindow.cpp	/^MainWindow::MainWindow(QWidget *parent)$/;"	f	class:MainWindow
MainWindow	MainWindow.h	/^class MainWindow : public QMainWindow$/;"	c
MaxClipboardHist	MainWindow.h	/^    enum { MaxClipboardHist = 10 + 26 };$/;"	e	enum:MainWindow::__anon34aec7180603
MaxFavoriteFiles	MainWindow.h	/^    enum { MaxFavoriteFiles = 10 + 26 };$/;"	e	enum:MainWindow::__anon34aec7180403
MaxRecentDirs	MainWindow.h	/^    enum { MaxRecentDirs = 10 + 26 };$/;"	e	enum:MainWindow::__anon34aec7180503
MaxRecentFiles	MainWindow.h	/^    enum { MaxRecentFiles = 10 + 26 };$/;"	e	enum:MainWindow::__anon34aec7180303
Mode	ViEngine.h	/^namespace Mode {$/;"	n
NAMEDCOLORDLG_H	NamedColorDlg.h	/^#define NAMEDCOLORDLG_H$/;"	d
NEWLINE	ViewTokenizer.h	/^		NEWLINE,	\/\/	CR\/LF\/CRLF$/;"	e	enum:ViewTokenizer::__anon4c643b110103
NEWLINE	drawTokenizer.h	/^		NEWLINE,	\/\/	CR\/LF\/CRLF$/;"	e	enum:DrawTokenizer::__anon12121c440103
NEWLINE	typeSettings.h	/^		NEWLINE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
NEWLINE_CR	MainWindow.h	/^	NEWLINE_CR,$/;"	e	enum:__anon34aec7180203
NEWLINE_CRLF	MainWindow.h	/^	NEWLINE_CRLF = 0,$/;"	e	enum:__anon34aec7180203
NEWLINE_LF	MainWindow.h	/^	NEWLINE_LF,$/;"	e	enum:__anon34aec7180203
NEXT_BLANK_LINE	TextCursor.h	/^		NEXT_BLANK_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_CAP_WORD	TextCursor.h	/^		NEXT_CAP_WORD,		\/\/	Ê¨°„ÅÆÂçòË™ûÂÖàÈ†≠Ôºà„Ç≠„É£„Éî„Çø„É´„ÉØ„Éº„Éâ„ÄÅ„Ç¢„É≥„ÉÄ„Éº„Éê„ÉºÂå∫Âàá„Çä/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_HEADING_LINE	TextCursor.h	/^		NEXT_HEADING_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_SS_WORD	TextCursor.h	/^		NEXT_SS_WORD,		\/\/	Ê¨°„ÅÆÁ©∫ÁôΩÂå∫Âàá„ÇäÂçòË™ûÂÖàÈ†≠„Å∏$/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_SS_WORD_NOSKIPSPC	TextCursor.h	/^		NEXT_SS_WORD_NOSKIPSPC,		\/\/	Ê¨°„ÅÆÁ©∫ÁôΩÂå∫Âàá„ÇäÂçòË™ûÂÖàÈ†≠„Å∏ÔºàÁ∂ôÁ∂öÁ©∫ÁôΩÈ°û„Çí„Çπ„Ç≠„ÉÉ/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_WORD	TextCursor.h	/^		NEXT_WORD,		\/\/	Ê¨°„ÅÆÂçòË™ûÂÖàÈ†≠„Å∏$/;"	e	enum:TextCursor::__anonc94c84fe0103
NEXT_WORD_NOSKIPSPC	TextCursor.h	/^		NEXT_WORD_NOSKIPSPC,		\/\/	Ê¨°„ÅÆÂçòË™ûÂÖàÈ†≠„Å∏ÔºàÁ∂ôÁ∂öÁ©∫ÁôΩÈ°û„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å™„ÅÑÔºâ$/;"	e	enum:TextCursor::__anonc94c84fe0103
NOMAL_MODE	TextCursor.h	/^		NOMAL_MODE = 0,			\/\/	ÈÄöÂ∏∏ÈÅ∏Êäû„É¢„Éº„Éâ$/;"	e	enum:TextCursor::__anonc94c84fe0103
NONE	Document.cpp	/^		NONE = 0,$/;"	e	enum:Document::buildMinMap::__anonf91707b50103	file:
NUMBER	tokenizer.h	/^		NUMBER,		\/\/	Êï∞Â≠ó„ÅßÂßã„Åæ„ÇãËã±Êï∞Â≠óÂàó$/;"	e	enum:Tokenizer::__anon1149ced60103
N_BOOL	globalSettings.h	/^		N_BOOL,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
N_BOOL	typeSettings.h	/^		N_BOOL,$/;"	e	enum:TypeSettings::__anona2242e4e0103
N_CHAR_ENC	globalSettings.h	/^		N_CHAR_ENC,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
N_CMD_HIST	ViEngine.h	/^		N_CMD_HIST = 100,$/;"	e	enum:ViEngine::__anon1176e0b00303
N_CMD_HIST	ex.cpp	/^#define		N_CMD_HIST	/;"	d	file:
N_COLOR	typeSettings.h	/^		N_COLOR,$/;"	e	enum:TypeSettings::__anona2242e4e0103
N_DOC_TYPE	globalSettings.h	/^		N_DOC_TYPE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0203
N_ENUM	globalSettings.h	/^		N_ENUM,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
N_INT	globalSettings.h	/^		N_INT,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
N_INT	typeSettings.h	/^		N_INT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
N_TEXT	globalSettings.h	/^		N_TEXT,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
N_TEXT	typeSettings.h	/^		N_TEXT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
N_YANK_BUFFER	ViEngine.h	/^		N_YANK_BUFFER = 10 + 26,		\/\/	0-9, a-z	ÔºàÂ§ßÊñáÂ≠óÂ∞èÊñáÂ≠óÂêå‰∏ÄË¶ñÔºâ$/;"	e	enum:ViEngine::__anon1176e0b00303
NamedColorDlg	NamedColorDlg.cpp	/^NamedColorDlg::NamedColorDlg(QWidget *parent)$/;"	f	class:NamedColorDlg
NamedColorDlg	NamedColorDlg.h	/^class NamedColorDlg : public QDialog$/;"	c
OK	ex.cpp	/^	OK,$/;"	e	enum:__anonfc0e76330103	file:
OPEN_NEXT_LINE	ViEngine.h	/^		OPEN_NEXT_LINE,$/;"	e	enum:ViCmd::__anon1176e0b00203
OPEN_OPENEDFILES	globalSettings.h	/^		OPEN_OPENEDFILES,			\/\/	Ëµ∑ÂãïÊôÇÔºöÁµÇ‰∫ÜÊôÇ„Éï„Ç°„Ç§„É´Âæ©Â∏∞$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
OPEN_PREV_LINE	ViEngine.h	/^		OPEN_PREV_LINE,$/;"	e	enum:ViCmd::__anon1176e0b00203
OPEN_UNDO_BLOCK	ViEngine.h	/^		OPEN_UNDO_BLOCK,$/;"	e	enum:ViCmd::__anon1176e0b00203
OTHER	ViewTokenizer.h	/^		OTHER,		\/\/	„Åù„ÅÆ‰ªñÔºà„Éû„É´„ÉÅ„Éê„Ç§„ÉàÊñáÂ≠ó„Å™„Å©Ôºâ$/;"	e	enum:ViewTokenizer::__anon4c643b110103
OTHER	drawTokenizer.h	/^		OTHER,		\/\/	ÇªÇÃëºÅiÉ}ÉãÉ`ÉoÉCÉgï∂éöÇ»Ç«Åj$/;"	e	enum:DrawTokenizer::__anon12121c440103
OUTPUTVIEW_H	OutputView.h	/^#define OUTPUTVIEW_H$/;"	d
OUTPUT_FONT_NAME	globalSettings.h	/^		OUTPUT_FONT_NAME = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
OUTPUT_FONT_SIZE	globalSettings.h	/^		OUTPUT_FONT_SIZE = 0,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
OUTPUT_VIEW	globalSettings.h	/^		OUTPUT_VIEW,					\/\/	OutputBar\/OutputView$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
OutlineBar	OutlineBar.cpp	/^OutlineBar::OutlineBar(QWidget *parent)$/;"	f	class:OutlineBar
OutlineBar	OutlineBar.h	/^class OutlineBar : public QTreeWidget$/;"	c
OutputView	OutputView.cpp	/^OutputView::OutputView(QWidget *parent)$/;"	f	class:OutputView
OutputView	OutputView.h	/^class OutputView : public QPlainTextEdit$/;"	c
PAI	EditView.cpp	/^#define		PAI	/;"	d	file:
PASTE_NEXT	ViEngine.h	/^		PASTE_NEXT,				\/\/	p „Ç≥„Éû„É≥„Éâ$/;"	e	enum:ViCmd::__anon1176e0b00203
PASTE_PREV	ViEngine.h	/^		PASTE_PREV,				\/\/	P „Ç≥„Éû„É≥„Éâ$/;"	e	enum:ViCmd::__anon1176e0b00203
PICTURE_OPACITY	globalSettings.h	/^		PICTURE_OPACITY,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
PICTURE_SCALE	globalSettings.h	/^		PICTURE_SCALE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
PREEDIT_BG	typeSettings.h	/^		PREEDIT_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
PREV_BLANK_LINE	TextCursor.h	/^		PREV_BLANK_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
PREV_HEADING_LINE	TextCursor.h	/^		PREV_HEADING_LINE,$/;"	e	enum:TextCursor::__anonc94c84fe0103
PREV_SS_WORD	TextCursor.h	/^		PREV_SS_WORD,		\/\/	Ââç„ÅÆÁ©∫ÁôΩÂå∫Âàá„ÇäÂçòË™ûÂÖàÈ†≠„Å∏$/;"	e	enum:TextCursor::__anonc94c84fe0103
PREV_WORD	TextCursor.h	/^		PREV_WORD,		\/\/	Ââç„ÅÆÂçòË™ûÂÖàÈ†≠„Å∏$/;"	e	enum:TextCursor::__anonc94c84fe0103
PRIVATE	Document.cpp	/^		PRIVATE,$/;"	e	enum:Document::buildMinMap::__anonf91707b50103	file:
PROTECTED	Document.cpp	/^		PROTECTED,$/;"	e	enum:Document::buildMinMap::__anonf91707b50103	file:
PUBLIC	Document.cpp	/^		PUBLIC,$/;"	e	enum:Document::buildMinMap::__anonf91707b50103	file:
ProjectView	ProjectView.h	/^class ProjectView : public QWidget$/;"	c
QAPPLICATION_CLASS	MainWindow.h	/^#define QAPPLICATION_CLASS /;"	d
QUOTED	ViewTokenizer.h	/^		QUOTED,		\/\/	„Ç∑„É≥„Ç∞„É´„ÄÅ„ÉÄ„Éñ„É´„ÇØ„Ç©„Éº„Éà„Åï„Çå„ÅüÊñáÂ≠óÂàó$/;"	e	enum:ViewTokenizer::__anon4c643b110103
QUOTED	drawTokenizer.h	/^		QUOTED,		\/\/	ÉVÉìÉOÉãÅAÉ_ÉuÉãÉNÉHÅ[ÉgÇ≥ÇÍÇΩï∂éöóÒ$/;"	e	enum:DrawTokenizer::__anon12121c440103
REDO	ViEngine.h	/^		REDO,$/;"	e	enum:ViCmd::__anon1176e0b00203
REGEXP	globalSettings.h	/^		REGEXP,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
REPLACE	ViEngine.h	/^		REPLACE,			\/\/	‰∏äÊõ∏„Åç„É¢„Éº„Éâ$/;"	e	enum:Mode::__anon1176e0b00103
REPLACE_CHAR	ViEngine.h	/^		REPLACE_CHAR,				\/\/	1ÊñáÂ≠óÁΩÆÊèõ$/;"	e	enum:ViCmd::__anon1176e0b00203
RIGHT	TextCursor.h	/^		RIGHT,$/;"	e	enum:TextCursor::__anonc94c84fe0103
SAVE_ALL_EXIT	ViEngine.h	/^		SAVE_ALL_EXIT,		\/\/	ZZ$/;"	e	enum:ViCmd::__anon1176e0b00203
SCROLL_CUR_AT_BOTTOM	ViEngine.h	/^		SCROLL_CUR_AT_BOTTOM,		\/\/	z-$/;"	e	enum:ViCmd::__anon1176e0b00203
SCROLL_CUR_AT_TOP	ViEngine.h	/^		SCROLL_CUR_AT_TOP,			\/\/	z Enter$/;"	e	enum:ViCmd::__anon1176e0b00203
SCROLL_CUR_IN_MIDDLE	ViEngine.h	/^		SCROLL_CUR_IN_MIDDLE,		\/\/	z.$/;"	e	enum:ViCmd::__anon1176e0b00203
SColorTable	NamedColorDlg.cpp	/^struct SColorTable {$/;"	s	file:
SEARCH_CHAR_F	ViEngine.h	/^		SEARCH_CHAR_F,$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_CHAR_T	ViEngine.h	/^		SEARCH_CHAR_T,$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_CHAR_f	ViEngine.h	/^		SEARCH_CHAR_f,$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_CHAR_t	ViEngine.h	/^		SEARCH_CHAR_t,$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_CUR_WORD	ViEngine.h	/^		SEARCH_CUR_WORD,		\/\/	*	„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆÂçòË™ûÊ§úÁ¥¢$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_NEXT	ViEngine.h	/^		SEARCH_NEXT,				\/\/	n$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_PAT	ViEngine.h	/^		SEARCH_PAT,				\/\/	\/? Ê§úÁ¥¢„ÄÅ„Éë„Çø„Éº„É≥„ÅØ m_searchPat, ÊñπÂêë„ÅØ m_searchFwd „Å´Ê†ºÁ¥ç$/;"	e	enum:ViCmd::__anon1176e0b00203
SEARCH_PREV	ViEngine.h	/^		SEARCH_PREV,				\/\/	N$/;"	e	enum:ViCmd::__anon1176e0b00203
SELECT_CHAR_MODE	ViEngine.h	/^		SELECT_CHAR_MODE,		\/\/	v mode$/;"	e	enum:ViCmd::__anon1176e0b00203
SELECT_LINE	ViEngine.h	/^		SELECT_LINE,				\/\/	V$/;"	e	enum:ViCmd::__anon1176e0b00203
SEL_BG	typeSettings.h	/^		SEL_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SEL_TEXT	typeSettings.h	/^		SEL_TEXT,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHIFT_LEFT	ViEngine.h	/^		SHIFT_LEFT,$/;"	e	enum:ViCmd::__anon1176e0b00203
SHIFT_RIGHT	ViEngine.h	/^		SHIFT_RIGHT,$/;"	e	enum:ViCmd::__anon1176e0b00203
SHORT_TEXT_0	typeSettings.h	/^		SHORT_TEXT_0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_1	typeSettings.h	/^		SHORT_TEXT_1,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_2	typeSettings.h	/^		SHORT_TEXT_2,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_3	typeSettings.h	/^		SHORT_TEXT_3,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_4	typeSettings.h	/^		SHORT_TEXT_4,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_5	typeSettings.h	/^		SHORT_TEXT_5,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_6	typeSettings.h	/^		SHORT_TEXT_6,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_7	typeSettings.h	/^		SHORT_TEXT_7,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_8	typeSettings.h	/^		SHORT_TEXT_8,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_9	typeSettings.h	/^		SHORT_TEXT_9,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_0	typeSettings.h	/^		SHORT_TEXT_SEL_0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_1	typeSettings.h	/^		SHORT_TEXT_SEL_1,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_2	typeSettings.h	/^		SHORT_TEXT_SEL_2,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_3	typeSettings.h	/^		SHORT_TEXT_SEL_3,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_4	typeSettings.h	/^		SHORT_TEXT_SEL_4,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_5	typeSettings.h	/^		SHORT_TEXT_SEL_5,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_6	typeSettings.h	/^		SHORT_TEXT_SEL_6,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_7	typeSettings.h	/^		SHORT_TEXT_SEL_7,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_8	typeSettings.h	/^		SHORT_TEXT_SEL_8,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SHORT_TEXT_SEL_9	typeSettings.h	/^		SHORT_TEXT_SEL_9,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SINGLEAPPLICATION_H	singleapplication.h	/^#define SINGLEAPPLICATION_H$/;"	d
SJIS	charEncoding.h	/^		SJIS,$/;"	e	enum:CharEncoding::__anonf78c89200103
STATEMENT_COMPLETION	typeSettings.h	/^		STATEMENT_COMPLETION,		\/\/	ç\\ï∂é©ìÆï‚äÆ$/;"	e	enum:TypeSettings::__anona2242e4e0103
STRING	ViewTokenizer.h	/^		STRING,$/;"	e	enum:ViewTokenizer::__anon4c643b110103
STRING	drawTokenizer.h	/^		STRING,$/;"	e	enum:DrawTokenizer::__anon12121c440103
STRING	tokenizer.h	/^		STRING,		\/\/	ÊñáÂ≠óÂàó$/;"	e	enum:Tokenizer::__anon1149ced60103
STRING	typeSettings.h	/^		STRING,$/;"	e	enum:TypeSettings::__anona2242e4e0103
SYMBOL	ViewTokenizer.h	/^		SYMBOL,		\/\/	!"# „Å™„Å©„ÅÆË®òÂè∑È°ûÔºàÂçäËßíÁ©∫ÁôΩ„ÇÇÂê´„ÇÄÔºâ$/;"	e	enum:ViewTokenizer::__anon4c643b110103
SYMBOL	drawTokenizer.h	/^		SYMBOL,		\/\/	!"# Ç»Ç«ÇÃãLçÜóﬁÅiîºäpãÛîíÇ‡ä‹ÇﬁÅj$/;"	e	enum:DrawTokenizer::__anon12121c440103
SYMBOL	tokenizer.h	/^		SYMBOL,		\/\/	„Åù„ÅÆ‰ªñË®òÂè∑$/;"	e	enum:Tokenizer::__anon1149ced60103
SYNC_HORZ_SCROLL	globalSettings.h	/^		SYNC_HORZ_SCROLL,				\/\/	ÁîªÈù¢ÂàÜÂâ≤ÊôÇÔºöÊ∞¥Âπ≥„Çπ„ÇØ„É≠„Éº„É´ÂêåÊúü$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
SYNC_VERT_SCROLL	globalSettings.h	/^		SYNC_VERT_SCROLL,				\/\/	ÁîªÈù¢ÂàÜÂâ≤ÊôÇÔºöÂûÇÁõ¥„Çπ„ÇØ„É≠„Éº„É´ÂêåÊúü$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
SettingsMgr	settingsMgr.cpp	/^SettingsMgr::SettingsMgr()$/;"	f	class:SettingsMgr
SettingsMgr	settingsMgr.h	/^class SettingsMgr$/;"	c
SingleApplication	singleapplication.cpp	/^SingleApplication::SingleApplication(int &argc, char *argv[], const QString uniqKeyString)$/;"	f	class:SingleApplication
SingleApplication	singleapplication.h	/^class SingleApplication : public QApplication$/;"	c
TAB	typeSettings.h	/^		TAB,$/;"	e	enum:TypeSettings::__anona2242e4e0103
TAB_SHIFT	ViEngine.h	/^		TAB_SHIFT,			\/\/	ÈÅ∏ÊäûÁä∂ÊÖã„ÅßTAB$/;"	e	enum:ViCmd::__anon1176e0b00203
TAB_WIDTH	typeSettings.h	/^		TAB_WIDTH,$/;"	e	enum:TypeSettings::__anona2242e4e0103
TESTVICOMMANDS_H	TestViCommands.h	/^#define TESTVICOMMANDS_H$/;"	d
TEXT	typeSettings.h	/^		TEXT = 0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
TEXT_OBJECT_A	ViEngine.h	/^		TEXT_OBJECT_A,$/;"	e	enum:ViCmd::__anon1176e0b00203
TEXT_OBJECT_I	ViEngine.h	/^		TEXT_OBJECT_I,$/;"	e	enum:ViCmd::__anon1176e0b00203
TM_FPS	EditView.cpp	/^#define		TM_FPS	/;"	d	file:
TOGGLE_TRUE_FALSE	ViEngine.h	/^		TOGGLE_TRUE_FALSE,$/;"	e	enum:ViCmd::__anon1176e0b00203
TOGGLE_UPPER_LOWER	ViEngine.h	/^		TOGGLE_UPPER_LOWER,$/;"	e	enum:ViCmd::__anon1176e0b00203
TO_COMMAND_MODE	ViEngine.h	/^		TO_COMMAND_MODE,$/;"	e	enum:ViCmd::__anon1176e0b00203
TO_INSERT_MODE	ViEngine.h	/^		TO_INSERT_MODE,$/;"	e	enum:ViCmd::__anon1176e0b00203
TYPESTGDLG_H	TypeStgDlg.h	/^#define TYPESTGDLG_H$/;"	d
TagPos	assocParen.cpp	/^	TagPos() {}$/;"	f	struct:TagPos	file:
TagPos	assocParen.cpp	/^	TagPos(const TagPos &x)$/;"	f	struct:TagPos	file:
TagPos	assocParen.cpp	/^	TagPos(pos_t pos, const QString &tag)$/;"	f	struct:TagPos	file:
TagPos	assocParen.cpp	/^struct TagPos$/;"	s	file:
TestFailedItem	TestViCommands.cpp	/^	TestFailedItem() : m_lineNum(0) {}$/;"	f	struct:TestFailedItem	file:
TestFailedItem	TestViCommands.cpp	/^	TestFailedItem(const QString &path, int lineNum, const QString &messsage = QString())$/;"	f	struct:TestFailedItem	file:
TestFailedItem	TestViCommands.cpp	/^struct TestFailedItem {$/;"	s	file:
TestViCommands	TestViCommands.cpp	/^TestViCommands::TestViCommands(MainWindow *mainWindow, ViEngine *viEngine, const QString &testFi/;"	f	class:TestViCommands
TestViCommands	TestViCommands.cpp	/^class TestViCommands$/;"	c	file:
TextCursor	TextCursor.cpp	/^TextCursor::TextCursor(EditView *view, pos_t pos, int anchor)$/;"	f	class:TextCursor
TextCursor	TextCursor.cpp	/^TextCursor::TextCursor(const TextCursor &x)$/;"	f	class:TextCursor
TextCursor	TextCursor.h	/^class TextCursor {$/;"	c
Tokenizer	tokenizer.cpp	/^Tokenizer::Tokenizer(const Buffer &buffer, pos_t pos, pos_t last, bool bString, const TypeSettin/;"	f	class:Tokenizer
Tokenizer	tokenizer.cpp	/^Tokenizer::Tokenizer(const Buffer *buffer, pos_t pos, pos_t last, bool bString, const TypeSettin/;"	f	class:Tokenizer
Tokenizer	tokenizer.cpp	/^Tokenizer::Tokenizer(const Tokenizer &x)$/;"	f	class:Tokenizer
Tokenizer	tokenizer.h	/^class Tokenizer$/;"	c
TypeSettings	typeSettings.cpp	/^TypeSettings::TypeSettings(QString typeName, QString defaultExt)$/;"	f	class:TypeSettings
TypeSettings	typeSettings.h	/^class TypeSettings$/;"	c
TypeStgDlg	TypeStgDlg.cpp	/^TypeStgDlg::TypeStgDlg(EditView *view, TypeSettings *typeStg, QWidget *parent)$/;"	f	class:TypeStgDlg
TypeStgDlg	TypeStgDlg.h	/^class TypeStgDlg : public QDialog$/;"	c
UNDEF	tokenizer.h	/^		UNDEF = 0,	\/\/	ÂàùÊúüÂÄ§$/;"	e	enum:Tokenizer::__anon1149ced60103
UNDETERMINED	ViEngine.h	/^		UNDETERMINED = 0,		\/\/	„Ç≥„Éû„É≥„ÉâÊú™Á¢∫ÂÆöÁä∂ÊÖã$/;"	e	enum:ViCmd::__anon1176e0b00203
UNDO	ViEngine.h	/^		UNDO,$/;"	e	enum:ViCmd::__anon1176e0b00203
UNKNOWN	ViewTokenizer.h	/^		UNKNOWN = 0,$/;"	e	enum:ViewTokenizer::__anon4c643b110103
UNKNOWN	charEncoding.h	/^		UNKNOWN = 0,$/;"	e	enum:CharEncoding::__anonf78c89200103
UNKNOWN	drawTokenizer.h	/^		UNKNOWN = 0,$/;"	e	enum:DrawTokenizer::__anon12121c440103
UNKNOWN	ex.cpp	/^	UNKNOWN = 0,$/;"	e	enum:__anonfc0e76330103	file:
UP	TextCursor.h	/^		UP,$/;"	e	enum:TextCursor::__anonc94c84fe0103
URL	ViewTokenizer.h	/^		URL,$/;"	e	enum:ViewTokenizer::__anon4c643b110103
URL	drawTokenizer.h	/^		URL,$/;"	e	enum:DrawTokenizer::__anon12121c440103
URL	typeSettings.h	/^		URL,$/;"	e	enum:TypeSettings::__anona2242e4e0103
UTF16BE	charEncoding.h	/^		UTF16BE,$/;"	e	enum:CharEncoding::__anonf78c89200103
UTF16BE_BOM	charEncoding.cpp	/^uchar	UTF16BE_BOM[UTF16_BOM_LENGTH] = {0xfe, 0xff};$/;"	v	typeref:typename:uchar[]
UTF16LE	charEncoding.h	/^		UTF16LE,$/;"	e	enum:CharEncoding::__anonf78c89200103
UTF16LE_BOM	charEncoding.cpp	/^uchar	UTF16LE_BOM[UTF16_BOM_LENGTH] = {0xff, 0xfe};$/;"	v	typeref:typename:uchar[]
UTF16_BOM_LENGTH	charEncoding.h	/^#define		UTF16_BOM_LENGTH	/;"	d
UTF8	charEncoding.h	/^		UTF8,$/;"	e	enum:CharEncoding::__anonf78c89200103
UTF8_BOM	charEncoding.cpp	/^uchar	UTF8_BOM[UTF8_BOM_LENGTH] = {0xef, 0xbb, 0xbf};$/;"	v	typeref:typename:uchar[]
UTF8_BOM_LENGTH	charEncoding.h	/^#define		UTF8_BOM_LENGTH	/;"	d
VERSION_STR	version.h	/^#define		VERSION_STR	/;"	d
VIENGINE_H	ViEngine.h	/^#define VIENGINE_H$/;"	d
VIEW_CUR_WORD_BG	typeSettings.h	/^		VIEW_CUR_WORD_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_HTMLTAG	typeSettings.h	/^		VIEW_HTMLTAG,		\/\/	HTML É^ÉOã≠í≤$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_LINENUM	typeSettings.h	/^		VIEW_LINENUM,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_LINE_CURSOR	typeSettings.h	/^		VIEW_LINE_CURSOR,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_MARK_BG	typeSettings.h	/^		VIEW_MARK_BG,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_NEWLINE	typeSettings.h	/^		VIEW_NEWLINE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_RT_BTM_PICTURE	globalSettings.h	/^		VIEW_RT_BTM_PICTURE,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
VIEW_TAB	typeSettings.h	/^		VIEW_TAB = 0,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VIEW_ZEN_SPACE	typeSettings.h	/^		VIEW_ZEN_SPACE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
VI_CHAR_SEL_MODE	TextCursor.h	/^		VI_CHAR_SEL_MODE,		\/\/	vi „ÅÆ v „É¢„Éº„Éâ$/;"	e	enum:TextCursor::__anonc94c84fe0103
VI_COMMAND	globalSettings.h	/^		VI_COMMAND,					\/\/	vi „Ç≥„Éû„É≥„ÉâÊúâÂäπ$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
VI_LINE_SEL_MODE	TextCursor.h	/^		VI_LINE_SEL_MODE,		\/\/	vi „ÅÆ v „É¢„Éº„Éâ$/;"	e	enum:TextCursor::__anonc94c84fe0103
ViCmd	ViEngine.h	/^namespace ViCmd {$/;"	n
ViEngine	ViEngine.cpp	/^ViEngine::ViEngine(QObject *parent)$/;"	f	class:ViEngine
ViEngine	ViEngine.h	/^class ViEngine : public QObject$/;"	c
ViewLine	viewLineMgr.h	/^	ViewLine(const ViewLine &x)$/;"	f	struct:ViewLine
ViewLine	viewLineMgr.h	/^	ViewLine(int docLine = 0, int offset = 0 \/*, int flags = 0*\/)$/;"	f	struct:ViewLine
ViewLine	viewLineMgr.h	/^struct ViewLine$/;"	s
ViewLineMgr	viewLineMgr.cpp	/^ViewLineMgr::ViewLineMgr(EditView *view \/*, Buffer *buffer*\/)$/;"	f	class:ViewLineMgr
ViewLineMgr	viewLineMgr.h	/^class ViewLineMgr : public QObject$/;"	c
ViewTokenizer	ViewTokenizer.cpp	/^ViewTokenizer::ViewTokenizer(const TypeSettings *typeSettings, const Buffer *buffer, int first, /;"	f	class:ViewTokenizer
ViewTokenizer	ViewTokenizer.h	/^class ViewTokenizer$/;"	c
WHOLE_WORD_ONLY	globalSettings.h	/^		WHOLE_WORD_ONLY,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
WITH_BOM	globalSettings.h	/^		WITH_BOM,					\/\/	BOM‰ªò„Åç$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
WORD_COMPLETION	typeSettings.h	/^		WORD_COMPLETION,				\/\/	íPåÍé©ìÆï‚äÆ$/;"	e	enum:TypeSettings::__anona2242e4e0103
YANK_LINE	ViEngine.h	/^		YANK_LINE,				\/\/	Ë°å„É§„É≥„ÇØ$/;"	e	enum:ViCmd::__anon1176e0b00203
YANK_TEXT	ViEngine.h	/^		YANK_TEXT,				\/\/	ÈÅ∏ÊäûÁØÑÂõ≤„Çí„É§„É≥„ÇØ$/;"	e	enum:ViCmd::__anon1176e0b00203
YankBufferItem	ViEngine.h	/^	YankBufferItem(bool bLine = false, QString text = QString())$/;"	f	struct:YankBufferItem
YankBufferItem	ViEngine.h	/^	YankBufferItem(const YankBufferItem &x)$/;"	f	struct:YankBufferItem
YankBufferItem	ViEngine.h	/^struct YankBufferItem$/;"	s
ZEN_CODING_PATH	globalSettings.h	/^		ZEN_CODING_PATH,$/;"	e	enum:GlobalSettings::__anon9c89bfdd0103
ZEN_SPACE	ViewTokenizer.h	/^		ZEN_SPACE,	\/\/	ÂÖ®ËßíÁ©∫ÁôΩ$/;"	e	enum:ViewTokenizer::__anon4c643b110103
ZEN_SPACE	drawTokenizer.h	/^		ZEN_SPACE,	\/\/	ëSäpãÛîí$/;"	e	enum:DrawTokenizer::__anon12121c440103
ZEN_SPACE	typeSettings.h	/^		ZEN_SPACE,$/;"	e	enum:TypeSettings::__anona2242e4e0103
ZenCodingFilePath	GlobalStgDlg.cpp	/^void GlobalStgDlg::ZenCodingFilePath()$/;"	f	class:GlobalStgDlg	typeref:typename:void
_APS_NEXT_COMMAND_VALUE	resource.h	/^#define _APS_NEXT_COMMAND_VALUE /;"	d
_APS_NEXT_CONTROL_VALUE	resource.h	/^#define _APS_NEXT_CONTROL_VALUE /;"	d
_APS_NEXT_RESOURCE_VALUE	resource.h	/^#define _APS_NEXT_RESOURCE_VALUE /;"	d
_APS_NEXT_SYMED_VALUE	resource.h	/^#define _APS_NEXT_SYMED_VALUE /;"	d
_HEADER_ASSOCPAREN_H	assocParen.h	/^#define		_HEADER_ASSOCPAREN_H$/;"	d
_HEADER_CHARENCODING_H	charEncoding.h	/^#define		_HEADER_CHARENCODING_H$/;"	d
_HEADER_DRAWTOKENIZER_H	drawTokenizer.h	/^#define		_HEADER_DRAWTOKENIZER_H$/;"	d
_HEADER_GLOBALSETTINGS_H	globalSettings.h	/^#define		_HEADER_GLOBALSETTINGS_H$/;"	d
_HEADER_SETTINGSMGR_H	settingsMgr.h	/^#define		_HEADER_SETTINGSMGR_H$/;"	d
_HEADER_TOKENIZER_H	tokenizer.h	/^#define		_HEADER_TOKENIZER_H$/;"	d
_HEADER_TYPESTG_H	typeSettings.h	/^#define		_HEADER_TYPESTG_H$/;"	d
_HEADER_ZENCODING_H	zenCoding.h	/^#define		_HEADER_ZENCODING_H$/;"	d
__anon1149ced60103	tokenizer.h	/^	enum {$/;"	g	class:Tokenizer
__anon1176e0b00103	ViEngine.h	/^	enum {$/;"	g	namespace:Mode
__anon1176e0b00203	ViEngine.h	/^	enum {$/;"	g	namespace:ViCmd
__anon1176e0b00303	ViEngine.h	/^	enum {$/;"	g	class:ViEngine
__anon12121c440103	drawTokenizer.h	/^	enum {$/;"	g	class:DrawTokenizer
__anon15d4c0840103	viewLineMgr.h	/^	enum {$/;"	g	struct:ViewLine
__anon34aec7180103	MainWindow.h	/^enum {$/;"	g
__anon34aec7180203	MainWindow.h	/^enum {$/;"	g
__anon34aec7180303	MainWindow.h	/^    enum { MaxRecentFiles = 10 + 26 };$/;"	g	class:MainWindow
__anon34aec7180403	MainWindow.h	/^    enum { MaxFavoriteFiles = 10 + 26 };$/;"	g	class:MainWindow
__anon34aec7180503	MainWindow.h	/^    enum { MaxRecentDirs = 10 + 26 };$/;"	g	class:MainWindow
__anon34aec7180603	MainWindow.h	/^    enum { MaxClipboardHist = 10 + 26 };$/;"	g	class:MainWindow
__anon4962a01a0102	GrepEngine.cpp	/^				[](const QString &lhs, const QString &rhs) { return lhs.compare(rhs, Qt::CaseInsensitive) < /;"	f	function:GrepEngine::doGrepDir	file:
__anon4962a01a0202	GrepEngine.cpp	/^					[](const QString &lhs, const QString &rhs) { return lhs.compare(rhs, Qt::CaseInsensitive) </;"	f	function:GrepEngine::doGrepDir	file:
__anon4c643b110103	ViewTokenizer.h	/^	enum {$/;"	g	class:ViewTokenizer
__anon9c89bfdd0103	globalSettings.h	/^	enum {$/;"	g	class:GlobalSettings
__anon9c89bfdd0203	globalSettings.h	/^	enum {$/;"	g	class:GlobalSettings
__anona2242e4e0103	typeSettings.h	/^	enum {$/;"	g	class:TypeSettings
__anonaec742250103	assocParen.cpp	/^enum {$/;"	g	file:
__anonc94c84fe0103	TextCursor.h	/^	enum {$/;"	g	class:TextCursor
__anonf78c89200103	charEncoding.h	/^	enum {$/;"	g	namespace:CharEncoding
__anonf78c89200203	charEncoding.h	/^	enum {$/;"	g	namespace:CharEncoding
__anonf91707b50103	Document.cpp	/^	enum {$/;"	g	function:Document::buildMinMap	file:
__anonfc0e76330103	ex.cpp	/^enum {$/;"	g	file:
aboutToShowColorTheme	MainWindow.cpp	/^void MainWindow::aboutToShowColorTheme()$/;"	f	class:MainWindow	typeref:typename:void
accept	GlobalStgDlg.cpp	/^void GlobalStgDlg::accept()$/;"	f	class:GlobalStgDlg	typeref:typename:void
accept	NamedColorDlg.cpp	/^void NamedColorDlg::accept()$/;"	f	class:NamedColorDlg	typeref:typename:void
accept	TypeStgDlg.cpp	/^void TypeStgDlg::accept()$/;"	f	class:TypeStgDlg	typeref:typename:void
addNewView	MainWindow.cpp	/^void MainWindow::addNewView(EditView *view, QIcon *icon, const QString &title, const QString &pa/;"	f	class:MainWindow	typeref:typename:void
addToFavoriteFileList	MainWindow.cpp	/^void MainWindow::addToFavoriteFileList(const QString &fullPathName)		\/\/	„É¨„Ç∏„Çπ„Éà„É™„ÅÆ "fa/;"	f	class:MainWindow	typeref:typename:void
addToOutlineBar	MainWindow.cpp	/^void MainWindow::addToOutlineBar(EditView* view)$/;"	f	class:MainWindow	typeref:typename:void
addToRecentFileList	MainWindow.cpp	/^void MainWindow::addToRecentFileList(const QString &fullPath)		\/\/	„É¨„Ç∏„Çπ„Éà„É™„ÅÆ "recentFi/;"	f	class:MainWindow	typeref:typename:void
anchor	TextCursor.h	/^	int		anchor() const { return m_anchor; }$/;"	f	class:TextCursor	typeref:typename:int
appendCopy	EditView.cpp	/^int EditView::appendCopy()$/;"	f	class:EditView	typeref:typename:int
appendCut	EditView.cpp	/^void EditView::appendCut()$/;"	f	class:EditView	typeref:typename:void
appendFilterText	AutoCompletionDlg.cpp	/^bool AutoCompletionDlg::appendFilterText(const QString &text)$/;"	f	class:AutoCompletionDlg	typeref:typename:bool
appendInsertedText	ViEngine.cpp	/^void ViEngine::appendInsertedText(const QString &text)$/;"	f	class:ViEngine	typeref:typename:void
appendToExCmdHist	ex.cpp	/^void MainWindow::appendToExCmdHist(const QString &cmd)$/;"	f	class:MainWindow	typeref:typename:void
assocParenPosition	assocParen.cpp	/^pos_t assocParenPosition(TypeSettings *typeSettings, const Buffer &buffer, pos_t pos, bool &bSha/;"	f	typeref:typename:pos_t
assocParenPositionBackward	assocParen.cpp	/^pos_t assocParenPositionBackward(TypeSettings *typeSettings, const Buffer &buffer, const pos_t p/;"	f	typeref:typename:pos_t
assocParenPositionForward	assocParen.cpp	/^pos_t assocParenPositionForward(TypeSettings *typeSettings, const Buffer &buffer, pos_t pos,$/;"	f	typeref:typename:pos_t
assocSharpLine	assocParen.cpp	/^int assocSharpLine(const Buffer &buffer, pos_t pos, int ln, int dir)$/;"	f	typeref:typename:int
autoCmplBackSpace	completion.cpp	/^void EditView::autoCmplBackSpace()$/;"	f	class:EditView	typeref:typename:void
autoCmplBackSpace	ex.cpp	/^void MainWindow::autoCmplBackSpace()$/;"	f	class:MainWindow	typeref:typename:void
autoCmplDecided	completion.cpp	/^void EditView::autoCmplDecided(QString text, bool autoClosed)$/;"	f	class:EditView	typeref:typename:void
autoCmplDecided	ex.cpp	/^void MainWindow::autoCmplDecided(QString text, bool)$/;"	f	class:MainWindow	typeref:typename:void
autoCmplDelete	completion.cpp	/^void EditView::autoCmplDelete(bool ctrl, bool shift)$/;"	f	class:EditView	typeref:typename:void
autoCmplDelete	ex.cpp	/^void MainWindow::autoCmplDelete(bool, bool)$/;"	f	class:MainWindow	typeref:typename:void
autoCmplKeyPressed	completion.cpp	/^void EditView::autoCmplKeyPressed(QString text)$/;"	f	class:EditView	typeref:typename:void
autoCmplKeyPressed	ex.cpp	/^void MainWindow::autoCmplKeyPressed(QString text)$/;"	f	class:MainWindow	typeref:typename:void
autoCmplLeft	completion.cpp	/^void EditView::autoCmplLeft(bool ctrl, bool shift)$/;"	f	class:EditView	typeref:typename:void
autoCmplLeft	ex.cpp	/^void MainWindow::autoCmplLeft(bool, bool)$/;"	f	class:MainWindow	typeref:typename:void
autoCmplPasted	completion.cpp	/^void EditView::autoCmplPasted()$/;"	f	class:EditView	typeref:typename:void
autoCmplPasted	ex.cpp	/^void MainWindow::autoCmplPasted()$/;"	f	class:MainWindow	typeref:typename:void
autoCmplRejected	completion.cpp	/^void EditView::autoCmplRejected()$/;"	f	class:EditView	typeref:typename:void
autoCmplRejected	ex.cpp	/^void MainWindow::autoCmplRejected()$/;"	f	class:MainWindow	typeref:typename:void
autoCmplRight	completion.cpp	/^void EditView::autoCmplRight(bool ctrl, bool shift)$/;"	f	class:EditView	typeref:typename:void
autoCmplRight	ex.cpp	/^void MainWindow::autoCmplRight(bool, bool)$/;"	f	class:MainWindow	typeref:typename:void
autoCmplZenCoding	completion.cpp	/^void EditView::autoCmplZenCoding()$/;"	f	class:EditView	typeref:typename:void
autoCmplZenCoding	ex.cpp	/^void MainWindow::autoCmplZenCoding()$/;"	f	class:MainWindow	typeref:typename:void
autoIndentText	EditView.cpp	/^QString EditView::autoIndentText(\/*bool,*\/ bool nxline)$/;"	f	class:EditView	typeref:typename:QString
autoIndentText	autoIndent.cpp	/^QString autoIndentText(TypeSettings *typeSettings,$/;"	f	typeref:typename:QString
begWord	TextCursor.cpp	/^int TextCursor::begWord()$/;"	f	class:TextCursor	typeref:typename:int
bom	Document.h	/^	bool	bom() const { return m_bBom; }$/;"	f	class:Document	typeref:typename:bool
boolValue	globalSettings.h	/^	bool		boolValue(int ix) const { return m_boolValues[ix]; }$/;"	f	class:GlobalSettings	typeref:typename:bool
boolValue	typeSettings.h	/^	bool	boolValue(int ix) const { return m_boolValues[ix]; }$/;"	f	class:TypeSettings	typeref:typename:bool
boxPaste	EditView.cpp	/^void EditView::boxPaste(const QString &)$/;"	f	class:EditView	typeref:typename:void
btnSelectColor	TypeStgDlg.cpp	/^void TypeStgDlg::btnSelectColor()$/;"	f	class:TypeStgDlg	typeref:typename:void
buffer	Document.h	/^	Buffer	*buffer() { return m_buffer; }$/;"	f	class:Document	typeref:typename:Buffer *
buffer	Document.h	/^	const Buffer	*buffer() const { return m_buffer; }$/;"	f	class:Document	typeref:typename:const Buffer *
buffer	EditView.h	/^	Buffer	*buffer() { return m_buffer; }$/;"	f	class:EditView	typeref:typename:Buffer *
buffer	EditView.h	/^	const Buffer	*buffer() const { return m_buffer; }$/;"	f	class:EditView	typeref:typename:const Buffer *
bufferSize	EditView.cpp	/^size_t EditView::bufferSize() const$/;"	f	class:EditView	typeref:typename:size_t
buildMinMap	Document.cpp	/^void Document::buildMinMap()$/;"	f	class:Document	typeref:typename:void
byte	Document.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	TextCursor.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	ViEngine.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	ViewTokenizer.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	charEncoding.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	drawTokenizer.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
byte	ex.cpp	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char	file:
byte_t	Document.h	/^typedef unsigned __int8 byte_t;$/;"	t	typeref:typename:unsigned __int8
byte_t	TextCursor.h	/^typedef unsigned __int8 byte_t;$/;"	t	typeref:typename:unsigned __int8
byte_t	ViEngine.h	/^typedef unsigned __int8 byte_t;$/;"	t	typeref:typename:unsigned __int8
byte_t	charEncoding.h	/^typedef unsigned __int8 byte_t;$/;"	t	typeref:typename:unsigned __int8
canRedo	Document.cpp	/^bool Document::canRedo() const$/;"	f	class:Document	typeref:typename:bool
canUndo	Document.cpp	/^bool Document::canUndo() const$/;"	f	class:Document	typeref:typename:bool
cbyte	charEncoding.h	/^typedef const unsigned char cbyte;$/;"	t	typeref:typename:const unsigned char
cchar	CompletionWidget.cpp	/^typedef const char cchar;$/;"	t	typeref:typename:const char	file:
cchar	Document.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cchar	MainWindow.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cchar	NamedColorDlg.cpp	/^typedef const char cchar;$/;"	t	typeref:typename:const char	file:
cchar	assocParen.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cchar	charEncoding.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cchar	globalSettings.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cchar	typeSettings.h	/^typedef const char cchar;$/;"	t	typeref:typename:const char
cdy	ViEngine.h	/^	wchar_t	cdy() const { return m_cdy; }$/;"	f	class:ViEngine	typeref:typename:wchar_t
charAt	Document.cpp	/^wchar_t Document::charAt(pos_t pos) const$/;"	f	class:Document	typeref:typename:wchar_t
charAt	EditView.cpp	/^wchar_t EditView::charAt(pos_t pos) const$/;"	f	class:EditView	typeref:typename:wchar_t
charAt	TextCursor.cpp	/^wchar_t TextCursor::charAt() const$/;"	f	class:TextCursor	typeref:typename:wchar_t
charAt	TextCursor.cpp	/^wchar_t TextCursor::charAt(int pos) const$/;"	f	class:TextCursor	typeref:typename:wchar_t
charEncoding	Document.h	/^	uchar	charEncoding() const { return m_charEncoding; }$/;"	f	class:Document	typeref:typename:uchar
check	viewLineMgr.cpp	/^void ViewLineMgr::check() const		\/\/	for Debug$/;"	f	class:ViewLineMgr	typeref:typename:void
checkAssocParen	EditView.cpp	/^void EditView::checkAssocParen()$/;"	f	class:EditView	typeref:typename:void
checkAssocParen	EditView.cpp	/^void EditView::checkAssocParen(int vln, pos_t pos)$/;"	f	class:EditView	typeref:typename:void
checkAssocSharpTag	EditView.cpp	/^void EditView::checkAssocSharpTag()$/;"	f	class:EditView	typeref:typename:void
checkBuffer	TestViCommands.cpp	/^bool TestViCommands::checkBuffer(QTextStream &in)$/;"	f	class:TestViCommands	typeref:typename:bool
checkCharEncoding	charEncoding.cpp	/^uchar checkCharEncoding(cuchar *ptr, cuchar *endptr, int &bomLength)$/;"	f	typeref:typename:uchar
checkCursor	TestViCommands.cpp	/^void TestViCommands::checkCursor()$/;"	f	class:TestViCommands	typeref:typename:void
checkEndBraceCompletion	completion.cpp	/^bool EditView::checkEndBraceCompletion(int ln)$/;"	f	class:EditView	typeref:typename:bool
checkEndTagCompletion	completion.cpp	/^bool EditView::checkEndTagCompletion(QStringList &lst,$/;"	f	class:EditView	typeref:typename:bool
checkFileNameCompletion	completion.cpp	/^bool EditView::checkFileNameCompletion(QStringList &lst,$/;"	f	class:EditView	typeref:typename:bool
checkNewLineCode	charEncoding.cpp	/^byte checkNewLineCode(cbyte *ptr, cbyte *endptr, byte charCode)$/;"	f	typeref:typename:byte
checkRange	zenCoding.cpp	/^int checkRange(QString &text, int &i)$/;"	f	typeref:typename:int
checkSrcFileNameCompletion	completion.cpp	/^bool EditView::checkSrcFileNameCompletion(QStringList &lst,$/;"	f	class:EditView	typeref:typename:bool
checkStatement	zenCoding.cpp	/^QChar checkStatement(QString &keyText, int &ix)$/;"	f	typeref:typename:QChar
checkUnSaved	MainWindow.cpp	/^bool MainWindow::checkUnSaved()$/;"	f	class:MainWindow	typeref:typename:bool
clear	OutputView.cpp	/^void OutputView::clear()$/;"	f	class:OutputView	typeref:typename:void
clear	viewLineMgr.cpp	/^void ViewLineMgr::clear()$/;"	f	class:ViewLineMgr	typeref:typename:void
clearLineFlags	EditView.cpp	/^void EditView::clearLineFlags()$/;"	f	class:EditView	typeref:typename:void
clearLineNumbers	ViEngine.cpp	/^void ViEngine::clearLineNumbers()$/;"	f	class:ViEngine	typeref:typename:void
clearMark	EditView.cpp	/^void EditView::clearMark(pos_t pos)$/;"	f	class:EditView	typeref:typename:void
clearMatchedString	MainWindow.h	/^	void	clearMatchedString() { m_matchedString.clear(); }$/;"	f	class:MainWindow	typeref:typename:void
clearOpenCloseParenPos	EditView.cpp	/^void EditView::clearOpenCloseParenPos()$/;"	f	class:EditView	typeref:typename:void
clearOutput	MainWindow.cpp	/^void MainWindow::clearOutput()$/;"	f	class:MainWindow	typeref:typename:void
clearSelection	TextCursor.cpp	/^void TextCursor::clearSelection()$/;"	f	class:TextCursor	typeref:typename:void
clearUndoMgr	Document.cpp	/^void Document::clearUndoMgr()$/;"	f	class:Document	typeref:typename:void
clearVMode	ViEngine.h	/^	void	clearVMode() { m_vMode = 0; }$/;"	f	class:ViEngine	typeref:typename:void
clibralyCompletion	completion.cpp	/^bool EditView::clibralyCompletion(QStringList &lst, const QString &pat, pos_t &first)$/;"	f	class:EditView	typeref:typename:bool
closeAllUndoBlock	EditView.cpp	/^void EditView::closeAllUndoBlock()$/;"	f	class:EditView	typeref:typename:void
closeAutoCompletionDlg	completion.cpp	/^void EditView::closeAutoCompletionDlg()$/;"	f	class:EditView	typeref:typename:void
closeAutoCompletionDlg	ex.cpp	/^void MainWindow::closeAutoCompletionDlg()$/;"	f	class:MainWindow	typeref:typename:void
closeEvent	MainWindow.cpp	/^void MainWindow::closeEvent(QCloseEvent *event)$/;"	f	class:MainWindow	typeref:typename:void
closeNullDocs	MainWindow.cpp	/^void MainWindow::closeNullDocs()			\/\/	Á©∫„ÅÆ„Éâ„Ç≠„É•„É°„É≥„Éà„Çí„ÇØ„É≠„Éº„Ç∫$/;"	f	class:MainWindow	typeref:typename:void
closeUndoBlock	EditView.cpp	/^void EditView::closeUndoBlock()$/;"	f	class:EditView	typeref:typename:void
cmd	ViEngine.h	/^	int	cmd() const { return m_cmd; }$/;"	f	class:ViEngine	typeref:typename:int
cmdLineChar	ViEngine.h	/^	QChar		cmdLineChar() const { return m_cmdLineChar; }$/;"	f	class:ViEngine	typeref:typename:QChar
cmdText	ViEngine.h	/^	const QString cmdText() const { return m_cmdText; }$/;"	f	class:ViEngine	typeref:typename:const QString
cmplTextChanged	completion.cpp	/^void EditView::cmplTextChanged(const QString &text)$/;"	f	class:EditView	typeref:typename:void
codecName	Document.cpp	/^QByteArray Document::codecName() const$/;"	f	class:Document	typeref:typename:QByteArray
codecName	EditView.cpp	/^QByteArray EditView::codecName() const$/;"	f	class:EditView	typeref:typename:QByteArray
collapse	viewLineMgr.cpp	/^void ViewLineMgr::collapse(int vln1, int vln2)$/;"	f	class:ViewLineMgr	typeref:typename:void
color	typeSettings.h	/^	QColor	color(int ix) const { return m_colors[ix]; }$/;"	f	class:TypeSettings	typeref:typename:QColor
colorKey	typeSettings.cpp	/^cchar *TypeSettings::colorKey(int ix) const$/;"	f	class:TypeSettings	typeref:typename:cchar *
colorKeyIndex	typeSettings.cpp	/^int TypeSettings::colorKeyIndex(const QString &key) const$/;"	f	class:TypeSettings	typeref:typename:int
colorName	NamedColorDlg.h	/^	QString colorName() const { return m_colorName; }$/;"	f	class:NamedColorDlg	typeref:typename:QString
colorTable	NamedColorDlg.cpp	/^static SColorTable colorTable[] = {$/;"	v	typeref:typename:SColorTable[]	file:
colorTheme	MainWindow.cpp	/^void MainWindow::colorTheme()$/;"	f	class:MainWindow	typeref:typename:void
columnToPos	EditView.cpp	/^int EditView::columnToPos(int vln, int clmn) const$/;"	f	class:EditView	typeref:typename:int
commandLineMode	ex.cpp	/^void MainWindow::commandLineMode(QChar qch)$/;"	f	class:MainWindow	typeref:typename:void
completion	completion.cpp	/^void EditView::completion()$/;"	f	class:EditView	typeref:typename:void
completion	completion.cpp	/^void EditView::completion(bool keyword)$/;"	f	class:EditView	typeref:typename:void
copy	Document.cpp	/^void Document::copy(pos_t pos, ssize_t sz, bool append)$/;"	f	class:Document	typeref:typename:void
copy	EditView.cpp	/^int EditView::copy(bool bCut, bool append)$/;"	f	class:EditView	typeref:typename:int
copyImplCode	EditView.cpp	/^void EditView::copyImplCode()$/;"	f	class:EditView	typeref:typename:void
count	AutoCompletionDlg.cpp	/^int AutoCompletionDlg::count() const$/;"	f	class:AutoCompletionDlg	typeref:typename:int
count	CompletionWidget.cpp	/^int CompletionWidget::count() const$/;"	f	class:CompletionWidget	typeref:typename:int
createActions	MainWindow.cpp	/^void MainWindow::createActions()$/;"	f	class:MainWindow	typeref:typename:void
createColorIcon	NamedColorDlg.cpp	/^QIcon createColorIcon(int color)$/;"	f	typeref:typename:QIcon
createDockWindows	MainWindow.cpp	/^void MainWindow::createDockWindows()$/;"	f	class:MainWindow	typeref:typename:void
createMenus	MainWindow.cpp	/^void MainWindow::createMenus()$/;"	f	class:MainWindow	typeref:typename:void
createView	MainWindow.cpp	/^EditView *MainWindow::createView(QString pathName)$/;"	f	class:MainWindow	typeref:typename:EditView *
cuchar	charEncoding.h	/^typedef const unsigned char cuchar;$/;"	t	typeref:typename:const unsigned char
curBottomOfScreen	EditView.cpp	/^void EditView::curBottomOfScreen(bool vi, int n)$/;"	f	class:EditView	typeref:typename:void
curMiddleOfScreen	EditView.cpp	/^void EditView::curMiddleOfScreen(bool vi)$/;"	f	class:EditView	typeref:typename:void
curMove	viEditView.cpp	/^void EditView::curMove(int mv, int n, bool vi)$/;"	f	class:EditView	typeref:typename:void
curTopOfScreen	EditView.cpp	/^void EditView::curTopOfScreen(bool vi, int n)$/;"	f	class:EditView	typeref:typename:void
currentRowChanged	CompletionWidget.cpp	/^void CompletionWidget::currentRowChanged(int ix)$/;"	f	class:CompletionWidget	typeref:typename:void
currentViewChangedAtOutlineBar	MainWindow.cpp	/^void MainWindow::currentViewChangedAtOutlineBar(EditView* view)$/;"	f	class:MainWindow	typeref:typename:void
currentWidget	MainWindow.cpp	/^EditView *MainWindow::currentWidget()$/;"	f	class:MainWindow	typeref:typename:EditView *
cursorLine	EditView.cpp	/^int EditView::cursorLine() const		\/\/	[0, EOFLine]$/;"	f	class:EditView	typeref:typename:int
cursorPosition	EditView.cpp	/^pos_t EditView::cursorPosition() const$/;"	f	class:EditView	typeref:typename:pos_t
cut	EditView.cpp	/^void EditView::cut(bool append)$/;"	f	class:EditView	typeref:typename:void
cwchar	ViewTokenizer.cpp	/^typedef const wchar_t cwchar;$/;"	t	typeref:typename:const wchar_t	file:
cwchar	autoIndent.cpp	/^typedef const wchar_t cwchar;$/;"	t	typeref:typename:const wchar_t	file:
cwchar	globalSettings.h	/^typedef const wchar_t cwchar;$/;"	t	typeref:typename:const wchar_t
cwchar	typeSettings.cpp	/^typedef const wchar_t cwchar;$/;"	t	typeref:typename:const wchar_t	file:
defaultCodecName	globalSettings.cpp	/^QByteArray GlobalSettings::defaultCodecName() const$/;"	f	class:GlobalSettings	typeref:typename:QByteArray
defaultExt	settingsMgr.cpp	/^QString SettingsMgr::defaultExt(int type)$/;"	f	class:SettingsMgr	typeref:typename:QString
defaultExt	typeSettings.h	/^	QString	defaultExt() const { return m_defaultExt; }		\/\/	ÉfÉtÉHÉãÉgägí£éq$/;"	f	class:TypeSettings	typeref:typename:QString
deleteChar	TextCursor.cpp	/^void TextCursor::deleteChar(bool isBS, bool vi)$/;"	f	class:TextCursor	typeref:typename:void
deletePrevChar	TextCursor.cpp	/^void TextCursor::deletePrevChar(bool vi)$/;"	f	class:TextCursor	typeref:typename:void
deleteText	Document.cpp	/^void Document::deleteText(pos_t pos, ssize_t sz, bool BS)$/;"	f	class:Document	typeref:typename:void
deleteText	EditView.cpp	/^void EditView::deleteText(pos_t pos, ssize_t sz, bool BS)$/;"	f	class:EditView	typeref:typename:void
deleted	viewLineMgr.cpp	/^void ViewLineMgr::deleted(int dln, int d)$/;"	f	class:ViewLineMgr	typeref:typename:void
dir	GrepDlg.cpp	/^QString GrepDlg::dir() const$/;"	f	class:GrepDlg	typeref:typename:QString
dirViewClicked	GrepDlg.cpp	/^void GrepDlg::dirViewClicked( QModelIndex index )$/;"	f	class:GrepDlg	typeref:typename:void
dirViewDoubleClicked	GrepDlg.cpp	/^void GrepDlg::dirViewDoubleClicked( QModelIndex index )$/;"	f	class:GrepDlg	typeref:typename:void
doCmd	ViEngine.cpp	/^void ViEngine::doCmd()$/;"	f	class:ViEngine	typeref:typename:void
doExCommand	MainWindow.h	/^	void	doExCommand(QString cmd) { doExCommand(cmd, false); }$/;"	f	class:MainWindow	typeref:typename:void
doExCommand	ex.cpp	/^void MainWindow::doExCommand(QString cmd, bool bGlobal)$/;"	f	class:MainWindow	typeref:typename:void
doFind	ViEngine.cpp	/^void ViEngine::doFind(const QString &pat, bool forward)$/;"	f	class:ViEngine	typeref:typename:void
doFindString	MainWindow.cpp	/^void MainWindow::doFindString()$/;"	f	class:MainWindow	typeref:typename:void
doFindText	viEditView.cpp	/^void EditView::doFindText(const QString &pat, bool forward)		\/\/	\/ ? Ê§úÁ¥¢Âá¶ÁêÜ$/;"	f	class:EditView	typeref:typename:void
doFindText	viEditView.cpp	/^void EditView::doFindText(const QString &text0)$/;"	f	class:EditView	typeref:typename:void
doGrep	GrepEngine.cpp	/^void GrepEngine::doGrep(QString pat, QString extentions, QString dirStr, QString exclude)$/;"	f	class:GrepEngine	typeref:typename:void
doGrepDir	GrepEngine.cpp	/^int GrepEngine::doGrepDir(QString pat, QString extentions, QString dirStr, const QRegExp &regexp/;"	f	class:GrepEngine	typeref:typename:int
doGrepFile	GrepEngine.cpp	/^int GrepEngine::doGrepFile(const QString &fullPath, const QString &pat, const QRegExp &regexp)$/;"	f	class:GrepEngine	typeref:typename:int
doInsertText	EditView.cpp	/^void EditView::doInsertText(const QString &text, bool ctrl, bool shift, bool alt)$/;"	f	class:EditView	typeref:typename:void
doLineBreak	viewLineMgr.cpp	/^void ViewLineMgr::doLineBreak(int dln, int &vln)$/;"	f	class:ViewLineMgr	typeref:typename:void
doLineBreakAll	viewLineMgr.cpp	/^void ViewLineMgr::doLineBreakAll()$/;"	f	class:ViewLineMgr	typeref:typename:void
doMoveCopyCommand	ex.cpp	/^void MainWindow::doMoveCopyCommand(EditView *view, QString &arg)$/;"	f	class:MainWindow	typeref:typename:void
doNextTab	MainWindow.cpp	/^void MainWindow::doNextTab(int n)$/;"	f	class:MainWindow	typeref:typename:void
doOutput	MainWindow.cpp	/^void MainWindow::doOutput(const QString &text)		\/\/	„Ç¢„Ç¶„Éà„Éó„ÉÉ„Éà„Å´„ÉÜ„Ç≠„Çπ„ÉàÂá∫Âäõ$/;"	f	class:MainWindow	typeref:typename:void
doOutputToBar	MainWindow.cpp	/^void MainWindow::doOutputToBar(const QString &text)		\/\/	„Ç¢„Ç¶„Éà„Éó„ÉÉ„Éà„Éê„Éº„Å´„ÉÜ„Ç≠„Çπ„Éà/;"	f	class:MainWindow	typeref:typename:void
doOutputToGrepView	MainWindow.cpp	/^void MainWindow::doOutputToGrepView(const QString &)		\/\/	grep„Éì„É•„Éº„Å´„ÉÜ„Ç≠„Çπ„ÉàÂá∫Âäõ$/;"	f	class:MainWindow	typeref:typename:void
doPrevTab	MainWindow.cpp	/^void MainWindow::doPrevTab(int n)$/;"	f	class:MainWindow	typeref:typename:void
doSave	MainWindow.cpp	/^bool MainWindow::doSave(EditView *view)$/;"	f	class:MainWindow	typeref:typename:bool
doSaveAs	MainWindow.cpp	/^bool MainWindow::doSaveAs(EditView *view)$/;"	f	class:MainWindow	typeref:typename:bool
doSearchCommand	ex.cpp	/^void MainWindow::doSearchCommand(EditView* view, QString& text)$/;"	f	class:MainWindow	typeref:typename:void
doSubstitute	ex.cpp	/^void MainWindow::doSubstitute(EditView *view, const QString &arg)$/;"	f	class:MainWindow	typeref:typename:void
doTest	TestViCommands.cpp	/^void TestViCommands::doTest()$/;"	f	class:TestViCommands	typeref:typename:void
doViCommand	ViEngine.h	/^	void	doViCommand(const QString &cmd) { processCommandText(cmd); }$/;"	f	class:ViEngine	typeref:typename:void
doViCommand	ViEngine.h	/^	void	doViCommand(wchar_t ch) { processCommand(ch); }$/;"	f	class:ViEngine	typeref:typename:void
doViCommand	viEditView.cpp	/^void EditView::doViCommand()		\/\/	viEngine „Åå‰øùÊúâ„Åô„Çã vi „Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å$/;"	f	class:EditView	typeref:typename:void
docLineToViewLine	EditView.cpp	/^int EditView::docLineToViewLine(int dln) const$/;"	f	class:EditView	typeref:typename:int
docLineToViewLine	viewLineMgr.cpp	/^int ViewLineMgr::docLineToViewLine(int ln) const$/;"	f	class:ViewLineMgr	typeref:typename:int
document	EditView.h	/^	Document*	document() { return m_document; }$/;"	f	class:EditView	typeref:typename:Document *
document	EditView.h	/^	const Document*	document() const { return m_document; }$/;"	f	class:EditView	typeref:typename:const Document *
dragEnterEvent	MainWindow.cpp	/^void MainWindow::dragEnterEvent(QDragEnterEvent *event)$/;"	f	class:MainWindow	typeref:typename:void
drawAssocParenBG	EditView.cpp	/^void EditView::drawAssocParenBG(QPainter &painter, int vln, int py)$/;"	f	class:EditView	typeref:typename:void
drawAssocParenBG	EditView.cpp	/^void EditView::drawAssocParenBG(QPainter &pt)$/;"	f	class:EditView	typeref:typename:void
drawCursor	EditView.cpp	/^void EditView::drawCursor(QPainter& pt)$/;"	f	class:EditView	typeref:typename:void
drawLineCursor	EditView.cpp	/^void EditView::drawLineCursor(QPainter &pt)$/;"	f	class:EditView	typeref:typename:void
drawLineNumberArea	EditView.cpp	/^void EditView::drawLineNumberArea(QPainter& pt)$/;"	f	class:EditView	typeref:typename:void
drawLineText	EditView.cpp	/^void EditView::drawLineText(QPainter &pt,$/;"	f	class:EditView	typeref:typename:void
drawMatchedBG	EditView.cpp	/^void EditView::drawMatchedBG(QPainter &pt, int vln, int py)$/;"	f	class:EditView	typeref:typename:void
drawMatchedBG	EditView.cpp	/^void EditView::drawMatchedBG(QPainter&pt)$/;"	f	class:EditView	typeref:typename:void
drawMinMap	EditView.cpp	/^void EditView::drawMinMap(QPainter& pt)$/;"	f	class:EditView	typeref:typename:void
drawPreeditString	EditView.cpp	/^void EditView::drawPreeditString(QPainter&pt)$/;"	f	class:EditView	typeref:typename:void
drawSelection	EditView.cpp	/^void EditView::drawSelection(QPainter& pt)$/;"	f	class:EditView	typeref:typename:void
drawTextArea	EditView.cpp	/^void EditView::drawTextArea(QPainter& pt)$/;"	f	class:EditView	typeref:typename:void
drawTokenText	EditView.cpp	/^int EditView::drawTokenText(QPainter& pt,$/;"	f	class:EditView	typeref:typename:int
drawTrapezoid	CTabBar.cpp	/^void drawTrapezoid(QPainter& pt, const QRect& rct, QSize &isz, QIcon &icon, QString &txt,$/;"	f	typeref:typename:void
dropEvent	MainWindow.cpp	/^void MainWindow::dropEvent(QDropEvent* event)$/;"	f	class:MainWindow	typeref:typename:void
editForVar	EditView.cpp	/^bool EditView::editForVar(const QString &text)$/;"	f	class:EditView	typeref:typename:bool
emitModifiedChanged	EditView.h	/^	void	emitModifiedChanged() { emit modifiedChanged(); }$/;"	f	class:EditView	typeref:typename:void
endOfLinePosition	EditView.cpp	/^int EditView::endOfLinePosition(int dln) const		\/\/	Ë°å„ÅÆÊîπË°å‰ΩçÁΩÆ„ÇíËøî„Åô$/;"	f	class:EditView	typeref:typename:int
endSSWord	TextCursor.cpp	/^int TextCursor::endSSWord(int n)$/;"	f	class:TextCursor	typeref:typename:int
endWord	TextCursor.cpp	/^int TextCursor::endWord(int n)$/;"	f	class:TextCursor	typeref:typename:int
ensureLineBreak	viewLineMgr.cpp	/^bool ViewLineMgr::ensureLineBreak(int vln)$/;"	f	class:ViewLineMgr	typeref:typename:bool
enumValue	globalSettings.h	/^	int			enumValue(int ix) const { return m_enumValues[ix]; }$/;"	f	class:GlobalSettings	typeref:typename:int
escape	AutoCompletionDlg.cpp	/^QString escape(const QString &text)$/;"	f	typeref:typename:QString
escapeRegExpSpecialChars	EditView.cpp	/^QString escapeRegExpSpecialChars(const QString txt0)$/;"	f	typeref:typename:QString
eventFilter	AutoCompletionDlg.cpp	/^bool AutoCompletionDlg::eventFilter ( QObject * obj, QEvent * event )$/;"	f	class:AutoCompletionDlg	typeref:typename:bool
eventFilter	CompletionWidget.cpp	/^bool CompletionWidget::eventFilter ( QObject * obj, QEvent * event )$/;"	f	class:CompletionWidget	typeref:typename:bool
exclude	GrepDlg.cpp	/^QString GrepDlg::exclude() const$/;"	f	class:GrepDlg	typeref:typename:QString
execCommand	MainWindow.cpp	/^void MainWindow::execCommand(const QString &cmd)$/;"	f	class:MainWindow	typeref:typename:void
expand	viewLineMgr.cpp	/^void ViewLineMgr::expand(int vln)$/;"	f	class:ViewLineMgr	typeref:typename:void
expandAtr	zenCoding.cpp	/^QString expandAtr(const QString atr)$/;"	f	typeref:typename:QString
expandZenCodingCPP	zenCoding.cpp	/^bool expandZenCodingCPP($/;"	f	typeref:typename:bool
expandZenCodingHTML	zenCoding.cpp	/^void expandZenCodingHTML($/;"	f	typeref:typename:void
expandZenCodingPython	zenCoding.cpp	/^bool expandZenCodingPython($/;"	f	typeref:typename:bool
expandZenCodingRuby	zenCoding.cpp	/^bool expandZenCodingRuby($/;"	f	typeref:typename:bool
exposeBottomOfScreen	EditView.cpp	/^void EditView::exposeBottomOfScreen()$/;"	f	class:EditView	typeref:typename:void
exposeTopOfScreen	EditView.cpp	/^void EditView::exposeTopOfScreen()$/;"	f	class:EditView	typeref:typename:void
extentions	GrepDlg.cpp	/^QString GrepDlg::extentions() const$/;"	f	class:GrepDlg	typeref:typename:QString
fileNameCompletion	completion.cpp	/^bool EditView::fileNameCompletion(QStringList &lst, QString &pat, pos_t &first)$/;"	f	class:EditView	typeref:typename:bool
fileNameCompletion	ex.cpp	/^void MainWindow::fileNameCompletion(QDir &dir, QString filter)$/;"	f	class:MainWindow	typeref:typename:void
findBackward	EditView.cpp	/^bool EditView::findBackward(const QString &text, uint opt, bool loop, bool vi)$/;"	f	class:EditView	typeref:typename:bool
findForward	EditView.cpp	/^bool EditView::findForward(const QString &text, uint opt, bool loop, bool next, bool vi)$/;"	f	class:EditView	typeref:typename:bool
findNext	viEditView.cpp	/^void EditView::findNext(const QString &pat, bool vi)$/;"	f	class:EditView	typeref:typename:void
findPrev	viEditView.cpp	/^void EditView::findPrev(const QString &pat, bool vi)$/;"	f	class:EditView	typeref:typename:void
findString	GrepDlg.cpp	/^QString GrepDlg::findString() const$/;"	f	class:GrepDlg	typeref:typename:QString
findString	MainWindow.h	/^	QString	findString() const { return m_findString; }$/;"	f	class:MainWindow	typeref:typename:QString
findStringChanged	MainWindow.cpp	/^void MainWindow::findStringChanged(const QString &pat)$/;"	f	class:MainWindow	typeref:typename:void
findStringChanged	MainWindow.cpp	/^void MainWindow::findStringChanged(int)$/;"	f	class:MainWindow	typeref:typename:void
focusInEvent	EditView.cpp	/^void EditView::focusInEvent( QFocusEvent * event )$/;"	f	class:EditView	typeref:typename:void
focusInEvent	FindLineEdit.cpp	/^void FindLineEdit::focusInEvent( QFocusEvent * event )$/;"	f	class:FindLineEdit	typeref:typename:void
focusNextPrevChild	CommandLine.cpp	/^bool CommandLine::focusNextPrevChild(bool next)$/;"	f	class:CommandLine	typeref:typename:bool
focusNextPrevChild	EditView.cpp	/^bool EditView::focusNextPrevChild(bool next)$/;"	f	class:EditView	typeref:typename:bool
focusOutEvent	CommandLine.cpp	/^void CommandLine::focusOutEvent( QFocusEvent * event )$/;"	f	class:CommandLine	typeref:typename:void
focusOutEvent	EditView.cpp	/^void EditView::focusOutEvent( QFocusEvent * event )$/;"	f	class:EditView	typeref:typename:void
fontHeight	EditView.h	/^	int		fontHeight() const { return m_fontHeight; }$/;"	f	class:EditView	typeref:typename:int
fullPathName	Document.h	/^	QString	fullPathName() const { return m_fullPathName; }$/;"	f	class:Document	typeref:typename:QString
fullPathName	EditView.cpp	/^QString EditView::fullPathName() const$/;"	f	class:EditView	typeref:typename:QString
fullText	ViewTokenizer.h	/^	QString fullText() const { return m_fullText; }$/;"	f	class:ViewTokenizer	typeref:typename:QString
fullText	drawTokenizer.h	/^	QString fullText() const { return m_fullText; }$/;"	f	class:DrawTokenizer	typeref:typename:QString
g_app	main.cpp	/^QApplication* g_app = nullptr;$/;"	v	typeref:typename:QApplication *
g_docNumber	MainWindow.cpp	/^int	g_docNumber = 0;$/;"	v	typeref:typename:int
g_globSettings	MainWindow.cpp	/^GlobalSettings	g_globSettings;$/;"	v	typeref:typename:GlobalSettings
g_libnames	completion.cpp	/^const char *g_libnames[] = {$/;"	v	typeref:typename:const char * []
g_mainWindows	MainWindow.cpp	/^vector<MainWindow*> g_mainWindows;$/;"	v	typeref:typename:vector<MainWindow * >
g_settingsMgr	MainWindow.cpp	/^SettingsMgr	g_settingsMgr;$/;"	v	typeref:typename:SettingsMgr
getCharType	TextCursor.cpp	/^uchar TextCursor::getCharType(wchar_t &ch)$/;"	f	class:TextCursor	typeref:typename:uchar
getDQString	TestViCommands.cpp	/^QString TestViCommands::getDQString()$/;"	f	class:TestViCommands	typeref:typename:QString
getExtension	MainWindow.cpp	/^QString getExtension(const QString &fullPath)$/;"	f	typeref:typename:QString
getFirstLastToken	autoIndent.cpp	/^int getFirstLastToken(TypeSettings *typeSettings, const Buffer &buffer, pos_t pos0, pos_t last,$/;"	f	typeref:typename:int
getImplText	EditView.cpp	/^QString EditView::getImplText(pos_t &pos)$/;"	f	class:EditView	typeref:typename:QString
getLastToken	autoIndent.cpp	/^QString getLastToken(TypeSettings *typeSettings, const Buffer &buffer,$/;"	f	typeref:typename:QString
getLineText	EditView.cpp	/^QString EditView::getLineText(int dln) const$/;"	f	class:EditView	typeref:typename:QString
getNum	ex.cpp	/^bool getNum(EditView *view, LineNumbers &lns, const QString &buf, int &ix, int &num, byte &statu/;"	f	typeref:typename:bool
getNumber	TestViCommands.cpp	/^int TestViCommands::getNumber(\/*int value*\/)$/;"	f	class:TestViCommands	typeref:typename:int
getOne	ex.cpp	/^bool getOne(EditView *view, LineNumbers &lns, const QString &buf, int &ix, int &num, byte &statu/;"	f	typeref:typename:bool
getSearchOpt	MainWindow.cpp	/^uint MainWindow::getSearchOpt(bool vi) const$/;"	f	class:MainWindow	typeref:typename:uint
getSelectedLineRange	EditView.cpp	/^bool  EditView::getSelectedLineRange(int &ln1, int &ln2) const$/;"	f	class:EditView	typeref:typename:bool
getSelectedLineRange	TextCursor.cpp	/^bool TextCursor::getSelectedLineRange(int &dln1, int &dln2) const$/;"	f	class:TextCursor	typeref:typename:bool
getTextCodec	charEncoding.cpp	/^bool getTextCodec(const QString &fileName, QString &errorString, QTextCodec *&codec,$/;"	f	typeref:typename:bool
globDoing	ViEngine.h	/^	bool	globDoing() const { return m_globalDoing; }$/;"	f	class:ViEngine	typeref:typename:bool
globSettings	MainWindow.cpp	/^GlobalSettings* globSettings() { return &g_globSettings; }$/;"	f	typeref:typename:GlobalSettings *
grep	grep.cpp	/^void MainWindow::grep(bool curWord)$/;"	f	class:MainWindow	typeref:typename:void
grepFinished	grep.cpp	/^void MainWindow::grepFinished(int cnt)$/;"	f	class:MainWindow	typeref:typename:void
grepSubDir	GrepDlg.cpp	/^bool GrepDlg::grepSubDir() const$/;"	f	class:GrepDlg	typeref:typename:bool
grepView	GrepDlg.cpp	/^bool GrepDlg::grepView() const$/;"	f	class:GrepDlg	typeref:typename:bool
hasSearchBoxFocus	MainWindow.cpp	/^bool MainWindow::hasSearchBoxFocus()		\/\/	Ê§úÁ¥¢„Éú„ÉÉ„ÇØ„Çπ„Åå„Éï„Ç©„Éº„Ç´„Çπ„ÇíÊåÅ„Å£„Å¶„ÅÑ„Çã/;"	f	class:MainWindow	typeref:typename:bool
hasSelection	EditView.cpp	/^bool EditView::hasSelection() const$/;"	f	class:EditView	typeref:typename:bool
hasSelection	TextCursor.h	/^	bool	hasSelection() const { return m_mode != NOMAL_MODE || m_anchor != m_pos; }$/;"	f	class:TextCursor	typeref:typename:bool
hasSelectionInALine	EditView.cpp	/^bool EditView::hasSelectionInALine() const$/;"	f	class:EditView	typeref:typename:bool
hideCmdLineEdit	ex.cpp	/^void MainWindow::hideCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
htdocsRootPath	GlobalStgDlg.cpp	/^void GlobalStgDlg::htdocsRootPath()$/;"	f	class:GlobalStgDlg	typeref:typename:void
ignoreCase	GrepDlg.cpp	/^bool GrepDlg::ignoreCase() const$/;"	f	class:GrepDlg	typeref:typename:bool
imeOpenStatusChanged	EditView.cpp	/^void EditView::imeOpenStatusChanged()$/;"	f	class:EditView	typeref:typename:void
imeOpenStatusChanged	MainWindow.cpp	/^void MainWindow::imeOpenStatusChanged()$/;"	f	class:MainWindow	typeref:typename:void
imeOpenStatusChanged	ViEngine.cpp	/^void ViEngine::imeOpenStatusChanged()$/;"	f	class:ViEngine	typeref:typename:void
incDec	EditView.cpp	/^void EditView::incDec(bool bInc, int d)$/;"	f	class:EditView	typeref:typename:void
incSearchPos	ViEngine.h	/^	int			incSearchPos() const { return m_incSearchPos; }$/;"	f	class:ViEngine	typeref:typename:int
incSearchView	ViEngine.h	/^	EditView		*incSearchView() const { return m_incSearchView; }$/;"	f	class:ViEngine	typeref:typename:EditView *
indent	EditView.cpp	/^void EditView::indent(int ln1, int ln2, bool vi)$/;"	f	class:EditView	typeref:typename:void
indentText	EditView.cpp	/^QString EditView::indentText(int ln)$/;"	f	class:EditView	typeref:typename:QString
indexOfBool	typeSettings.cpp	/^int TypeSettings::indexOfBool(const QString &key) const$/;"	f	class:TypeSettings	typeref:typename:int
indexOfInt	typeSettings.cpp	/^int TypeSettings::indexOfInt(const QString &key) const$/;"	f	class:TypeSettings	typeref:typename:int
indexOfTabOrZenSpace	ViewTokenizer.cpp	/^int indexOfTabOrZenSpace(const QString &text)$/;"	f	typeref:typename:int
indexOfText	typeSettings.cpp	/^int TypeSettings::indexOfText(const QString &key) const$/;"	f	class:TypeSettings	typeref:typename:int
init	globalSettings.cpp	/^void GlobalSettings::init()$/;"	f	class:GlobalSettings	typeref:typename:void
init	tokenizer.cpp	/^void Tokenizer::init()$/;"	f	class:Tokenizer	typeref:typename:void
init	typeSettings.cpp	/^void TypeSettings::init()$/;"	f	class:TypeSettings	typeref:typename:void
inputMethodEvent	EditView.cpp	/^void EditView::inputMethodEvent(QInputMethodEvent * event)$/;"	f	class:EditView	typeref:typename:void
inputMethodQuery	EditView.cpp	/^QVariant EditView::inputMethodQuery( Qt::InputMethodQuery query ) const$/;"	f	class:EditView	typeref:typename:QVariant
insertCloseCurl	EditView.cpp	/^void EditView::insertCloseCurl(QString &text)$/;"	f	class:EditView	typeref:typename:void
insertText	Document.cpp	/^void Document::insertText(pos_t pos, const QString &text)$/;"	f	class:Document	typeref:typename:void
insertText	EditView.cpp	/^void EditView::insertText(const QString &, const QString &)		\/\/	ÈÅ∏ÊäûÈ†òÂüü„ÅÆÂâçÂæå„Å´ÊñáÂ≠ó/;"	f	class:EditView	typeref:typename:void
insertText	EditView.cpp	/^void EditView::insertText(const QString &text0)$/;"	f	class:EditView	typeref:typename:void
insertText	MainWindow.cpp	/^void MainWindow::insertText(QString text)$/;"	f	class:MainWindow	typeref:typename:void
insertText	TextCursor.cpp	/^void TextCursor::insertText(const QString &text)$/;"	f	class:TextCursor	typeref:typename:void
insertTextRaw	EditView.cpp	/^void EditView::insertTextRaw(pos_t pos, const QString &text)$/;"	f	class:EditView	typeref:typename:void
insertTextSub	EditView.cpp	/^void EditView::insertTextSub(QString text, bool ctrl, bool shift, bool alt)$/;"	f	class:EditView	typeref:typename:void
inserted	viewLineMgr.cpp	/^void ViewLineMgr::inserted(int dln, int d)$/;"	f	class:ViewLineMgr	typeref:typename:void
insertedText	ViEngine.h	/^	QString insertedText() const { return m_insertedText; }$/;"	f	class:ViEngine	typeref:typename:QString
intValue	globalSettings.h	/^	int		intValue(int ix) const { return m_intValues[ix]; }$/;"	f	class:GlobalSettings	typeref:typename:int
intValue	typeSettings.h	/^	int		intValue(int ix) const { return m_intValues[ix]; }$/;"	f	class:TypeSettings	typeref:typename:int
isAfter	completion.cpp	/^bool EditView::isAfter(pos_t &lastTokenPos, const QString &key, pos_t pos)$/;"	f	class:EditView	typeref:typename:bool
isAfterInclude	completion.cpp	/^bool EditView::isAfterInclude()$/;"	f	class:EditView	typeref:typename:bool
isAfterIncludeDQ	completion.cpp	/^bool EditView::isAfterIncludeDQ(pos_t &p)$/;"	f	class:EditView	typeref:typename:bool
isAlnum	ViewTokenizer.cpp	/^inline bool isAlnum(QChar qch)$/;"	f	typeref:typename:bool
isAlnum	ex.cpp	/^inline bool isAlnum(QChar qch)$/;"	f	typeref:typename:bool
isAlnum	zenCoding.cpp	/^bool isAlnum(const QString &text)$/;"	f	typeref:typename:bool
isAlnum	zenCoding.cpp	/^inline bool isAlnum(QChar qch)$/;"	f	typeref:typename:bool
isAlnumOrUnderbar	ViewTokenizer.cpp	/^inline bool isAlnumOrUnderbar(QChar qch)$/;"	f	typeref:typename:bool
isAlpha	EditView.cpp	/^inline bool isAlpha(wchar_t ch)$/;"	f	typeref:typename:bool
isAlpha	TextCursor.cpp	/^inline bool isAlpha(wchar_t ch)$/;"	f	typeref:typename:bool
isAlpha	ViewTokenizer.cpp	/^inline bool isAlpha(QChar qch)$/;"	f	typeref:typename:bool
isAlpha	assocParen.cpp	/^inline bool isAlpha(wchar_t ch)$/;"	f	typeref:typename:bool
isAlpha	ex.cpp	/^inline bool isAlpha(wchar_t ch)$/;"	f	typeref:typename:bool
isAlpha	zenCoding.cpp	/^inline bool isAlpha(wchar_t ch)$/;"	f	typeref:typename:bool
isAlphaOrUnderbar	ViewTokenizer.cpp	/^inline bool isAlphaOrUnderbar(QChar qch)$/;"	f	typeref:typename:bool
isAlphaOrUnderbar	zenCoding.cpp	/^inline bool isAlphaOrUnderbar(QChar qch)$/;"	f	typeref:typename:bool
isBoxSelectMode	EditView.h	/^	bool	isBoxSelectMode() const { return false; }$/;"	f	class:EditView	typeref:typename:bool
isBoxSelectMode	MainWindow.cpp	/^bool MainWindow::isBoxSelectMode() const$/;"	f	class:MainWindow	typeref:typename:bool
isCollapsed	viewLineMgr.cpp	/^bool ViewLineMgr::isCollapsed(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:bool
isCppIndentWord	autoIndent.cpp	/^bool isCppIndentWord(const QString &text)$/;"	f	typeref:typename:bool
isCppType	EditView.cpp	/^bool EditView::isCppType() const$/;"	f	class:EditView	typeref:typename:bool
isDBCSLeadByte	charEncoding.cpp	/^bool isDBCSLeadByte(uchar ch)$/;"	f	typeref:typename:bool
isDBCSSecondByte	charEncoding.cpp	/^bool isDBCSSecondByte(uchar ch)$/;"	f	typeref:typename:bool
isDigit	EditView.cpp	/^inline bool isDigit(wchar_t ch)$/;"	f	typeref:typename:bool
isDigit	ViewTokenizer.cpp	/^inline bool isDigit(QChar qch)$/;"	f	typeref:typename:bool
isDigit	completion.cpp	/^inline bool isDigit(wchar_t ch)$/;"	f	typeref:typename:bool
isDigit	ex.cpp	/^inline bool isDigit(wchar_t ch)$/;"	f	typeref:typename:bool
isEUCcode	charEncoding.h	/^inline int isEUCcode(uchar uch)$/;"	f	typeref:typename:int
isEditCommand	ex.cpp	/^bool MainWindow::isEditCommand(QString &arg)$/;"	f	class:MainWindow	typeref:typename:bool
isEditView	MainWindow.cpp	/^bool isEditView(const QWidget *w)$/;"	f	typeref:typename:bool
isEditViewFocused	MainWindow.cpp	/^bool isEditViewFocused(QWidget *w)$/;"	f	typeref:typename:bool
isEmpty	Document.cpp	/^bool Document::isEmpty() const$/;"	f	class:Document	typeref:typename:bool
isEmpty	viewLineMgr.cpp	/^bool ViewLineMgr::isEmpty() const		\/\/	„ÉÜ„Éº„Éñ„É´„ÅåÁ©∫„ÅãÔºü$/;"	f	class:ViewLineMgr	typeref:typename:bool
isFirstApp	singleapplication.cpp	/^bool SingleApplication::isFirstApp()$/;"	f	class:SingleApplication	typeref:typename:bool
isFirstToken	tokenizer.h	/^	bool	isFirstToken() const { return m_firstToken; }$/;"	f	class:Tokenizer	typeref:typename:bool
isHankakuKana	charEncoding.h	/^inline bool isHankakuKana(uchar uch)$/;"	f	typeref:typename:bool
isInBlockComment	ViewTokenizer.h	/^	bool	isInBlockComment() const { return m_inBlockComment; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInBlockComment	drawTokenizer.h	/^	bool	isInBlockComment() const { return m_inBlockComment; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInHTMLTag	ViewTokenizer.h	/^	bool	isInHTMLTag() const { return m_inHTMLTag; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInHTMLTag	drawTokenizer.h	/^	bool	isInHTMLTag() const { return m_inHTMLTag; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInLineComment	ViewTokenizer.h	/^	bool	isInLineComment() const { return m_inLineComment; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInLineComment	drawTokenizer.h	/^	bool	isInLineComment() const { return m_inLineComment; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInPHP	ViewTokenizer.h	/^	bool	isInPHP() const { return m_inPHP; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInPHP	drawTokenizer.h	/^	bool	isInPHP() const { return m_inPHP; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInScriptStartEnd	ViewTokenizer.h	/^	bool	isInScriptStartEnd() const { return m_inScriptStartEnd; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInScriptStartEnd	drawTokenizer.h	/^	bool	isInScriptStartEnd() const { return m_inScriptStartEnd; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInTag	ViewTokenizer.h	/^	bool	isInTag() const { return m_inHTMLTag; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isInTag	drawTokenizer.h	/^	bool	isInTag() const { return m_inHTMLTag; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isInlineTag	zenCoding.cpp	/^bool isInlineTag(const QString &tag)$/;"	f	typeref:typename:bool
isKeisenMode	EditView.cpp	/^bool EditView::isKeisenMode() const$/;"	f	class:EditView	typeref:typename:bool
isKeisenMode	MainWindow.cpp	/^bool MainWindow::isKeisenMode() const$/;"	f	class:MainWindow	typeref:typename:bool
isKeyWord1	typeSettings.cpp	/^bool TypeSettings::isKeyWord1(const QString &token) const$/;"	f	class:TypeSettings	typeref:typename:bool
isKeyWord2	typeSettings.cpp	/^bool TypeSettings::isKeyWord2(const QString &token) const$/;"	f	class:TypeSettings	typeref:typename:bool
isLetterOrNumber	tokenizer.cpp	/^inline bool isLetterOrNumber(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrNumberOrUnderbar	EditView.cpp	/^inline bool isLetterOrNumberOrUnderbar(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrNumberOrUnderbar	completion.cpp	/^inline bool isLetterOrNumberOrUnderbar(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrNumberOrUnderbar	tokenizer.cpp	/^inline bool isLetterOrNumberOrUnderbar(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrNumberOrUnderbarOrMinus	completion.cpp	/^inline bool isLetterOrNumberOrUnderbarOrMinus(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrUnderbar	EditView.cpp	/^inline bool isLetterOrUnderbar(const QChar &ch)$/;"	f	typeref:typename:bool
isLetterOrUnderbar	completion.cpp	/^inline bool isLetterOrUnderbar(const QChar &ch)$/;"	f	typeref:typename:bool
isLineBreakMode	viewLineMgr.cpp	/^bool ViewLineMgr::isLineBreakMode() const$/;"	f	class:ViewLineMgr	typeref:typename:bool
isLogicalFirstLine	viewLineMgr.cpp	/^bool ViewLineMgr::isLogicalFirstLine(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:bool
isModified	Document.cpp	/^bool Document::isModified() const		\/\/ { return m_modified; }$/;"	f	class:Document	typeref:typename:bool
isModified	EditView.cpp	/^bool EditView::isModified() const		\/\/ { return m_modified; }$/;"	f	class:EditView	typeref:typename:bool
isNewLine	Document.cpp	/^inline bool isNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLine	TextCursor.cpp	/^inline bool isNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLine	assocParen.cpp	/^inline bool isNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLineChar	EditView.cpp	/^inline bool isNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLineChar	tokenizer.cpp	/^inline bool isNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLineChar	viEditView.cpp	/^inline bool isNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isNewLineChar	viewLineMgr.cpp	/^inline bool isNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isNumber	tokenizer.cpp	/^inline bool isNumber(wchar_t ch)$/;"	f	typeref:typename:bool
isOpened	MainWindow.cpp	/^int MainWindow::isOpened(const QString& pathName) const		\/\/	Êó¢„Å´„Ç™„Éº„Éó„É≥„Åï„Çå„Å¶„ÅÑ„Çå„Å∞/;"	f	class:MainWindow	typeref:typename:int
isPathNamePrinted	ViEngine.h	/^	bool	isPathNamePrinted() const { return m_pathNamePrinted; }$/;"	f	class:ViEngine	typeref:typename:bool
isRedoRecording	ViEngine.h	/^	bool	isRedoRecording() const { return m_redoRecording; }$/;"	f	class:ViEngine	typeref:typename:bool
isSafeChar	ViewTokenizer.cpp	/^bool isSafeChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpace	TextCursor.cpp	/^inline bool isSpace(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	EditView.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	assocParen.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	autoIndent.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	completion.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	tokenizer.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	viEditView.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceChar	zenCoding.cpp	/^inline bool isSpaceChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLine	EditView.cpp	/^inline bool isSpaceOrNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLine	TextCursor.cpp	/^inline bool isSpaceOrNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLine	assocParen.cpp	/^inline bool isSpaceOrNewLine(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLineChar	completion.cpp	/^inline bool isSpaceOrNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLineChar	tokenizer.cpp	/^inline bool isSpaceOrNewLineChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceOrNewLineOrSharp	TextCursor.cpp	/^inline bool isSpaceOrNewLineOrSharp(wchar_t ch)$/;"	f	typeref:typename:bool
isSpaceText	EditView.cpp	/^bool EditView::isSpaceText(pos_t first, pos_t last)$/;"	f	class:EditView	typeref:typename:bool
isSpaces	completion.cpp	/^bool EditView::isSpaces(pos_t first, pos_t last) const$/;"	f	class:EditView	typeref:typename:bool
isSplitter	MainWindow.cpp	/^bool isSplitter(QWidget *w)$/;"	f	typeref:typename:bool
isSrgtPirFirstChar	TextCursor.cpp	/^bool isSrgtPirFirstChar(QChar ch)$/;"	f	typeref:typename:bool
isSrgtPirFirstChar	TextCursor.cpp	/^bool isSrgtPirFirstChar(wchar_t ch)$/;"	f	typeref:typename:bool
isSrgtPirSecondChar	TextCursor.cpp	/^bool isSrgtPirSecondChar(QChar ch)$/;"	f	typeref:typename:bool
isSrgtPirSecondChar	TextCursor.cpp	/^bool isSrgtPirSecondChar(wchar_t ch)$/;"	f	typeref:typename:bool
isStartPage	MainWindow.cpp	/^bool isStartPage(QWidget *w)$/;"	f	typeref:typename:bool
isTokenInComment	ViewTokenizer.h	/^	bool	isTokenInComment() const { return m_isTokenInComment; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isTokenInComment	drawTokenizer.h	/^	bool	isTokenInComment() const { return m_isTokenInComment; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isTokenInHTMLTag	ViewTokenizer.h	/^	bool	isTokenInHTMLTag() const { return m_isTokenInHTMLTag; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isTokenInHTMLTag	drawTokenizer.h	/^	bool	isTokenInHTMLTag() const { return m_isTokenInHTMLTag; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isTokenNewLine	ViewTokenizer.h	/^	bool	isTokenNewLine() const { return m_isTokenNewLine; }$/;"	f	class:ViewTokenizer	typeref:typename:bool
isTokenNewLine	drawTokenizer.h	/^	bool	isTokenNewLine() const { return m_isTokenNewLine; }$/;"	f	class:DrawTokenizer	typeref:typename:bool
isUTF16beBom	charEncoding.cpp	/^inline bool isUTF16beBom(cuchar *ptr, cuchar *endptr)$/;"	f	typeref:typename:bool
isUTF16leBom	charEncoding.cpp	/^inline bool isUTF16leBom(cuchar *ptr, cuchar *endptr)$/;"	f	typeref:typename:bool
isUTF8Bom	charEncoding.cpp	/^inline bool isUTF8Bom(cuchar *ptr, cuchar *endptr)$/;"	f	typeref:typename:bool
isUndoBlockOpened	ViEngine.h	/^	bool	isUndoBlockOpened() const { return m_undoBlockOpened; }$/;"	f	class:ViEngine	typeref:typename:bool
isValid	MainWindow.cpp	/^bool isValid(const QWidget *w, const QString &className)$/;"	f	typeref:typename:bool
itemDoubleClicked	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::itemDoubleClicked( QListWidgetItem * item )$/;"	f	class:AutoCompletionDlg	typeref:typename:void
itemDoubleClicked	CompletionWidget.cpp	/^void CompletionWidget::itemDoubleClicked(QListWidgetItem *)$/;"	f	class:CompletionWidget	typeref:typename:void
itemDoubleClicked	NamedColorDlg.cpp	/^void NamedColorDlg::itemDoubleClicked ( QListWidgetItem * item )$/;"	f	class:NamedColorDlg	typeref:typename:void
ix	ViewTokenizer.h	/^	int		ix() const { return m_ix; }$/;"	f	class:ViewTokenizer	typeref:typename:int
ix	drawTokenizer.h	/^	int		ix() const { return m_ix; }$/;"	f	class:DrawTokenizer	typeref:typename:int
joinLines	EditView.cpp	/^void EditView::joinLines(int nLines, bool vi)$/;"	f	class:EditView	typeref:typename:void
jumpAssociatedParen	EditView.cpp	/^void EditView::jumpAssociatedParen()$/;"	f	class:EditView	typeref:typename:void
jumpMarkPos	EditView.cpp	/^bool EditView::jumpMarkPos(char ch)$/;"	f	class:EditView	typeref:typename:bool
jumpToLastModifiedPos	EditView.cpp	/^void EditView::jumpToLastModifiedPos()$/;"	f	class:EditView	typeref:typename:void
jumpToLine	EditView.cpp	/^void EditView::jumpToLine(int ln, bool vi)		\/\/	ln [0, EOFLine) „Éâ„Ç≠„É•„É°„É≥„ÉàË°åÁï™Âè∑$/;"	f	class:EditView	typeref:typename:void
keyBoolTable	globalSettings.cpp	/^static KeyBoolItem keyBoolTable[] = {$/;"	v	typeref:typename:KeyBoolItem[]	file:
keyBoolTable	typeSettings.cpp	/^} keyBoolTable[] = {$/;"	v	typeref:struct:KeyBoolItem[]
keyColorTable	typeSettings.cpp	/^} keyColorTable[] = {$/;"	v	typeref:struct:KeyColor[]
keyEnumTable	globalSettings.cpp	/^} keyEnumTable[] = {$/;"	v	typeref:struct:KeyEnumItem[]
keyHPressed	OutlineBar.cpp	/^void OutlineBar::keyHPressed()$/;"	f	class:OutlineBar	typeref:typename:void
keyIntTable	globalSettings.cpp	/^static KeyIntItem keyIntTable[] = {$/;"	v	typeref:typename:KeyIntItem[]	file:
keyIntTable	typeSettings.cpp	/^} keyIntTable[] = {$/;"	v	typeref:struct:KeyIntItem[]
keyJPressed	OutlineBar.cpp	/^void OutlineBar::keyJPressed()$/;"	f	class:OutlineBar	typeref:typename:void
keyKPressed	OutlineBar.cpp	/^void OutlineBar::keyKPressed()$/;"	f	class:OutlineBar	typeref:typename:void
keyLPressed	OutlineBar.cpp	/^void OutlineBar::keyLPressed()$/;"	f	class:OutlineBar	typeref:typename:void
keyPressEvent	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::keyPressEvent(QKeyEvent *event)$/;"	f	class:AutoCompletionDlg	typeref:typename:void
keyPressEvent	CommandLine.cpp	/^void CommandLine::keyPressEvent(QKeyEvent *event)$/;"	f	class:CommandLine	typeref:typename:void
keyPressEvent	CompletionWidget.cpp	/^void CompletionWidget::keyPressEvent ( QKeyEvent * event )$/;"	f	class:CompletionWidget	typeref:typename:void
keyPressEvent	EditView.cpp	/^void EditView::keyPressEvent(QKeyEvent *event)$/;"	f	class:EditView	typeref:typename:void
keyPressEvent	FindLineEdit.cpp	/^void FindLineEdit::keyPressEvent(QKeyEvent *event)$/;"	f	class:FindLineEdit	typeref:typename:void
keyPressEvent	GrepDlg.cpp	/^void GrepDlg::keyPressEvent(QKeyEvent *event)$/;"	f	class:GrepDlg	typeref:typename:void
keyPressEvent	OutlineBar.cpp	/^void OutlineBar::keyPressEvent(QKeyEvent *event)$/;"	f	class:OutlineBar	typeref:typename:void
keyPressEvent	OutputView.cpp	/^void OutputView::keyPressEvent( QKeyEvent * event )$/;"	f	class:OutputView	typeref:typename:void
keyTextTable	globalSettings.cpp	/^static KeyTextItem keyTextTable[] = {$/;"	v	typeref:typename:KeyTextItem[]	file:
keyTextTable	typeSettings.cpp	/^} keyTextTable[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableCPP	typeSettings.cpp	/^struct KeyTextItem keyTextTableCPP[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableCS	typeSettings.cpp	/^struct KeyTextItem keyTextTableCS[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableCSS	typeSettings.cpp	/^struct KeyTextItem keyTextTableCSS[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableFS	typeSettings.cpp	/^struct KeyTextItem keyTextTableFS[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableHLSL	typeSettings.cpp	/^struct KeyTextItem keyTextTableHLSL[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableHTML	typeSettings.cpp	/^struct KeyTextItem keyTextTableHTML[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableJAVA	typeSettings.cpp	/^struct KeyTextItem keyTextTableJAVA[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableJS	typeSettings.cpp	/^struct KeyTextItem keyTextTableJS[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableLOG	typeSettings.cpp	/^struct KeyTextItem keyTextTableLOG[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTablePASCAL	typeSettings.cpp	/^struct KeyTextItem keyTextTablePASCAL[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTablePERL	typeSettings.cpp	/^struct KeyTextItem keyTextTablePERL[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTablePHP	typeSettings.cpp	/^struct KeyTextItem keyTextTablePHP[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTablePYTHON	typeSettings.cpp	/^struct KeyTextItem keyTextTablePYTHON[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableRUBY	typeSettings.cpp	/^struct KeyTextItem keyTextTableRUBY[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableSPR	typeSettings.cpp	/^struct KeyTextItem keyTextTableSPR[] = {$/;"	v	typeref:struct:KeyTextItem[]
keyTextTableSQL	typeSettings.cpp	/^struct KeyTextItem keyTextTableSQL[] = {$/;"	v	typeref:struct:KeyTextItem[]
keywordList1	typeSettings.cpp	/^QList<QString> TypeSettings::keywordList1() const$/;"	f	class:TypeSettings	typeref:typename:QList<QString>
keywordList2	typeSettings.cpp	/^QList<QString> TypeSettings::keywordList2() const$/;"	f	class:TypeSettings	typeref:typename:QList<QString>
kwCompletion	completion.cpp	/^void EditView::kwCompletion()$/;"	f	class:EditView	typeref:typename:void
lastCmdChar	ViEngine.h	/^	QChar lastCmdChar() const { return m_cmdText.isEmpty() ? QChar() : m_cmdText[m_cmdText.size() -/;"	f	class:ViEngine	typeref:typename:QChar
lastFindChar	ViEngine.h	/^	wchar_t	lastFindChar() const { return m_lastFindChar; }$/;"	f	class:ViEngine	typeref:typename:wchar_t
lastModified	Document.h	/^	QDateTime	lastModified() const { return m_lastModified; }$/;"	f	class:Document	typeref:typename:QDateTime
lineCount	Document.cpp	/^int Document::lineCount() const$/;"	f	class:Document	typeref:typename:int
lineCount	EditView.cpp	/^int EditView::lineCount() const$/;"	f	class:EditView	typeref:typename:int
lineFlags	Document.cpp	/^uint Document::lineFlags(int ln) const$/;"	f	class:Document	typeref:typename:uint
lineFlags	EditView.cpp	/^uint EditView::lineFlags(int dln) const$/;"	f	class:EditView	typeref:typename:uint
lineHeight	EditView.h	/^	int		lineHeight() const { return m_lineHeight; }$/;"	f	class:EditView	typeref:typename:int
lineNumber	tokenizer.h	/^	int		lineNumber() const { return m_lineNum; };$/;"	f	class:Tokenizer	typeref:typename:int
lineStartPosition	Document.cpp	/^int Document::lineStartPosition(pos_t pos) const$/;"	f	class:Document	typeref:typename:int
lineStartPosition	EditView.cpp	/^int EditView::lineStartPosition(int ln) const$/;"	f	class:EditView	typeref:typename:int
lineText	Document.cpp	/^QString Document::lineText(int ln) const$/;"	f	class:Document	typeref:typename:QString
line_t	Document.h	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32
line_t	TextCursor.h	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32
line_t	ViEngine.h	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32
line_t	assocParen.cpp	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32	file:
line_t	tokenizer.h	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32
line_t	viewLineMgr.h	/^	typedef __int32 line_t;			\/\/	Ë°åÁï™Âè∑$/;"	t	typeref:typename:__int32
lns	ViEngine.h	/^	LineNumbers &lns() { return m_lns; }$/;"	f	class:ViEngine	typeref:typename:LineNumbers &
load	typeSettings.cpp	/^bool TypeSettings::load(const QString &fileName, bool onlyColor)$/;"	f	class:TypeSettings	typeref:typename:bool
loadFile	MainWindow.cpp	/^bool MainWindow::loadFile(Document *doc, const QString &pathName, \/*cchar *codecName,*\/$/;"	f	class:MainWindow	typeref:typename:bool
loadFile	charEncoding.cpp	/^bool loadFile(const QString& pathName, QString& buffer, QString& errorMess,$/;"	f	typeref:typename:bool
loadFile	completion.cpp	/^bool loadFile(Buffer &buffer, const QString &fileName)$/;"	f	typeref:typename:bool
loadKeyWords	typeSettings.cpp	/^bool TypeSettings::loadKeyWords()$/;"	f	class:TypeSettings	typeref:typename:bool
loadKeyWords	typeSettings.cpp	/^bool TypeSettings::loadKeyWords(int ix, QSet<QString> &kwSet, bool ic)$/;"	f	class:TypeSettings	typeref:typename:bool
logicalFirstLine	viewLineMgr.cpp	/^int ViewLineMgr::logicalFirstLine(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:int
m_aiCurPos	EditView.h	/^	int		m_aiCurPos;						\/\/	„Ç™„Éº„Éà„Ç§„É≥„Éá„É≥„ÉàÁõ¥Âæå„ÅÆ„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆ$/;"	m	class:EditView	typeref:typename:int
m_aiSpaces	EditView.h	/^	QString		m_aiSpaces;					\/\/	„Ç™„Éº„Éà„Ç§„É≥„Éá„É≥„ÉàÁ©∫ÁôΩÈ°û$/;"	m	class:EditView	typeref:typename:QString
m_anchor	TextCursor.h	/^	int		m_anchor;$/;"	m	class:TextCursor	typeref:typename:int
m_anchorViewLine	TextCursor.h	/^	int		m_anchorViewLine;			\/\/	Ë°®Á§∫Ë°åÁï™Âè∑ [0, viewLineCount())$/;"	m	class:TextCursor	typeref:typename:int
m_autoCmplAtBegWord	EditView.h	/^	bool	m_autoCmplAtBegWord;			\/\/	ÂçòË™ûÂÖàÈ†≠„ÅßËá™ÂãïË£úÂÆå$/;"	m	class:EditView	typeref:typename:bool
m_autoCmplDlgClosed	MainWindow.h	/^	bool			m_autoCmplDlgClosed;			\/\/	Ëá™ÂãïË£úÂÆå„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Åü„Å∞„Åã„Çä$/;"	m	class:MainWindow	typeref:typename:bool
m_autoCmplFilter	EditView.h	/^	QString	m_autoCmplFilter;		\/\/	ÂãïÁöÑË£úÂÆå„Éï„Ç£„É´„Çø„ÉºÊñáÂ≠óÂàó$/;"	m	class:EditView	typeref:typename:QString
m_autoCmplIndex	MainWindow.h	/^    int				m_autoCmplIndex;				\/\/	Ëá™ÂãïË£úÂÆåÈñãÂßã‰ΩçÁΩÆ$/;"	m	class:MainWindow	typeref:typename:int
m_autoCmplPos	EditView.h	/^	int		m_autoCmplPos;			\/\/	Ë£úÂÆåÈñãÂßã‰ΩçÁΩÆÔºà# „ÅßÈñãÂßã„Åó„ÅüÂ†¥Âêà„ÅØ # ‰ΩçÁΩÆÔºâ$/;"	m	class:EditView	typeref:typename:int
m_autoCmplTyped	EditView.h	/^	QString	m_autoCmplTyped;		\/\/	ÂãïÁöÑË£úÂÆå„Åß„Çø„Ç§„Éó„Åï„Çå„ÅüÊñáÂ≠óÂàó$/;"	m	class:EditView	typeref:typename:QString
m_autoCompletionDlg	EditView.h	/^	AutoCompletionDlg	*m_autoCompletionDlg;$/;"	m	class:EditView	typeref:typename:AutoCompletionDlg *
m_autoCompletionDlg	MainWindow.h	/^	AutoCompletionDlg	*m_autoCompletionDlg;$/;"	m	class:MainWindow	typeref:typename:AutoCompletionDlg *
m_bBom	Document.h	/^	bool	m_bBom;$/;"	m	class:Document	typeref:typename:bool
m_bLine	ViEngine.h	/^	bool		m_bLine;		\/\/	Ë°åÂçò‰Ωç$/;"	m	struct:YankBufferItem	typeref:typename:bool
m_bString	tokenizer.h	/^	bool	m_bString;		\/\/	".."„ÄÅ'...' ÊñáÂ≠óÂàóÊúâÂäπ$/;"	m	class:Tokenizer	typeref:typename:bool
m_baseLineDY	EditView.h	/^	int		m_baseLineDY;		\/\/	Ë°å‰∏äÈÉ®„Åã„Çâ„Éô„Éº„Çπ„É©„Ç§„É≥„Åæ„Åß„ÅÆ„Éî„ÇØ„Çª„É´Êï∞$/;"	m	class:EditView	typeref:typename:int
m_begBlockCommentText	ViewTokenizer.h	/^	QString	m_begBlockCommentText;$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_begBlockCommentText	drawTokenizer.h	/^	QString	m_begBlockCommentText;$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_bomChkBx	MainWindow.h	/^	QCheckBox	*m_bomChkBx;$/;"	m	class:MainWindow	typeref:typename:QCheckBox *
m_boolValues	globalSettings.h	/^	bool	m_boolValues[N_BOOL];$/;"	m	class:GlobalSettings	typeref:typename:bool[]
m_boolValues	typeSettings.h	/^	bool	m_boolValues[N_BOOL];$/;"	m	class:TypeSettings	typeref:typename:bool[]
m_boxAnchorLine	TextCursor.h	/^	int		m_boxAnchorLine;		\/\/	Ë°®Á§∫Ë°å [0, viewLineCount())$/;"	m	class:TextCursor	typeref:typename:int
m_boxAnchorPx1	TextCursor.h	/^	int		m_boxAnchorPx1;$/;"	m	class:TextCursor	typeref:typename:int
m_boxAnchorPx2	TextCursor.h	/^	int		m_boxAnchorPx2;$/;"	m	class:TextCursor	typeref:typename:int
m_boxCurLine	TextCursor.h	/^	int		m_boxCurLine;				\/\/	Ë°®Á§∫Ë°å [0, viewLineCount())$/;"	m	class:TextCursor	typeref:typename:int
m_boxCurPx1	TextCursor.h	/^	int		m_boxCurPx1;$/;"	m	class:TextCursor	typeref:typename:int
m_boxCurPx2	TextCursor.h	/^	int		m_boxCurPx2;$/;"	m	class:TextCursor	typeref:typename:int
m_buffer	Document.h	/^	Buffer	*m_buffer;$/;"	m	class:Document	typeref:typename:Buffer *
m_buffer	EditView.h	/^	Buffer		*m_buffer;				\/\/	„Éù„Ç§„É≥„Éà„ÅÆ„Åø„Åß„ÄÅÈùûÊâÄÊúâ$/;"	m	class:EditView	typeref:typename:Buffer *
m_buffer	TestViCommands.cpp	/^	QString		m_buffer;$/;"	m	class:TestViCommands	typeref:typename:QString	file:
m_buffer	ViewTokenizer.h	/^	const Buffer	*m_buffer;$/;"	m	class:ViewTokenizer	typeref:typename:const Buffer *
m_buffer	drawTokenizer.h	/^	const Buffer	*m_buffer;$/;"	m	class:DrawTokenizer	typeref:typename:const Buffer *
m_buffer	tokenizer.h	/^	const Buffer	&m_buffer;$/;"	m	class:Tokenizer	typeref:typename:const Buffer &
m_buffer	viewLineMgr.h	/^	Buffer	*m_buffer;$/;"	m	class:ViewLineMgr	typeref:typename:Buffer *
m_candidates	AutoCompletionDlg.h	/^	const QStringList	m_candidates;	\/\/	ÁµûËæºÂâç„ÅÆ„É™„Çπ„Éà$/;"	m	class:AutoCompletionDlg	typeref:typename:const QStringList
m_candidates	CompletionWidget.h	/^	const QStringList	m_candidates;$/;"	m	class:CompletionWidget	typeref:typename:const QStringList
m_cdy	ViEngine.h	/^	wchar_t	m_cdy;				\/\/	{c|d|y}$/;"	m	class:ViEngine	typeref:typename:wchar_t
m_cdyRepCount	ViEngine.h	/^	int		m_cdyRepCount;		\/\/	cdy ÊåáÂÆö‰ª•Ââç„Å´ÊåáÂÆö„Åï„Çå„Å¶Áπ∞„ÇäËøî„ÅóÂõûÊï∞$/;"	m	class:ViEngine	typeref:typename:int
m_charEncoding	Document.h	/^	uchar	m_charEncoding;$/;"	m	class:Document	typeref:typename:uchar
m_clipboardHist	MainWindow.h	/^	QStringList		m_clipboardHist;		\/\/	„ÇØ„É™„ÉÉ„Éó„Éú„Éº„ÉâÂ±•Ê≠¥$/;"	m	class:MainWindow	typeref:typename:QStringList
m_clipboardHistActs	MainWindow.h	/^    QAction *m_clipboardHistActs[MaxClipboardHist];$/;"	m	class:MainWindow	typeref:typename:QAction * []
m_closeParenPos	EditView.h	/^	int		m_closeParenPos;$/;"	m	class:EditView	typeref:typename:int
m_closeParenViewLine	EditView.h	/^	int		m_closeParenViewLine;$/;"	m	class:EditView	typeref:typename:int
m_cmd	ViEngine.h	/^	int		m_cmd;					\/\/	Á¢∫ÂÆö„Åó„Åü„Ç≥„Éû„É≥„Éâ$/;"	m	class:ViEngine	typeref:typename:int
m_cmdLineChar	ViEngine.h	/^	QChar	m_cmdLineChar;		\/\/	 ':' | '\/' | '?'$/;"	m	class:ViEngine	typeref:typename:QChar
m_cmdLineEdit	MainWindow.h	/^    CommandLine	*m_cmdLineEdit;$/;"	m	class:MainWindow	typeref:typename:CommandLine *
m_cmdLineText	MainWindow.h	/^    QString			m_cmdLineText;					\/\/	ÂÖ•Âäõ„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà for Â±•Ê≠¥„Éï„Ç£„É´„Çø$/;"	m	class:MainWindow	typeref:typename:QString
m_cmdText	ViEngine.h	/^	QString	m_cmdText;			\/\/	„Ç≥„Éû„É≥„Éâ„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:ViEngine	typeref:typename:QString
m_codec	Document.h	/^	mutable QTextCodec	*m_codec;$/;"	m	class:Document	typeref:typename:QTextCodec *
m_color	NamedColorDlg.cpp	/^	uint	m_color;$/;"	m	struct:SColorTable	typeref:typename:uint	file:
m_color	typeSettings.cpp	/^	cchar	*m_color;		\/\/	ÉfÉtÉHÉãÉgêFñº$/;"	m	struct:KeyColor	typeref:typename:cchar *	file:
m_colorName	NamedColorDlg.h	/^	QString	m_colorName;$/;"	m	class:NamedColorDlg	typeref:typename:QString
m_colorThemeActions	MainWindow.h	/^    std::vector<QAction *>	m_colorThemeActions;$/;"	m	class:MainWindow	typeref:typename:std::vector<QAction * >
m_colors	typeSettings.h	/^	QColor	m_colors[N_COLOR];$/;"	m	class:TypeSettings	typeref:typename:QColor[]
m_connected	singleapplication.h	/^	bool	m_connected;$/;"	m	class:SingleApplication	typeref:typename:bool
m_curCharCode	MainWindow.h	/^	QLabel		*m_curCharCode;			\/\/	„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆÊñáÂ≠ó„Ç≥„Éº„Éâ$/;"	m	class:MainWindow	typeref:typename:QLabel *
m_curLine	ViEngine.h	/^	int		m_curLine;			\/\/	ÁèæÂú®Ë°å„ÄÅ1 org$/;"	m	class:ViEngine	typeref:typename:int
m_curLine	ViEngine.h	/^	int	m_curLine;$/;"	m	struct:LineNumbers	typeref:typename:int
m_curLineNum	EditView.h	/^	int		m_curLineNum;				\/\/	0 org$/;"	m	class:EditView	typeref:typename:int
m_curLineNumAnchor	EditView.h	/^	int		m_curLineNumAnchor;		\/\/	0 org$/;"	m	class:EditView	typeref:typename:int
m_curTabIndex	MainWindow.h	/^	int		m_curTabIndex;$/;"	m	class:MainWindow	typeref:typename:int
m_currentView	MainWindow.h	/^    EditView	*m_currentView;			\/\/	ÁèæÂú®„Éì„É•„Éº$/;"	m	class:MainWindow	typeref:typename:EditView *
m_cursorLine	ViewTokenizer.h	/^	bool	m_cursorLine;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_cursorLine	drawTokenizer.h	/^	bool	m_cursorLine;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_defaultExt	typeSettings.h	/^	QString	m_defaultExt;$/;"	m	class:TypeSettings	typeref:typename:QString
m_delForVarPos	EditView.h	/^	std::vector<int>	m_delForVarPos;			\/\/	for Â§âÊï∞ÂâäÈô§‰ΩçÁΩÆ$/;"	m	class:EditView	typeref:typename:std::vector<int>
m_dest	ViEngine.h	/^	int	m_dest;$/;"	m	struct:LineNumbers	typeref:typename:int
m_dispCursor	EditView.h	/^	bool	m_dispCursor;$/;"	m	class:EditView	typeref:typename:bool
m_docLine	viewLineMgr.h	/^	int	m_docLine;$/;"	m	struct:ViewLine	typeref:typename:int
m_document	EditView.h	/^	Document	*m_document;$/;"	m	class:EditView	typeref:typename:Document *
m_editCmd	ViEngine.h	/^	bool		m_editCmd;$/;"	m	class:ViEngine	typeref:typename:bool
m_editor	CompletionWidget.h	/^	EditView	*m_editor;$/;"	m	class:CompletionWidget	typeref:typename:EditView *
m_encodingCB	MainWindow.h	/^	QComboBox	*m_encodingCB;$/;"	m	class:MainWindow	typeref:typename:QComboBox *
m_endBlockCommentText	ViewTokenizer.h	/^	QString	m_endBlockCommentText;$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_endBlockCommentText	drawTokenizer.h	/^	QString	m_endBlockCommentText;$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_enumValues	globalSettings.h	/^	int			m_enumValues[N_ENUM];$/;"	m	class:GlobalSettings	typeref:typename:int[]
m_exCmdHist	MainWindow.h	/^    QStringList		m_exCmdHist;				\/\/	ex-command Â±•Ê≠¥$/;"	m	class:MainWindow	typeref:typename:QStringList
m_exCmdHistIndex	MainWindow.h	/^    int				m_exCmdHistIndex;$/;"	m	class:MainWindow	typeref:typename:int
m_extToTypeMap	settingsMgr.h	/^	QMap<QString, QString>	m_extToTypeMap;			\/\/	ext -> type map$/;"	m	class:SettingsMgr	typeref:typename:QMap<QString,QString>
m_failedPos	TestViCommands.cpp	/^	QVector<TestFailedItem>	m_failedPos;$/;"	m	class:TestViCommands	typeref:typename:QVector<TestFailedItem>	file:
m_fallingChars	EditView.h	/^	std::vector<FallingChar>	m_fallingChars;	\/\/	ËêΩ‰∏ãÊñáÂ≠ó„Åü„Å°$/;"	m	class:EditView	typeref:typename:std::vector<FallingChar>
m_favoriteFileActs	MainWindow.h	/^    QAction *m_favoriteFileActs[MaxFavoriteFiles];$/;"	m	class:MainWindow	typeref:typename:QAction * []
m_fileSystemModel	GrepDlg.h	/^	QFileSystemModel m_fileSystemModel;$/;"	m	class:GrepDlg	typeref:typename:QFileSystemModel
m_filterCaseSensitive	AutoCompletionDlg.h	/^	bool		m_filterCaseSensitive;		\/\/	ÁµûËæºÊôÇÔºöÂ§ßÊñáÂ≠óÂ∞èÊñáÂ≠óÂå∫Âà•$/;"	m	class:AutoCompletionDlg	typeref:typename:bool
m_filterText	AutoCompletionDlg.h	/^	QString		m_filterText;		\/\/	Áµû„ÇäËæº„Åø„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:AutoCompletionDlg	typeref:typename:QString
m_findLineEdit	MainWindow.h	/^	FindLineEdit	*m_findLineEdit;$/;"	m	class:MainWindow	typeref:typename:FindLineEdit *
m_findString	MainWindow.h	/^	QString			m_findString;$/;"	m	class:MainWindow	typeref:typename:QString
m_findStringCB	MainWindow.h	/^	QComboBox	*m_findStringCB;$/;"	m	class:MainWindow	typeref:typename:QComboBox *
m_findStringHist	MainWindow.h	/^	QStringList		m_findStringHist;			\/\/	Ê§úÁ¥¢ÊñáÂ≠óÂàóÂ±•Ê≠¥$/;"	m	class:MainWindow	typeref:typename:QStringList
m_findStringHistIndex	MainWindow.h	/^	int				m_findStringHistIndex;$/;"	m	class:MainWindow	typeref:typename:int
m_first	ViEngine.h	/^	int		m_first;$/;"	m	class:ViEngine	typeref:typename:int
m_first	ViEngine.h	/^	int	m_first;$/;"	m	struct:LineNumbers	typeref:typename:int
m_firstToken	tokenizer.h	/^	bool	m_firstToken;	\/\/	Ë°åÂÜÖ„ÅÆÊúÄÂàù„ÅÆ„Éà„Éº„ÇØ„É≥$/;"	m	class:Tokenizer	typeref:typename:bool
m_font	EditView.h	/^	QFont		m_font;$/;"	m	class:EditView	typeref:typename:QFont
m_fontBold	EditView.h	/^	QFont		m_fontBold;$/;"	m	class:EditView	typeref:typename:QFont
m_fontDescent	EditView.h	/^	int		m_fontDescent;		\/\/	„Éô„Éº„Çπ„É©„Ç§„É≥‰∏ã„Éî„ÇØ„Çª„É´Êï∞$/;"	m	class:EditView	typeref:typename:int
m_fontHeight	EditView.h	/^	int		m_fontHeight;$/;"	m	class:EditView	typeref:typename:int
m_fontMB	EditView.h	/^	QFont		m_fontMB;				\/\/	„Éû„É´„ÉÅ„Éê„Ç§„ÉàÁî®„Éï„Ç©„É≥„Éà$/;"	m	class:EditView	typeref:typename:QFont
m_fontWidth	EditView.h	/^	int		m_fontWidth;$/;"	m	class:EditView	typeref:typename:int
m_formerTabIndex	MainWindow.h	/^	int		m_formerTabIndex;$/;"	m	class:MainWindow	typeref:typename:int
m_fullPathName	Document.h	/^	QString	m_fullPathName;$/;"	m	class:Document	typeref:typename:QString
m_fullText	ViewTokenizer.h	/^	QString m_fullText;		\/\/	„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆ‰ª•Èôç„ÇÇÂê´„ÇÅ„Åü„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_fullText	drawTokenizer.h	/^	QString m_fullText;		\/\/	ÉJÅ[É\\Éãà íuà»ç~Ç‡ä‹ÇﬂÇΩÉeÉLÉXÉg$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_globSettings	GlobalStgDlg.h	/^	GlobalSettings	*m_globSettings;$/;"	m	class:GlobalStgDlg	typeref:typename:GlobalSettings *
m_globSettings	GrepDlg.h	/^	GlobalSettings	*m_globSettings;$/;"	m	class:GrepDlg	typeref:typename:GlobalSettings *
m_globSettings	GrepEngine.h	/^	GlobalSettings	*m_globSettings;$/;"	m	class:GrepEngine	typeref:typename:GlobalSettings *
m_globalDoing	ViEngine.h	/^	bool		m_globalDoing;				\/\/	:g, :v „Ç≥„Éû„É≥„ÉâÂÆüË°å‰∏≠$/;"	m	class:ViEngine	typeref:typename:bool
m_grepDirHist	MainWindow.h	/^	QStringList		m_grepDirHist;				\/\/	Ê§úÁ¥¢„Éá„Ç£„É¨„ÇØ„Éà„É™Â±•Ê≠¥$/;"	m	class:MainWindow	typeref:typename:QStringList
m_grepEngine	MainWindow.h	/^	class GrepEngine		*m_grepEngine;$/;"	m	class:MainWindow	typeref:class:GrepEngine *
m_grepView	MainWindow.h	/^    EditView	*m_grepView;			\/\/	grepÁµêÊûúÂá∫Âäõ„Éì„É•„Éº$/;"	m	class:MainWindow	typeref:typename:EditView *
m_htmlTagLvl	ViewTokenizer.h	/^	int		m_htmlTagLvl;						\/\/	"<" „ÅÆ„Éç„Çπ„ÉàÊï∞$/;"	m	class:ViewTokenizer	typeref:typename:int
m_htmlTagLvl	drawTokenizer.h	/^	int		m_htmlTagLvl;						\/\/	"<" ÇÃÉlÉXÉgêî$/;"	m	class:DrawTokenizer	typeref:typename:int
m_iconCPP	MainWindow.h	/^	QIcon	*m_iconCPP;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconCS	MainWindow.h	/^	QIcon	*m_iconCS;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconCSS	MainWindow.h	/^	QIcon	*m_iconCSS;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconFS	MainWindow.h	/^	QIcon	*m_iconFS;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconHLSL	MainWindow.h	/^	QIcon	*m_iconHLSL;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconHTML	MainWindow.h	/^	QIcon	*m_iconHTML;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconJAVA	MainWindow.h	/^	QIcon	*m_iconJAVA;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconJS	MainWindow.h	/^	QIcon	*m_iconJS;			\/\/	JavaScript$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconLOG	MainWindow.h	/^	QIcon	*m_iconLOG;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconMARKDN	MainWindow.h	/^	QIcon	*m_iconMARKDN;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconPASCAL	MainWindow.h	/^	QIcon	*m_iconPASCAL;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconPERL	MainWindow.h	/^	QIcon	*m_iconPERL;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconPHP	MainWindow.h	/^	QIcon	*m_iconPHP;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconPYTHON	MainWindow.h	/^	QIcon	*m_iconPYTHON;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconRUBY	MainWindow.h	/^	QIcon	*m_iconRUBY;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconSPR	MainWindow.h	/^	QIcon	*m_iconSPR;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconSQL	MainWindow.h	/^	QIcon	*m_iconSQL;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_iconTXT	MainWindow.h	/^	QIcon	*m_iconTXT;$/;"	m	class:MainWindow	typeref:typename:QIcon *
m_idleThread	MainWindow.h	/^	QThread			m_idleThread;$/;"	m	class:MainWindow	typeref:typename:QThread
m_inBlockComment	ViewTokenizer.h	/^	bool	m_inBlockComment;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_inBlockComment	drawTokenizer.h	/^	bool	m_inBlockComment;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_inHTMLTag	ViewTokenizer.h	/^	bool	m_inHTMLTag;						\/\/	"<" ... ">" „ÅÆ‰∏≠$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_inHTMLTag	drawTokenizer.h	/^	bool	m_inHTMLTag;						\/\/	"<" ... ">" ÇÃíÜ$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_inLineComment	ViewTokenizer.h	/^	bool	m_inLineComment;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_inLineComment	drawTokenizer.h	/^	bool	m_inLineComment;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_inPHP	ViewTokenizer.h	/^	bool	m_inPHP;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_inPHP	drawTokenizer.h	/^	bool	m_inPHP;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_inScriptStartEnd	ViewTokenizer.h	/^	bool	m_inScriptStartEnd;				\/\/	"<script> ... <\/script> „ÅÆ‰∏≠$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_inScriptStartEnd	drawTokenizer.h	/^	bool	m_inScriptStartEnd;				\/\/	"<script> ... <\/script> ÇÃíÜ$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_incSearchPos	MainWindow.h	/^	pos_t			m_incSearchPos;				\/\/	„Ç§„É≥„ÇØ„É™„É°„É≥„Çø„É´„Çµ„Éº„ÉÅÈñãÂßã‰ΩçÁΩÆ$/;"	m	class:MainWindow	typeref:typename:pos_t
m_incSearchPos	ViEngine.h	/^	int		m_incSearchPos;			\/\/	„Ç§„É≥„ÇØ„É™„É°„É≥„Çø„É´„Çµ„Éº„ÉÅÂâç„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆ$/;"	m	class:ViEngine	typeref:typename:int
m_incSearchView	ViEngine.h	/^	EditView	*m_incSearchView;			\/\/	„Ç§„É≥„ÇØ„É™„É°„É≥„Çø„É´„Çµ„Éº„ÉÅ‰∏≠„Éì„É•„Éº$/;"	m	class:ViEngine	typeref:typename:EditView *
m_incSearched	MainWindow.h	/^	bool	m_incSearched;			\/\/	„Ç§„É≥„ÇØ„É™„É°„É≥„Çø„É´„Çµ„Éº„ÉÅÊ∏à„Åø$/;"	m	class:MainWindow	typeref:typename:bool
m_insertedText	MainWindow.h	/^	QString			m_insertedText;$/;"	m	class:MainWindow	typeref:typename:QString
m_insertedText	ViEngine.h	/^	QString	m_insertedText;         \/\/  ÊåøÂÖ•„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:ViEngine	typeref:typename:QString
m_intValues	globalSettings.h	/^	int		m_intValues[N_INT];$/;"	m	class:GlobalSettings	typeref:typename:int[]
m_intValues	typeSettings.h	/^	int		m_intValues[N_INT];$/;"	m	class:TypeSettings	typeref:typename:int[]
m_isTokenInComment	ViewTokenizer.h	/^	bool	m_isTokenInComment;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_isTokenInComment	drawTokenizer.h	/^	bool	m_isTokenInComment;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_isTokenInHTMLTag	ViewTokenizer.h	/^	bool	m_isTokenInHTMLTag;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_isTokenInHTMLTag	drawTokenizer.h	/^	bool	m_isTokenInHTMLTag;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_isTokenNewLine	ViewTokenizer.h	/^	bool	m_isTokenNewLine;$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_isTokenNewLine	drawTokenizer.h	/^	bool	m_isTokenNewLine;$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_ix	TestViCommands.cpp	/^	int			m_ix;$/;"	m	class:TestViCommands	typeref:typename:int	file:
m_ix	ViewTokenizer.h	/^	int		m_ix;			\/\/	Ê¨°„ÅÆÊñáÂ≠ó$/;"	m	class:ViewTokenizer	typeref:typename:int
m_ix	drawTokenizer.h	/^	int		m_ix;		\/\/	éüÇÃï∂éö$/;"	m	class:DrawTokenizer	typeref:typename:int
m_ixToButtonHash	TypeStgDlg.h	/^	QHash<int, QToolButton *>	m_ixToButtonHash;$/;"	m	class:TypeStgDlg	typeref:typename:QHash<int,QToolButton * >
m_jumpLineNumber	MainWindow.h	/^	int					m_jumpLineNumber;		\/\/	1 org$/;"	m	class:MainWindow	typeref:typename:int
m_key	globalSettings.cpp	/^	cchar	*m_key;		\/\/	„Ç≠„ÉºÂêç$/;"	m	struct:KeyBoolItem	typeref:typename:cchar *	file:
m_key	globalSettings.cpp	/^	cchar	*m_key;		\/\/	„Ç≠„ÉºÂêç$/;"	m	struct:KeyEnumItem	typeref:typename:cchar *	file:
m_key	globalSettings.cpp	/^	cchar	*m_key;		\/\/	„Ç≠„ÉºÂêç$/;"	m	struct:KeyIntItem	typeref:typename:cchar *	file:
m_key	globalSettings.cpp	/^	cchar	*m_key;		\/\/	„Ç≠„ÉºÂêç$/;"	m	struct:KeyTextItem	typeref:typename:cchar *	file:
m_key	typeSettings.cpp	/^	cchar	*m_key;			\/\/	ÉLÅ[ñº$/;"	m	struct:KeyBoolItem	typeref:typename:cchar *	file:
m_key	typeSettings.cpp	/^	cchar	*m_key;			\/\/	êFÉ^ÉCÉvñº$/;"	m	struct:KeyColor	typeref:typename:cchar *	file:
m_key	typeSettings.cpp	/^	cchar	*m_key;		\/\/	ÉLÅ[ñº$/;"	m	struct:KeyIntItem	typeref:typename:cchar *	file:
m_key	typeSettings.cpp	/^	cchar	*m_key;		\/\/	ÉLÅ[ñº$/;"	m	struct:KeyTextItem	typeref:typename:cchar *	file:
m_keyWord1Set	typeSettings.h	/^	QSet<QString>	m_keyWord1Set;$/;"	m	class:TypeSettings	typeref:typename:QSet<QString>
m_keyWord2Set	typeSettings.h	/^	QSet<QString>	m_keyWord2Set;$/;"	m	class:TypeSettings	typeref:typename:QSet<QString>
m_last	tokenizer.h	/^	pos_t	m_last;$/;"	m	class:Tokenizer	typeref:typename:pos_t
m_lastBuffer	ViewTokenizer.h	/^	int		m_lastBuffer;$/;"	m	class:ViewTokenizer	typeref:typename:int
m_lastBuffer	drawTokenizer.h	/^	int		m_lastBuffer;$/;"	m	class:DrawTokenizer	typeref:typename:int
m_lastBuffer2	ViewTokenizer.h	/^	int		m_lastBuffer2;			\/\/	„Éõ„É≥„Éà„ÅÆ„Éê„ÉÉ„Éï„Ç°Êú´Â∞æ$/;"	m	class:ViewTokenizer	typeref:typename:int
m_lastBuffer2	drawTokenizer.h	/^	int		m_lastBuffer2;			\/\/	ÉzÉìÉgÇÃÉoÉbÉtÉ@ññîˆ$/;"	m	class:DrawTokenizer	typeref:typename:int
m_lastFindChar	ViEngine.h	/^	wchar_t	m_lastFindChar;	\/\/	fFtT Ê§úÁ¥¢ÊñáÂ≠ó$/;"	m	class:ViEngine	typeref:typename:wchar_t
m_lastFindCmd	ViEngine.h	/^	int		m_lastFindCmd;		\/\/	f | F | t | T$/;"	m	class:ViEngine	typeref:typename:int
m_lastModified	Document.h	/^	mutable QDateTime	m_lastModified;$/;"	m	class:Document	typeref:typename:QDateTime
m_lastRepeatCount	ViEngine.h	/^	int		m_lastRepeatCount;	\/\/	ÂÆüË°åÊ∏à„Åø„Ç≥„Éû„É≥„ÉâÊåáÂÆöÊôÇÂõûÊï∞$/;"	m	class:ViEngine	typeref:typename:int
m_lastSubstCmd	ViEngine.h	/^	QString	m_lastSubstCmd;		\/\/	ÊúÄÂæå„Å´ÂÆüË°å„Åï„Çå„Åü subst „Ç≥„Éû„É≥„Éâ$/;"	m	class:ViEngine	typeref:typename:QString
m_lastView	MainWindow.h	/^    EditView*m_lastView;				\/\/	Output „Å´„Éï„Ç©„Éº„Ç´„Çπ„ÅåÁßª„ÇãÂâç„ÅÆ„Éï„Ç©„Éº„Ç´„Çπ„Éì„É•„Éº$/;"	m	class:MainWindow	typeref:typename:EditView *
m_lineBreak	viewLineMgr.h	/^	bool		m_lineBreak;		\/\/	Êäò„ÇäËøî„Åó„É¢„Éº„Éâ$/;"	m	class:ViewLineMgr	typeref:typename:bool
m_lineComment	tokenizer.h	/^	QString		m_lineComment;		\/\/	Ë°å„Ç≥„É°„É≥„ÉàÊñáÂ≠ó$/;"	m	class:Tokenizer	typeref:typename:QString
m_lineCommentText	ViewTokenizer.h	/^	QString	m_lineCommentText;$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_lineCommentText	drawTokenizer.h	/^	QString	m_lineCommentText;$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_lineCount	ViEngine.h	/^	int	m_lineCount;$/;"	m	struct:LineNumbers	typeref:typename:int
m_lineEdit	NamedColorDlg.h	/^	class QLineEdit *m_lineEdit;$/;"	m	class:NamedColorDlg	typeref:class:QLineEdit *
m_lineHeight	EditView.h	/^	int		m_lineHeight;		\/\/	Ë°åÈ´òÔºàin PixelÔºâ$/;"	m	class:EditView	typeref:typename:int
m_lineNum	TestViCommands.cpp	/^	int			m_lineNum;$/;"	m	class:TestViCommands	typeref:typename:int	file:
m_lineNum	TestViCommands.cpp	/^	int		m_lineNum;$/;"	m	struct:TestFailedItem	typeref:typename:int	file:
m_lineNum	tokenizer.h	/^	int		m_lineNum;		\/\/	ÁèæÂú®Ë°åÁï™Âè∑ (1..*)$/;"	m	class:Tokenizer	typeref:typename:int
m_lineNumAreaWidget	EditView.h	/^	QWidget		m_lineNumAreaWidget;	\/\/	Ë°åÁï™Âè∑Ë°®Á§∫Áî®„Ç¶„Ç£„Ç∏„Çß„ÉÉ„ÉàÔºü$/;"	m	class:EditView	typeref:typename:QWidget
m_lineNumAreaWidth	EditView.h	/^	int		m_lineNumAreaWidth;$/;"	m	class:EditView	typeref:typename:int
m_lineNumDigits	EditView.h	/^	int		m_lineNumDigits;	\/\/	log EOFË°åÁï™Âè∑$/;"	m	class:EditView	typeref:typename:int
m_lineNumWidth	EditView.h	/^	int		m_lineNumWidth;		\/\/	Ë°åÁï™Âè∑Ë°®Á§∫ÂπÖ$/;"	m	class:EditView	typeref:typename:int
m_lineNumberVisible	EditView.h	/^	bool	m_lineNumberVisible;$/;"	m	class:EditView	typeref:typename:bool
m_lineOffsetLabel	MainWindow.h	/^	QLabel		*m_lineOffsetLabel;$/;"	m	class:MainWindow	typeref:typename:QLabel *
m_listWidget	AutoCompletionDlg.h	/^	QListWidget	*m_listWidget;$/;"	m	class:AutoCompletionDlg	typeref:typename:QListWidget *
m_listWidget	CompletionWidget.h	/^	QListWidget	*m_listWidget;$/;"	m	class:CompletionWidget	typeref:typename:QListWidget *
m_listWidget	NamedColorDlg.h	/^	class QListWidget *m_listWidget;$/;"	m	class:NamedColorDlg	typeref:class:QListWidget *
m_lns	ViEngine.h	/^	LineNumbers	m_lns;		\/\/	ex „Ç≥„Éû„É≥„ÉâË°åÁï™Âè∑ÊÉÖÂ†±$/;"	m	class:ViEngine	typeref:typename:LineNumbers
m_localServer	singleapplication.h	/^	QLocalServer	m_localServer;$/;"	m	class:SingleApplication	typeref:typename:QLocalServer
m_localSocket	singleapplication.h	/^	QLocalSocket	m_localSocket;$/;"	m	class:SingleApplication	typeref:typename:QLocalSocket
m_lv	viewLineMgr.h	/^	gap_buffer<ViewLine>	m_lv;		\/\/	„Éì„É•„ÉºË°å‚Üí„Éê„ÉÉ„Éï„Ç°Ë°åÂ§âÊèõ„ÉÜ„Éº„Éñ„É´$/;"	m	class:ViewLineMgr	typeref:typename:gap_buffer<ViewLine>
m_mainWindow	EditView.h	/^	MainWindow	*m_mainWindow;$/;"	m	class:EditView	typeref:typename:MainWindow *
m_mainWindow	TestViCommands.cpp	/^	MainWindow	*m_mainWindow;$/;"	m	class:TestViCommands	typeref:typename:MainWindow *	file:
m_mapFilePathToLine	MainWindow.h	/^    QMap<QString, quint64>	m_mapFilePathToLine;		\/\/	ÂÄ§„ÅÆ‰∏ä‰Ωç„ÅØ (uint)time(0) „ÅÆÂÄ§$/;"	m	class:MainWindow	typeref:typename:QMap<QString,quint64>
m_mapFilePathToMarks	MainWindow.h	/^    QMultiMap<QString, quint64>	m_mapFilePathToMarks;$/;"	m	class:MainWindow	typeref:typename:QMultiMap<QString,quint64>
m_matchedString	MainWindow.h	/^	QString	m_matchedString;		\/\/	„Éû„ÉÉ„ÉÅÂº∑Ë™øÊñáÂ≠óÂàó$/;"	m	class:MainWindow	typeref:typename:QString
m_message	TestViCommands.cpp	/^	QString	m_message;$/;"	m	struct:TestFailedItem	typeref:typename:QString	file:
m_minMap	Document.h	/^	QPixmap		m_minMap;$/;"	m	class:Document	typeref:typename:QPixmap
m_minMapDragging	EditView.h	/^	bool	m_minMapDragging;			\/\/	„Éü„Éã„Éû„ÉÉ„ÉóÁ™ì„Éâ„É©„ÉÉ„Ç∞ÁßªÂãï‰∏≠$/;"	m	class:EditView	typeref:typename:bool
m_minMapWidget	EditView.h	/^	QWidget		m_minMapWidget;$/;"	m	class:EditView	typeref:typename:QWidget
m_mmScale	Document.h	/^	double		m_mmScale;			\/\/	1.0 Êú™Ê∫Ä„Åß„ÅÇ„Çå„Å∞Á∏ÆÂ∞è„Åï„Çå„Å¶„ÅÑ„Çã$/;"	m	class:Document	typeref:typename:double
m_mmSeqNumber	Document.h	/^	int			m_mmSeqNumber;		\/\/	„Éü„Éã„Éû„ÉÉ„Éó‰ΩúÊàêÊôÇ„Ç∑„É™„Ç¢„É´Áï™Âè∑$/;"	m	class:Document	typeref:typename:int
m_mode	TextCursor.h	/^	byte_t		m_mode;$/;"	m	class:TextCursor	typeref:typename:byte_t
m_mode	ViEngine.h	/^	byte_t		m_mode;$/;"	m	class:ViEngine	typeref:typename:byte_t
m_modeCB	MainWindow.h	/^	QComboBox	*m_modeCB;				\/\/	ins\/rep\/vi\/ex$/;"	m	class:MainWindow	typeref:typename:QComboBox *
m_modeChanging	MainWindow.h	/^	bool	m_modeChanging;			\/\/	„É¢„Éº„ÉâÂ§âÊõ¥‰∏≠$/;"	m	class:MainWindow	typeref:typename:bool
m_mouseDblClkDragging	EditView.h	/^	bool	m_mouseDblClkDragging;		\/\/	ÂçòË™ûÈÅ∏Êäû‰∏≠$/;"	m	class:EditView	typeref:typename:bool
m_mouseDragging	EditView.h	/^	bool	m_mouseDragging;			\/\/	„Éû„Ç¶„Çπ„Éú„Çø„É≥Êäº‰∏ãÁä∂ÊÖã$/;"	m	class:EditView	typeref:typename:bool
m_mouseLineDragging	EditView.h	/^	bool	m_mouseLineDragging;		\/\/	Ë°åÈÅ∏Êäû‰∏≠$/;"	m	class:EditView	typeref:typename:bool
m_moved	ViEngine.h	/^	bool		m_moved;$/;"	m	class:ViEngine	typeref:typename:bool
m_nFailed	TestViCommands.cpp	/^	int			m_nFailed;$/;"	m	class:TestViCommands	typeref:typename:int	file:
m_nLines	ViEngine.h	/^	int		m_nLines;$/;"	m	class:ViEngine	typeref:typename:int
m_nLines	ViEngine.h	/^	int	m_nLines;$/;"	m	struct:LineNumbers	typeref:typename:int
m_nTested	TestViCommands.cpp	/^	int			m_nTested;$/;"	m	class:TestViCommands	typeref:typename:int	file:
m_nViewLine	EditView.h	/^	int		m_nViewLine;$/;"	m	class:EditView	typeref:typename:int
m_name	NamedColorDlg.cpp	/^    cchar	*m_name;$/;"	m	struct:SColorTable	typeref:typename:cchar *	file:
m_namedYB	ViEngine.h	/^	YankBufferItem	m_namedYB[N_YANK_BUFFER];		\/\/	ÂêçÂâç‰ªò„Åç„É§„É≥„ÇØ„Éê„ÉÉ„Éï„Ç°$/;"	m	class:ViEngine	typeref:typename:YankBufferItem[]
m_newLineCode	Document.h	/^	byte_t	m_newLineCode;$/;"	m	class:Document	typeref:typename:byte_t
m_newLineCodeCB	MainWindow.h	/^	QComboBox	*m_newLineCodeCB;$/;"	m	class:MainWindow	typeref:typename:QComboBox *
m_noDeleteAnimation	EditView.h	/^	bool	m_noDeleteAnimation;		\/\/	‰∏ÄÊôÇÁöÑ„Å´ÂâäÈô§„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Á¶ÅÊ≠¢$/;"	m	class:EditView	typeref:typename:bool
m_noFallingChars	EditView.h	/^	bool	m_noFallingChars;			\/\/	‰∏ÄÊôÇÁöÑ„Å´ÂâäÈô§ÊñáÂ≠óËêΩ‰∏ãÁ¶ÅÊ≠¢$/;"	m	class:EditView	typeref:typename:bool
m_noInsModeAtImeOpenStatus	ViEngine.h	/^	bool		m_noInsModeAtImeOpenStatus;$/;"	m	class:ViEngine	typeref:typename:bool
m_offset	viewLineMgr.h	/^	int	m_offset;				\/\/	Ë°®Á§∫ÈñãÂßã„Ç™„Éï„Çª„ÉÉ„Éà$/;"	m	struct:ViewLine	typeref:typename:int
m_openParenPos	EditView.h	/^	int		m_openParenPos;				\/\/	ÂØæÂøú„Åô„ÇãÊã¨ÂºßÂº∑Ë™ø$/;"	m	class:EditView	typeref:typename:int
m_openParenViewLine	EditView.h	/^	int		m_openParenViewLine;$/;"	m	class:EditView	typeref:typename:int
m_orgText	ViewTokenizer.h	/^	QString	m_orgText;							\/\/	&lt; Á≠â„ÅÆHTMLÁâπÊÆäÊñáÂ≠ó$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_orgText	drawTokenizer.h	/^	QString	m_orgText;							\/\/	&lt; ìôÇÃHTMLì¡éÍï∂éö$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_outlineBar	MainWindow.h	/^	OutlineBar		*m_outlineBar;$/;"	m	class:MainWindow	typeref:typename:OutlineBar *
m_outlineDock	MainWindow.h	/^	QDockWidget		*m_outlineDock;$/;"	m	class:MainWindow	typeref:typename:QDockWidget *
m_outputDock	MainWindow.h	/^	QDockWidget		*m_outputDock;$/;"	m	class:MainWindow	typeref:typename:QDockWidget *
m_outputView	MainWindow.h	/^    EditView	*m_outputView;			\/\/	Output„Éì„É•„Éº$/;"	m	class:MainWindow	typeref:typename:EditView *
m_outputWidget	MainWindow.h	/^	OutputView	*m_outputWidget;$/;"	m	class:MainWindow	typeref:typename:OutputView *
m_path	TestViCommands.cpp	/^	QString	m_path;$/;"	m	struct:TestFailedItem	typeref:typename:QString	file:
m_pathNamePrinted	ViEngine.h	/^	bool		m_pathNamePrinted;$/;"	m	class:ViEngine	typeref:typename:bool
m_pnt	EditView.h	/^	QPointF	m_pnt;		\/\/	‰ΩçÁΩÆ$/;"	m	struct:FallingChar	typeref:typename:QPointF
m_pos	TextCursor.h	/^	int		m_pos;$/;"	m	class:TextCursor	typeref:typename:int
m_pos	assocParen.cpp	/^	pos_t		m_pos;			\/\/	< „ÅÆ‰ΩçÁΩÆ$/;"	m	struct:TagPos	typeref:typename:pos_t	file:
m_pos	tokenizer.h	/^	pos_t	m_pos;$/;"	m	class:Tokenizer	typeref:typename:pos_t
m_possibleCmdModeCount	MainWindow.h	/^	int					m_possibleCmdModeCount;		\/\/	vi „Ç≥„Éû„É≥„Éâ„É¢„Éº„ÉâÈÅ∑ÁßªÂèØËÉΩÂõûÊï∞$/;"	m	class:MainWindow	typeref:typename:int
m_possibleGrepCount	MainWindow.h	/^	int					m_possibleGrepCount;			\/\/	Grep ÂÆüË°åÂèØËÉΩÂõûÊï∞$/;"	m	class:MainWindow	typeref:typename:int
m_possibleReplaceCount	MainWindow.h	/^	int					m_possibleReplaceCount;		\/\/	Replace ÂÆüË°åÂèØËÉΩÂõûÊï∞$/;"	m	class:MainWindow	typeref:typename:int
m_preeditPos	EditView.h	/^	int		m_preeditPos;			\/\/	Â§âÊèõ‰ΩçÁΩÆ$/;"	m	class:EditView	typeref:typename:int
m_preeditString	EditView.h	/^	QString	m_preeditString;		\/\/	Â§âÊèõ‰∏≠ÊñáÂ≠óÂàó$/;"	m	class:EditView	typeref:typename:QString
m_preeditWidth	EditView.h	/^	int		m_preeditWidth;			\/\/	Â§âÊèõ‰∏≠ÊñáÂ≠óÂàóË°®Á§∫ÂπÖ$/;"	m	class:EditView	typeref:typename:int
m_prevMode	ViEngine.h	/^	byte_t		m_prevMode;			\/\/	Áõ¥Ââç„ÅÆ„É¢„Éº„Éâ$/;"	m	class:ViEngine	typeref:typename:byte_t
m_prevText	tokenizer.h	/^	QString	m_prevText;		\/\/	„Å≤„Å®„Å§Ââç„ÅÆ„Éà„Éº„ÇØ„É≥ÊñáÂ≠óÂàó$/;"	m	class:Tokenizer	typeref:typename:QString
m_process	MainWindow.h	/^    QProcess	*m_process;					\/\/	Â§ñÈÉ®„Ç≥„Éû„É≥„ÉâÂÆüË°åÁî®„Éó„É≠„Çª„Çπ$/;"	m	class:MainWindow	typeref:typename:QProcess *
m_pushed	tokenizer.h	/^	bool	m_pushed;$/;"	m	class:Tokenizer	typeref:typename:bool
m_px	TextCursor.h	/^	int		m_px;			\/\/	‰øùÂ≠ò‰ΩçÁΩÆ$/;"	m	class:TextCursor	typeref:typename:int
m_quoteChar	ViewTokenizer.h	/^	char	m_quoteChar;							\/\/	„ÉÄ„Éñ„É´„Éª„Ç∑„É≥„Ç∞„É´„ÇØ„Ç©„Éº„Éà‰∏≠„ÅÆÂ†¥Âêà„Å´ÊúâÂäπ$/;"	m	class:ViewTokenizer	typeref:typename:char
m_quoteChar	drawTokenizer.h	/^	char	m_quoteChar;							\/\/	É_ÉuÉãÅEÉVÉìÉOÉãÉNÉHÅ[ÉgíÜÇÃèÍçáÇ…óLå¯$/;"	m	class:DrawTokenizer	typeref:typename:char
m_quotedText	ViewTokenizer.h	/^	QString	m_quotedText;						\/\/	ÊñáÂ≠óÂàó„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_quotedText	drawTokenizer.h	/^	QString	m_quotedText;						\/\/	ï∂éöóÒÉeÉLÉXÉg$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_quotedTextix	ViewTokenizer.h	/^	int		m_quotedTextix;$/;"	m	class:ViewTokenizer	typeref:typename:int
m_quotedTextix	drawTokenizer.h	/^	int		m_quotedTextix;$/;"	m	class:DrawTokenizer	typeref:typename:int
m_recentDirActs	MainWindow.h	/^    QAction *m_recentDirActs[MaxRecentDirs];$/;"	m	class:MainWindow	typeref:typename:QAction * []
m_recentFileActs	MainWindow.h	/^    QAction *m_recentFileActs[MaxRecentFiles];$/;"	m	class:MainWindow	typeref:typename:QAction * []
m_recentFileSystemActs	MainWindow.h	/^    QAction *m_recentFileSystemActs[MaxRecentDirs];$/;"	m	class:MainWindow	typeref:typename:QAction * []
m_redoCmd	ViEngine.h	/^	QString	m_redoCmd;              \/\/  .(dot) „ÅßÂÜçÂÆüË°å„Åô„Çã„Ç≥„Éû„É≥„Éâ$/;"	m	class:ViEngine	typeref:typename:QString
m_redoRecording	ViEngine.h	/^	bool		m_redoRecording;			\/\/  .(dot) „ÅÆ„Åü„ÇÅ„Å´ÊåøÂÖ•ÊñáÂ≠óÂàóË®òÈå≤‰∏≠$/;"	m	class:ViEngine	typeref:typename:bool
m_redoRepeatCount	ViEngine.h	/^	int		m_redoRepeatCount;$/;"	m	class:ViEngine	typeref:typename:int
m_redoing	ViEngine.h	/^	bool		m_redoing;						\/\/  .(dot) ÂÆüË°å‰∏≠„Éï„É©„Ç∞$/;"	m	class:ViEngine	typeref:typename:bool
m_reinserting	MainWindow.h	/^    bool		m_reinserting;			\/\/	ÂÜçÂÖ•Âäõ‰∏≠$/;"	m	class:MainWindow	typeref:typename:bool
m_repeatCount	ViEngine.h	/^	int		m_repeatCount;		\/\/	Áπ∞„ÇäËøî„ÅóÂõûÊï∞$/;"	m	class:ViEngine	typeref:typename:int
m_sbMessage	MainWindow.h	/^	QString		m_sbMessage;$/;"	m	class:MainWindow	typeref:typename:QString
m_scrollX0	EditView.h	/^	int		m_scrollX0;			\/\/	Ê∞¥Âπ≥ÊñπÂêë„Çπ„ÇØ„É≠„Éº„É´Ôºà0 org „Ç´„É©„É†‰ΩçÁΩÆÔºâ$/;"	m	class:EditView	typeref:typename:int
m_scrollY0	EditView.h	/^	int		m_scrollY0;$/;"	m	class:EditView	typeref:typename:int
m_searchAlgorithm	MainWindow.h	/^	byte_t	m_searchAlgorithm;$/;"	m	class:MainWindow	typeref:typename:byte_t
m_searchFwd	ViEngine.h	/^	bool		m_searchFwd;			\/\/	Ê§úÁ¥¢ÊñπÂêë$/;"	m	class:ViEngine	typeref:typename:bool
m_searchPat	ViEngine.h	/^	QString	m_searchPat;						\/\/	Ê§úÁ¥¢ÊñáÂ≠óÂàó$/;"	m	class:ViEngine	typeref:typename:QString
m_searching	MainWindow.h	/^	bool	m_searching;			\/\/	Ê§úÁ¥¢‰∏≠$/;"	m	class:MainWindow	typeref:typename:bool
m_second	ViEngine.h	/^	int		m_second;$/;"	m	class:ViEngine	typeref:typename:int
m_second	ViEngine.h	/^	int	m_second;$/;"	m	struct:LineNumbers	typeref:typename:int
m_selectedString	EditView.h	/^	QString	m_selectedString;		\/\/	Â§âÊèõÈñãÂßãÊôÇ„Å´ÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„ÅüÊñáÂ≠óÂàó$/;"	m	class:EditView	typeref:typename:QString
m_seqGrepView	MainWindow.h	/^    int		m_seqGrepView;$/;"	m	class:MainWindow	typeref:typename:int
m_sock	singleapplication.h	/^	QLocalSocket *m_sock;$/;"	m	class:SingleApplication	typeref:typename:QLocalSocket *
m_sssrc	GrepEngine.h	/^	SSSearch	*m_sssrc;$/;"	m	class:GrepEngine	typeref:typename:SSSearch *
m_sssrc	MainWindow.h	/^	SSSearch		*m_sssrc;$/;"	m	class:MainWindow	typeref:typename:SSSearch *
m_sssrc2	MainWindow.h	/^	SSSearch		*m_sssrc2;$/;"	m	class:MainWindow	typeref:typename:SSSearch *
m_startTag	ViewTokenizer.h	/^	bool	m_startTag;								\/\/	true for "<", false for "<\/"$/;"	m	class:ViewTokenizer	typeref:typename:bool
m_startTag	drawTokenizer.h	/^	bool	m_startTag;								\/\/	true for "<", false for "<\/"$/;"	m	class:DrawTokenizer	typeref:typename:bool
m_subMode	ViEngine.h	/^	wchar_t	m_subMode;		\/\/	{c|d|g|y|z|>|<|#|[|]}$/;"	m	class:ViEngine	typeref:typename:wchar_t
m_tag	assocParen.cpp	/^	QString	m_tag;		\/\/	ÁµÇ‰∫Ü„Çø„Ç∞„ÅÆÂ†¥Âêà„ÅØ "\/" + „Çø„Ç∞ÊñáÂ≠óÂàó$/;"	m	struct:TagPos	typeref:typename:QString	file:
m_tagText	ViewTokenizer.h	/^	QString	m_tagText;							\/\/	"<" „Çø„Ç∞„ÉÜ„Ç≠„Çπ„Éà$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_tagText	drawTokenizer.h	/^	QString	m_tagText;							\/\/	"<" É^ÉOÉeÉLÉXÉg$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_tagsJumpFileName	MainWindow.h	/^    QString		m_tagsJumpFileName;		\/\/	tagsJump „ÇíË°å„Å£„ÅüÊñáÊõ∏„ÅÆ„Éï„É´„Éë„ÇπÂêç$/;"	m	class:MainWindow	typeref:typename:QString
m_tagsJumpFileNames	MainWindow.h	/^    std::vector<QString>	m_tagsJumpFileNames;		\/\/	tagsJump „ÇíË°å„Å£„ÅüÊñáÊõ∏„ÅÆ„Éï„É´„Éë„ÇπÂêç$/;"	m	class:MainWindow	typeref:typename:std::vector<QString>
m_tagsJumpLine	MainWindow.h	/^    int				m_tagsJumpLine;				\/\/	tagsJump „ÇíË°å„Å£„ÅüÊñáÊõ∏Ë°å 0..*$/;"	m	class:MainWindow	typeref:typename:int
m_tagsJumpLines	MainWindow.h	/^    std::vector<int>		m_tagsJumpLines;				\/\/	tagsJump „ÇíË°å„Å£„ÅüÊñáÊõ∏Ë°å 0..*$/;"	m	class:MainWindow	typeref:typename:std::vector<int>
m_terminated	GrepEngine.h	/^	bool	m_terminated;$/;"	m	class:GrepEngine	typeref:typename:bool
m_testFileName	TestViCommands.cpp	/^	const QString &m_testFileName;$/;"	m	class:TestViCommands	typeref:typename:const QString &	file:
m_testing	MainWindow.h	/^    bool		m_testing;					\/\/	„ÉÜ„Çπ„Éà‰∏≠„Éï„É©„Ç∞$/;"	m	class:MainWindow	typeref:typename:bool
m_text	CompletionWidget.h	/^	QString		m_text;		\/\/	çiÇËçûÇ›ÉeÉLÉXÉg$/;"	m	class:CompletionWidget	typeref:typename:QString
m_text	EditView.h	/^	QString	m_text;$/;"	m	struct:FallingChar	typeref:typename:QString
m_text	ViEngine.h	/^	QString	m_text;$/;"	m	struct:YankBufferItem	typeref:typename:QString
m_textCursor	EditView.h	/^	TextCursor	*m_textCursor;$/;"	m	class:EditView	typeref:typename:TextCursor *
m_textInsertedPos	MainWindow.h	/^	int					m_textInsertedPos;$/;"	m	class:MainWindow	typeref:typename:int
m_textInsertedView	MainWindow.h	/^	EditView			*m_textInsertedView;$/;"	m	class:MainWindow	typeref:typename:EditView *
m_textObjectChar	ViEngine.h	/^	wchar_t	m_textObjectChar;		\/\/	" ' ( { [ ...$/;"	m	class:ViEngine	typeref:typename:wchar_t
m_textValues	globalSettings.h	/^	QString	m_textValues[N_TEXT];$/;"	m	class:GlobalSettings	typeref:typename:QString[]
m_textValues	typeSettings.h	/^	QString	m_textValues[N_TEXT];$/;"	m	class:TypeSettings	typeref:typename:QString[]
m_thread	MainWindow.h	/^	QThread			m_thread;$/;"	m	class:MainWindow	typeref:typename:QThread
m_time	MainWindow.h	/^	QTime			m_time;$/;"	m	class:MainWindow	typeref:typename:QTime
m_timer	EditView.h	/^	QTimer	m_timer;$/;"	m	class:EditView	typeref:typename:QTimer
m_timer	MainWindow.h	/^	QTimer			m_timer;$/;"	m	class:MainWindow	typeref:typename:QTimer
m_title	Document.h	/^	QString	m_title;$/;"	m	class:Document	typeref:typename:QString
m_tmCounter	EditView.h	/^	int		m_tmCounter;$/;"	m	class:EditView	typeref:typename:int
m_toInsertMode	ViEngine.h	/^	bool		m_toInsertMode;$/;"	m	class:ViEngine	typeref:typename:bool
m_toTerminate	GrepEngine.h	/^	bool	m_toTerminate;$/;"	m	class:GrepEngine	typeref:typename:bool
m_tokenLineNum	tokenizer.h	/^	int		m_tokenLineNum;$/;"	m	class:Tokenizer	typeref:typename:int
m_tokenPosition	tokenizer.h	/^	int		m_tokenPosition;	\/\/	„Éà„Éº„ÇØ„É≥ÈñãÂßã„Ç™„Éï„Çª„ÉÉ„Éà$/;"	m	class:Tokenizer	typeref:typename:int
m_tokenText	ViewTokenizer.h	/^	QString	m_tokenText;$/;"	m	class:ViewTokenizer	typeref:typename:QString
m_tokenText	drawTokenizer.h	/^	QString	m_tokenText;$/;"	m	class:DrawTokenizer	typeref:typename:QString
m_tokenText	tokenizer.h	/^	QString	m_tokenText;	\/\/	ÁèæÂú®„Éà„Éº„ÇØ„É≥ÊñáÂ≠óÂàó$/;"	m	class:Tokenizer	typeref:typename:QString
m_tokenType	ViewTokenizer.h	/^	byte	m_tokenType;				\/\/	„Éà„Éº„ÇØ„É≥Á®ÆÂà•$/;"	m	class:ViewTokenizer	typeref:typename:byte
m_tokenType	drawTokenizer.h	/^	byte_t	m_tokenType;				\/\/	ÉgÅ[ÉNÉìéÌï $/;"	m	class:DrawTokenizer	typeref:typename:byte_t
m_tokenType	tokenizer.h	/^	uchar	m_tokenType;	\/\/	„Éà„Éº„ÇØ„É≥„Çø„Ç§„Éó$/;"	m	class:Tokenizer	typeref:typename:uchar
m_tokenix	ViewTokenizer.h	/^	int		m_tokenix;		\/\/	„Éà„Éº„ÇØ„É≥ÊúÄÂàù„ÅÆÊñáÂ≠ó„ÅÆ„Éê„ÉÉ„Éï„Ç°ÂÜÖÊñáÂ≠ó‰ΩçÁΩÆ$/;"	m	class:ViewTokenizer	typeref:typename:int
m_tokenix	drawTokenizer.h	/^	int		m_tokenix;	\/\/	ÉgÅ[ÉNÉìç≈èâÇÃï∂éöÇÃÉoÉbÉtÉ@ì‡ï∂éöà íu$/;"	m	class:DrawTokenizer	typeref:typename:int
m_typeCB	MainWindow.h	/^	QComboBox	*m_typeCB;$/;"	m	class:MainWindow	typeref:typename:QComboBox *
m_typeMap	settingsMgr.h	/^	QMap<QString, TypeSettings *>	m_typeMap;		\/\/	type -> typeSettings map$/;"	m	class:SettingsMgr	typeref:typename:QMap<QString,TypeSettings * >
m_typeName	typeSettings.h	/^	QString	m_typeName;$/;"	m	class:TypeSettings	typeref:typename:QString
m_typeSettings	Document.h	/^	TypeSettings	*m_typeSettings;$/;"	m	class:Document	typeref:typename:TypeSettings *
m_typeSettings	TypeStgDlg.h	/^	TypeSettings	*m_typeSettings;$/;"	m	class:TypeStgDlg	typeref:typename:TypeSettings *
m_typeSettings	ViewTokenizer.h	/^	const TypeSettings	*m_typeSettings;$/;"	m	class:ViewTokenizer	typeref:typename:const TypeSettings *
m_typeSettings	drawTokenizer.h	/^	const TypeSettings	*m_typeSettings;$/;"	m	class:DrawTokenizer	typeref:typename:const TypeSettings *
m_typeSettings	tokenizer.h	/^	const TypeSettings	*m_typeSettings;$/;"	m	class:Tokenizer	typeref:typename:const TypeSettings *
m_unbalancedAssocParen	EditView.h	/^	bool	m_unbalancedAssocParen;		\/\/	ÂØæÂøú„Åô„ÇãÊã¨Âºß„ÅåÁÑ°„ÅÑ or „Ç§„É≥„Éá„É≥„Éà„ÅåÂêå„Åò„Åß„ÅØ/;"	m	class:EditView	typeref:typename:bool
m_undoBlockOpened	ViEngine.h	/^	bool		m_undoBlockOpened;		\/\/	$/;"	m	class:ViEngine	typeref:typename:bool
m_uniqKeyString	singleapplication.h	/^	const QString	m_uniqKeyString;$/;"	m	class:SingleApplication	typeref:typename:const QString
m_v	EditView.h	/^	QPointF	m_v;		\/\/	ÈÄüÂ∫¶„Éô„ÇØ„Çø„Éº$/;"	m	struct:FallingChar	typeref:typename:QPointF
m_vMode	ViEngine.h	/^	char		m_vMode;				\/\/	{ v | V }$/;"	m	class:ViEngine	typeref:typename:char
m_value	globalSettings.cpp	/^	bool		m_value;	\/\/	$/;"	m	struct:KeyBoolItem	typeref:typename:bool	file:
m_value	globalSettings.cpp	/^	cwchar	*m_value;	\/\/	$/;"	m	struct:KeyTextItem	typeref:typename:cwchar *	file:
m_value	globalSettings.cpp	/^	int		m_value;	\/\/	$/;"	m	struct:KeyEnumItem	typeref:typename:int	file:
m_value	globalSettings.cpp	/^	int		m_value;	\/\/	$/;"	m	struct:KeyIntItem	typeref:typename:int	file:
m_value	typeSettings.cpp	/^	bool	m_value;	\/\/	$/;"	m	struct:KeyBoolItem	typeref:typename:bool	file:
m_value	typeSettings.cpp	/^	cwchar	*m_value;	\/\/	$/;"	m	struct:KeyTextItem	typeref:typename:cwchar *	file:
m_value	typeSettings.cpp	/^	int		m_value;	\/\/	$/;"	m	struct:KeyIntItem	typeref:typename:int	file:
m_viEngine	MainWindow.h	/^	ViEngine	*m_viEngine;$/;"	m	class:MainWindow	typeref:typename:ViEngine *
m_viEngine	TestViCommands.cpp	/^	ViEngine	*m_viEngine;$/;"	m	class:TestViCommands	typeref:typename:ViEngine *	file:
m_view	TextCursor.h	/^	EditView	*m_view;$/;"	m	class:TextCursor	typeref:typename:EditView *
m_view	TypeStgDlg.h	/^	EditView	*m_view;$/;"	m	class:TypeStgDlg	typeref:typename:EditView *
m_view	ViEngine.h	/^	EditView	*m_view;						\/\/	vi „Ç≥„Éû„É≥„ÉâÂØæË±°„Éì„É•„Éº$/;"	m	class:ViEngine	typeref:typename:EditView *
m_view	viewLineMgr.h	/^	EditView	*m_view;$/;"	m	class:ViewLineMgr	typeref:typename:EditView *
m_viewLine	TextCursor.h	/^	int		m_viewLine;			\/\/	Ë°®Á§∫Ë°åÁï™Âè∑ [0, viewLineCount())$/;"	m	class:TextCursor	typeref:typename:int
m_viewLineMgr	EditView.h	/^	ViewLineMgr	*m_viewLineMgr;$/;"	m	class:EditView	typeref:typename:ViewLineMgr *
m_views	Document.h	/^	std::vector<EditView *>	m_views;$/;"	m	class:Document	typeref:typename:std::vector<EditView * >
m_wordBegPos	TextCursor.h	/^	int		m_wordBegPos;			\/\/	ÂçòË™ûÂÖàÈ†≠‰ΩçÁΩÆ for „Éû„Ç¶„Çπ„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØÂçòË™ûÂçò‰ΩçÈÅ∏Êäû$/;"	m	class:TextCursor	typeref:typename:int
m_wordEndPos	TextCursor.h	/^	int		m_wordEndPos;			\/\/	ÂçòË™ûÊú´Â∞æ‰ΩçÁΩÆ for „Éû„Ç¶„Çπ„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØÂçòË™ûÂçò‰ΩçÈÅ∏Êäû$/;"	m	class:TextCursor	typeref:typename:int
m_yankBuffer	ViEngine.h	/^	YankBufferItem	m_yankBuffer;		\/\/	ÁÑ°Âêç„É§„É≥„ÇØ„Éê„ÉÉ„Éï„Ç°$/;"	m	class:ViEngine	typeref:typename:YankBufferItem
m_yankBufferChar	ViEngine.h	/^	char		m_yankBufferChar;		\/\/	'0'-'9' 'a'-'z'$/;"	m	class:ViEngine	typeref:typename:char
main	main.cpp	/^int main(int argc, char *argv[]) $/;"	f	typeref:typename:int
mainWindow	EditView.h	/^	MainWindow	*mainWindow() { return m_mainWindow; }$/;"	f	class:EditView	typeref:typename:MainWindow *
mainWindow	EditView.h	/^	const MainWindow	*mainWindow() const { return m_mainWindow; }$/;"	f	class:EditView	typeref:typename:const MainWindow *
makeCursorInView	EditView.cpp	/^bool EditView::makeCursorInView(bool bQuarter)$/;"	f	class:EditView	typeref:typename:bool
makePoints	CTabBar.cpp	/^void makePoints(QPoint pnts[], const QRect& rct, int DX, bool bLast)$/;"	f	typeref:typename:void
markSetUnset	EditView.cpp	/^void EditView::markSetUnset()$/;"	f	class:EditView	typeref:typename:void
matchedString	MainWindow.h	/^	QString	matchedString() const { return m_matchedString; }$/;"	f	class:MainWindow	typeref:typename:QString
maybeSave	MainWindow.cpp	/^bool MainWindow::maybeSave()$/;"	f	class:MainWindow	typeref:typename:bool
maybeSave	MainWindow.cpp	/^bool MainWindow::maybeSave(EditView *view)$/;"	f	class:MainWindow	typeref:typename:bool
merge	EditView.cpp	/^QStringList merge(const QStringList &sl, const QStringList &sl2)$/;"	f	typeref:typename:QStringList
minMap	Document.h	/^	QPixmap&	minMap() { return m_minMap; }$/;"	f	class:Document	typeref:typename:QPixmap &
mmSeqNumber	Document.h	/^	int		mmSeqNumber() const { return m_mmSeqNumber; }$/;"	f	class:Document	typeref:typename:int
mode	MainWindow.h	/^	int		mode() const { return m_modeCB->currentIndex(); }$/;"	f	class:MainWindow	typeref:typename:int
mode	TextCursor.h	/^	byte_t		mode() const { return m_mode; }$/;"	f	class:TextCursor	typeref:typename:byte_t
mode	ViEngine.h	/^	byte_t	mode() const { return m_mode; }$/;"	f	class:ViEngine	typeref:typename:byte_t
modifiedChanged	MainWindow.cpp	/^void MainWindow::modifiedChanged()$/;"	f	class:MainWindow	typeref:typename:void
mouseDoubleClickEvent	EditView.cpp	/^void EditView::mouseDoubleClickEvent(QMouseEvent *event)$/;"	f	class:EditView	typeref:typename:void
mouseDoubleClickEvent	OutlineBar.cpp	/^void OutlineBar::mouseDoubleClickEvent(QMouseEvent *)$/;"	f	class:OutlineBar	typeref:typename:void
mouseDoubleClickEvent	OutputView.cpp	/^void OutputView::mouseDoubleClickEvent(QMouseEvent *event)$/;"	f	class:OutputView	typeref:typename:void
mouseMoveEvent	EditView.cpp	/^void EditView::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:EditView	typeref:typename:void
mousePressEvent	EditView.cpp	/^void EditView::mousePressEvent(QMouseEvent *event)$/;"	f	class:EditView	typeref:typename:void
mouseReleaseEvent	EditView.cpp	/^void EditView::mouseReleaseEvent(QMouseEvent *)$/;"	f	class:EditView	typeref:typename:void
moveLineCmtToPrev	EditView.cpp	/^void EditView::moveLineCmtToPrev()	\/\/	ÁèæÂú®Ë°å„Å´Ë°å„Ç≥„É°„É≥„Éà„Åå„ÅÇ„Çå„Å∞„ÄÅÂÖ®Ë°å„Å´ÁßªÂãï$/;"	f	class:EditView	typeref:typename:void
movePosition	TextCursor.cpp	/^void TextCursor::movePosition(int op, int mode, int n, bool vi)$/;"	f	class:TextCursor	typeref:typename:void
nBool	typeSettings.h	/^	int		nBool() const { return N_BOOL; }$/;"	f	class:TypeSettings	typeref:typename:int
nColor	typeSettings.h	/^	int		nColor() const { return N_COLOR; }$/;"	f	class:TypeSettings	typeref:typename:int
name	typeSettings.h	/^	QString	name() const { return m_typeName; }$/;"	f	class:TypeSettings	typeref:typename:QString
namedColor	TypeStgDlg.cpp	/^void TypeStgDlg::namedColor()$/;"	f	class:TypeStgDlg	typeref:typename:void
nativeEvent	MainWindow.cpp	/^bool MainWindow::nativeEvent(const QByteArray &eventType, void *message, long *result)$/;"	f	class:MainWindow	typeref:typename:bool
newLineCode	Document.h	/^	byte_t	newLineCode() const { return m_newLineCode; }$/;"	f	class:Document	typeref:typename:byte_t
newLineText	EditView.cpp	/^QString EditView::newLineText() const$/;"	f	class:EditView	typeref:typename:QString
newLineType	MainWindow.cpp	/^int MainWindow::newLineType() const$/;"	f	class:MainWindow	typeref:typename:int
nextCapWord	TextCursor.cpp	/^int TextCursor::nextCapWord(int n)$/;"	f	class:TextCursor	typeref:typename:int
nextChar	tokenizer.cpp	/^wchar_t Tokenizer::nextChar() const$/;"	f	class:Tokenizer	typeref:typename:wchar_t
nextLineToken	tokenizer.cpp	/^int Tokenizer::nextLineToken()			\/\/	Ê¨°„ÅÆË°å„ÅÆÊúÄÂàù„ÅÆ„Éà„Éº„ÇØ„É≥„Åæ„ÅßË™≠„ÅøÈÄ≤„ÇÅ„Çã$/;"	f	class:Tokenizer	typeref:typename:int
nextMark	EditView.cpp	/^bool EditView::nextMark(bool fromBeinDoc)$/;"	f	class:EditView	typeref:typename:bool
nextNextChar	tokenizer.cpp	/^wchar_t Tokenizer::nextNextChar() const$/;"	f	class:Tokenizer	typeref:typename:wchar_t
nextPosition	tokenizer.h	/^	int		nextPosition() const { return m_pos; }$/;"	f	class:Tokenizer	typeref:typename:int
nextRow	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::nextRow()$/;"	f	class:AutoCompletionDlg	typeref:typename:void
nextSSWord	TextCursor.cpp	/^int TextCursor::nextSSWord(int n, bool cw)$/;"	f	class:TextCursor	typeref:typename:int
nextToken	ViewTokenizer.cpp	/^QString ViewTokenizer::nextToken()$/;"	f	class:ViewTokenizer	typeref:typename:QString
nextToken	tokenizer.cpp	/^int Tokenizer::nextToken()$/;"	f	class:Tokenizer	typeref:typename:int
nextTokenText	tokenizer.h	/^	QString	nextTokenText() { nextToken(); return tokenText(); }$/;"	f	class:Tokenizer	typeref:typename:QString
nextWord	TextCursor.cpp	/^int TextCursor::nextWord(int n, bool cw)$/;"	f	class:TextCursor	typeref:typename:int
nthWidget	MainWindow.cpp	/^EditView *MainWindow::nthWidget(int ix)$/;"	f	class:MainWindow	typeref:typename:EditView *
nthWidget	MainWindow.cpp	/^const EditView *MainWindow::nthWidget(int ix) const$/;"	f	class:MainWindow	typeref:typename:const EditView *
numChars	TextCursor.cpp	/^int numChars(const QString& txt)$/;"	f	typeref:typename:int
offsetToPx	EditView.cpp	/^int EditView::offsetToPx(int dln, int offset) const$/;"	f	class:EditView	typeref:typename:int
onAccepted	singleapplication.cpp	/^void SingleApplication::onAccepted()$/;"	f	class:SingleApplication	typeref:typename:void
onBackSpace	EditView.cpp	/^void EditView::onBackSpace(bool ctrl, bool shift, bool alt)$/;"	f	class:EditView	typeref:typename:void
onBackSpace	ViEngine.cpp	/^void ViEngine::onBackSpace()$/;"	f	class:ViEngine	typeref:typename:void
onBomChanged	MainWindow.cpp	/^void MainWindow::onBomChanged(bool b)$/;"	f	class:MainWindow	typeref:typename:void
onCharEncodingChanged	MainWindow.cpp	/^void MainWindow::onCharEncodingChanged(const QString &codecName)$/;"	f	class:MainWindow	typeref:typename:void
onCheckToggled	TypeStgDlg.cpp	/^void TypeStgDlg::onCheckToggled(bool vi)$/;"	f	class:TypeStgDlg	typeref:typename:void
onCmdLineTextChanged	ex.cpp	/^void MainWindow::onCmdLineTextChanged(const QString &text)$/;"	f	class:MainWindow	typeref:typename:void
onColonCmdLineEdit	ex.cpp	/^void MainWindow::onColonCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onCommentChanged	TypeStgDlg.cpp	/^void TypeStgDlg::onCommentChanged()$/;"	f	class:TypeStgDlg	typeref:typename:void
onCursorPosChanged	EditView.cpp	/^void EditView::onCursorPosChanged()$/;"	f	class:EditView	typeref:typename:void
onCursorPosChanged	MainWindow.cpp	/^void MainWindow::onCursorPosChanged()$/;"	f	class:MainWindow	typeref:typename:void
onCursorPosChanged	MainWindow.cpp	/^void MainWindow::onCursorPosChanged(EditView* view)$/;"	f	class:MainWindow	typeref:typename:void
onCursorPosChanged	MainWindow.cpp	/^void MainWindow::onCursorPosChanged(EditView* view, int ln, int offset)$/;"	f	class:MainWindow	typeref:typename:void
onDelete	EditView.cpp	/^void EditView::onDelete(bool ctrl, bool shift, bool alt)$/;"	f	class:EditView	typeref:typename:void
onDownCmdLineEdit	ex.cpp	/^void MainWindow::onDownCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onEditedCmdLineEdit	ex.cpp	/^void MainWindow::onEditedCmdLineEdit(QString text)$/;"	f	class:MainWindow	typeref:typename:void
onEnterCmdLineEdit	ex.cpp	/^void MainWindow::onEnterCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onEnterFindCB	MainWindow.cpp	/^void MainWindow::onEnterFindCB()$/;"	f	class:MainWindow	typeref:typename:void
onEscCmdLineEdit	ex.cpp	/^void MainWindow::onEscCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onEscFindLineEdit	MainWindow.cpp	/^void MainWindow::onEscFindLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onEscape	EditView.cpp	/^void EditView::onEscape(bool ctrl, bool shift, bool alt)$/;"	f	class:EditView	typeref:typename:void
onFocusInFindLineEdit	MainWindow.cpp	/^void MainWindow::onFocusInFindLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onFontNameChanged	TypeStgDlg.cpp	/^void TypeStgDlg::onFontNameChanged(const QString &fontName)$/;"	f	class:TypeStgDlg	typeref:typename:void
onFontSizeChanged	TypeStgDlg.cpp	/^void TypeStgDlg::onFontSizeChanged(int v)$/;"	f	class:TypeStgDlg	typeref:typename:void
onKeyword1Edited	TypeStgDlg.cpp	/^void TypeStgDlg::onKeyword1Edited(const QString &text)$/;"	f	class:TypeStgDlg	typeref:typename:void
onKeyword2Edited	TypeStgDlg.cpp	/^void TypeStgDlg::onKeyword2Edited(const QString &text)$/;"	f	class:TypeStgDlg	typeref:typename:void
onLoad	TypeStgDlg.cpp	/^void TypeStgDlg::onLoad()$/;"	f	class:TypeStgDlg	typeref:typename:void
onModeChanged	MainWindow.cpp	/^void MainWindow::onModeChanged(int md)$/;"	f	class:MainWindow	typeref:typename:void
onNewLineCodeChanged	MainWindow.cpp	/^void MainWindow::onNewLineCodeChanged(int)$/;"	f	class:MainWindow	typeref:typename:void
onOutlineBarColonPressed	MainWindow.cpp	/^void MainWindow::onOutlineBarColonPressed()$/;"	f	class:MainWindow	typeref:typename:void
onOutlineBarEnterPressed	MainWindow.cpp	/^void MainWindow::onOutlineBarEnterPressed()$/;"	f	class:MainWindow	typeref:typename:void
onOutlineItemDblClicked	MainWindow.cpp	/^void MainWindow::onOutlineItemDblClicked(QTreeWidgetItem*item)$/;"	f	class:MainWindow	typeref:typename:void
onReadyRead	singleapplication.cpp	/^void SingleApplication::onReadyRead()$/;"	f	class:SingleApplication	typeref:typename:void
onRecieved	MainWindow.cpp	/^void MainWindow::onRecieved(const QString args)$/;"	f	class:MainWindow	typeref:typename:void
onReset	TypeStgDlg.cpp	/^void TypeStgDlg::onReset()$/;"	f	class:TypeStgDlg	typeref:typename:void
onResized	EditView.cpp	/^void EditView::onResized()$/;"	f	class:EditView	typeref:typename:void
onSave	TypeStgDlg.cpp	/^void TypeStgDlg::onSave()$/;"	f	class:TypeStgDlg	typeref:typename:void
onSlashCmdLineEdit	ex.cpp	/^void MainWindow::onSlashCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onSpaceCmdLineEdit	ex.cpp	/^void MainWindow::onSpaceCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onTab2	TypeStgDlg.cpp	/^void TypeStgDlg::onTab2(bool b)$/;"	f	class:TypeStgDlg	typeref:typename:void
onTab4	TypeStgDlg.cpp	/^void TypeStgDlg::onTab4(bool b)$/;"	f	class:TypeStgDlg	typeref:typename:void
onTab8	TypeStgDlg.cpp	/^void TypeStgDlg::onTab8(bool b)$/;"	f	class:TypeStgDlg	typeref:typename:void
onTabCmdLineEdit	ex.cpp	/^void MainWindow::onTabCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onTimer	EditView.cpp	/^void EditView::onTimer()$/;"	f	class:EditView	typeref:typename:void
onTypeChanged	MainWindow.cpp	/^void MainWindow::onTypeChanged(const QString &type)$/;"	f	class:MainWindow	typeref:typename:void
onUpCmdLineEdit	ex.cpp	/^void MainWindow::onUpCmdLineEdit()$/;"	f	class:MainWindow	typeref:typename:void
onViewLineNumberChanged	MainWindow.cpp	/^void MainWindow::onViewLineNumberChanged(const QString &typeName, bool b)$/;"	f	class:MainWindow	typeref:typename:void
on_action_About_ViVi_triggered	MainWindow.cpp	/^void MainWindow::on_action_About_ViVi_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_AddCurrentFile_triggered	MainWindow.cpp	/^void MainWindow::on_action_AddCurrentFile_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_AdditionalCopy_triggered	MainWindow.cpp	/^void MainWindow::on_action_AdditionalCopy_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_AdditionalCut_triggered	MainWindow.cpp	/^void MainWindow::on_action_AdditionalCut_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_AssociatedParen_triggered	MainWindow.cpp	/^void MainWindow::on_action_AssociatedParen_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_BoxSelect_triggered	MainWindow.cpp	/^void MainWindow::on_action_BoxSelect_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Close_triggered	MainWindow.cpp	/^void MainWindow::on_action_Close_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_CopyImplementationCode_triggered	MainWindow.cpp	/^void MainWindow::on_action_CopyImplementationCode_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Copy_triggered	MainWindow.cpp	/^void MainWindow::on_action_Copy_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Cut_triggered	MainWindow.cpp	/^void MainWindow::on_action_Cut_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_DynamicCompletion_triggered	MainWindow.cpp	/^void MainWindow::on_action_DynamicCompletion_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_ExCommand_triggered	ex.cpp	/^void MainWindow::on_action_ExCommand_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_FormerTab_triggered	MainWindow.cpp	/^void MainWindow::on_action_FormerTab_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Github_triggered	MainWindow.cpp	/^void MainWindow::on_action_Github_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_GlobalSettings_triggered	MainWindow.cpp	/^void MainWindow::on_action_GlobalSettings_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_GrepCurWord_triggered	grep.cpp	/^void MainWindow::on_action_GrepCurWord_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Grep_triggered	grep.cpp	/^void MainWindow::on_action_Grep_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_IgnoreCase_triggered	MainWindow.cpp	/^void MainWindow::on_action_IgnoreCase_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Incremental_triggered	MainWindow.cpp	/^void MainWindow::on_action_Incremental_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_KeisenMode_triggered	MainWindow.cpp	/^void MainWindow::on_action_KeisenMode_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_KeyAssign_triggered	MainWindow.cpp	/^void MainWindow::on_action_KeyAssign_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_LastModifiedPos_triggered	MainWindow.cpp	/^void MainWindow::on_action_LastModifiedPos_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_LineNumber_triggered	MainWindow.cpp	/^void MainWindow::on_action_LineNumber_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_MoveLineCmntToPrev_triggered	MainWindow.cpp	/^void MainWindow::on_action_MoveLineCmntToPrev_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_NewWindow_triggered	MainWindow.cpp	/^void MainWindow::on_action_NewWindow_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_New_triggered	MainWindow.cpp	/^void MainWindow::on_action_New_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_NextTab_triggered	MainWindow.cpp	/^void MainWindow::on_action_NextTab_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_OpenOpenedFiles_triggered	MainWindow.cpp	/^void MainWindow::on_action_OpenOpenedFiles_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Open_triggered	MainWindow.cpp	/^void MainWindow::on_action_Open_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Paste_triggered	MainWindow.cpp	/^void MainWindow::on_action_Paste_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_PrevTab_triggered	MainWindow.cpp	/^void MainWindow::on_action_PrevTab_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Redo_triggered	MainWindow.cpp	/^void MainWindow::on_action_Redo_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_RegExp_triggered	MainWindow.cpp	/^void MainWindow::on_action_RegExp_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Reload_triggered	MainWindow.cpp	/^void MainWindow::on_action_Reload_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_RemoveFile_triggered	MainWindow.cpp	/^void MainWindow::on_action_RemoveFile_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SaveAs_triggered	MainWindow.cpp	/^void MainWindow::on_action_SaveAs_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Save_triggered	MainWindow.cpp	/^void MainWindow::on_action_Save_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SearchBackward_triggered	MainWindow.cpp	/^void MainWindow::on_action_SearchBackward_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SearchCurWord_triggered	MainWindow.cpp	/^void MainWindow::on_action_SearchCurWord_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SearchForward_triggered	MainWindow.cpp	/^void MainWindow::on_action_SearchForward_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Search_triggered	MainWindow.cpp	/^void MainWindow::on_action_Search_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SelectAll_triggered	MainWindow.cpp	/^void MainWindow::on_action_SelectAll_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SharpIfCommentOut_triggered	MainWindow.cpp	/^void MainWindow::on_action_SharpIfCommentOut_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_SharpIfElseCommentOut_triggered	MainWindow.cpp	/^void MainWindow::on_action_SharpIfElseCommentOut_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_TagJump_triggered	MainWindow.cpp	/^void MainWindow::on_action_TagJump_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_ToggleTrueFalse_triggered	MainWindow.cpp	/^void MainWindow::on_action_ToggleTrueFalse_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_TypeSettings_triggered	MainWindow.cpp	/^void MainWindow::on_action_TypeSettings_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_Undo_triggered	MainWindow.cpp	/^void MainWindow::on_action_Undo_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_WordSearch_triggered	MainWindow.cpp	/^void MainWindow::on_action_WordSearch_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_ZenCoding_triggered	MainWindow.cpp	/^void MainWindow::on_action_ZenCoding_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_cpp_h_triggered	MainWindow.cpp	/^void MainWindow::on_action_cpp_h_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_eXit_triggered	MainWindow.cpp	/^void MainWindow::on_action_eXit_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_helpExCommand_triggered	MainWindow.cpp	/^void MainWindow::on_action_helpExCommand_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_helpViCommand_triggered	MainWindow.cpp	/^void MainWindow::on_action_helpViCommand_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_viCommand_triggered	MainWindow.cpp	/^void MainWindow::on_action_viCommand_triggered()$/;"	f	class:MainWindow	typeref:typename:void
on_action_viTutorial_triggered	MainWindow.cpp	/^void MainWindow::on_action_viTutorial_triggered()$/;"	f	class:MainWindow	typeref:typename:void
openFavoriteFile	MainWindow.cpp	/^void MainWindow::openFavoriteFile()$/;"	f	class:MainWindow	typeref:typename:void
openFile	MainWindow.cpp	/^EditView *MainWindow::openFile(const QString &fileName, bool forced)$/;"	f	class:MainWindow	typeref:typename:EditView *
openNextLine	EditView.cpp	/^void EditView::openNextLine()$/;"	f	class:EditView	typeref:typename:void
openPrevLine	EditView.cpp	/^void EditView::openPrevLine()$/;"	f	class:EditView	typeref:typename:void
openRecentFile	MainWindow.cpp	/^void MainWindow::openRecentFile()$/;"	f	class:MainWindow	typeref:typename:void
openUndoBlock	EditView.cpp	/^void EditView::openUndoBlock()$/;"	f	class:EditView	typeref:typename:void
openUndoBlock	ViEngine.cpp	/^void ViEngine::openUndoBlock()$/;"	f	class:ViEngine	typeref:typename:void
operator =	ViEngine.h	/^	YankBufferItem &operator=(const YankBufferItem &x)$/;"	f	struct:YankBufferItem	typeref:typename:YankBufferItem &
orgText	ViewTokenizer.h	/^	QString orgText() const { return m_orgText; }$/;"	f	class:ViewTokenizer	typeref:typename:QString
orgText	drawTokenizer.h	/^	QString orgText() const { return m_orgText; }$/;"	f	class:DrawTokenizer	typeref:typename:QString
paintEvent	CTabBar.cpp	/^void CTabBar::paintEvent(QPaintEvent *event)$/;"	f	class:CTabBar	typeref:typename:void
paintEvent	CTabWidget.cpp	/^void CTabWidget::paintEvent(QPaintEvent *event)$/;"	f	class:CTabWidget	typeref:typename:void
paintEvent	EditView.cpp	/^void EditView::paintEvent(QPaintEvent *event)$/;"	f	class:EditView	typeref:typename:void
parseIdClass	zenCoding.cpp	/^QString parseIdClass(QString &text,$/;"	f	typeref:typename:QString
parseLineNumbers	ex.cpp	/^bool parseLineNumbers(EditView *view, LineNumbers &lns, QString &cmd)$/;"	f	typeref:typename:bool
parseRepeatCount	zenCoding.cpp	/^int parseRepeatCount(QString &text)$/;"	f	typeref:typename:int
parseSubstisute	ex.cpp	/^bool MainWindow::parseSubstisute(const QString &arg, QString &pat, QString &rep, QString &opt)$/;"	f	class:MainWindow	typeref:typename:bool
parseTags	assocParen.cpp	/^void parseTags(const Buffer &buffer, Tokenizer &tkn,$/;"	f	typeref:typename:void
paste	EditView.cpp	/^void EditView::paste()$/;"	f	class:EditView	typeref:typename:void
paste	EditView.cpp	/^void EditView::paste(const QString &text)$/;"	f	class:EditView	typeref:typename:void
pathToOutlineBarItem	MainWindow.cpp	/^QTreeWidgetItem* MainWindow::pathToOutlineBarItem(const QString& path)$/;"	f	class:MainWindow	typeref:typename:QTreeWidgetItem *
pointToLineOffset	EditView.cpp	/^void EditView::pointToLineOffset(const QPoint &pnt, int &vln, int &offset) const$/;"	f	class:EditView	typeref:typename:void
popMode	ViEngine.cpp	/^void ViEngine::popMode()			\/\/	„É¢„Éº„Éâ„ÇíÂÖÉ„Å´Êàª„Åô$/;"	f	class:ViEngine	typeref:typename:void
posEOS	EditView.cpp	/^int EditView::posEOS(int dln) const$/;"	f	class:EditView	typeref:typename:int
pos_t	Document.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	Document.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
pos_t	TextCursor.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	TextCursor.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
pos_t	ViEngine.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	ViEngine.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
pos_t	assocParen.cpp	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32	file:
pos_t	assocParen.cpp	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64	file:
pos_t	assocParen.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	assocParen.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
pos_t	tokenizer.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	tokenizer.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
pos_t	viewLineMgr.h	/^	typedef __int32 pos_t;$/;"	t	typeref:typename:__int32
pos_t	viewLineMgr.h	/^	typedef __int64 pos_t;$/;"	t	typeref:typename:__int64
position	TextCursor.h	/^	int		position() const { return m_pos; }$/;"	f	class:TextCursor	typeref:typename:int
positionInLine	TextCursor.cpp	/^int TextCursor::positionInLine() const$/;"	f	class:TextCursor	typeref:typename:int
positionToLine	Document.cpp	/^int Document::positionToLine(pos_t pos) const$/;"	f	class:Document	typeref:typename:int
positionToLine	EditView.cpp	/^int EditView::positionToLine(pos_t pos) const$/;"	f	class:EditView	typeref:typename:int
positionToViewLine	viewLineMgr.cpp	/^int ViewLineMgr::positionToViewLine(pos_t pos) const$/;"	f	class:ViewLineMgr	typeref:typename:int
prevMark	EditView.cpp	/^bool EditView::prevMark(bool fromEndDoc)$/;"	f	class:EditView	typeref:typename:bool
prevMode	ViEngine.h	/^	byte_t	prevMode() const { return m_prevMode; }$/;"	f	class:ViEngine	typeref:typename:byte_t
prevRow	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::prevRow()$/;"	f	class:AutoCompletionDlg	typeref:typename:void
prevSSWord	TextCursor.cpp	/^int TextCursor::prevSSWord(int n)$/;"	f	class:TextCursor	typeref:typename:int
prevTokenText	tokenizer.h	/^	QString	prevTokenText() const { return m_prevText; }$/;"	f	class:Tokenizer	typeref:typename:QString
prevWord	TextCursor.cpp	/^int TextCursor::prevWord(int n)$/;"	f	class:TextCursor	typeref:typename:int
print	viewLineMgr.cpp	/^void ViewLineMgr::print() const$/;"	f	class:ViewLineMgr	typeref:typename:void
processCommand	ViEngine.cpp	/^void ViEngine::processCommand(wchar_t ch, bool hasSelection)$/;"	f	class:ViEngine	typeref:typename:void
processCommandText	ViEngine.cpp	/^void ViEngine::processCommandText(const QString &text, bool hasSelection)$/;"	f	class:ViEngine	typeref:typename:void
processSubMode	ViEngine.cpp	/^void ViEngine::processSubMode(wchar_t ch)$/;"	f	class:ViEngine	typeref:typename:void
pxToOffset	EditView.cpp	/^int EditView::pxToOffset(int vln, int px) const$/;"	f	class:EditView	typeref:typename:int
pythonAutoIndect	autoIndent.cpp	/^QString pythonAutoIndect(TypeSettings *typeSettings,$/;"	f	typeref:typename:QString
quotedText	ViewTokenizer.h	/^	QString quotedText() const { return m_quotedText; }$/;"	f	class:ViewTokenizer	typeref:typename:QString
quotedText	drawTokenizer.h	/^	QString quotedText() const { return m_quotedText; }$/;"	f	class:DrawTokenizer	typeref:typename:QString
readSettings	globalSettings.cpp	/^void GlobalSettings::readSettings()$/;"	f	class:GlobalSettings	typeref:typename:void
readSettings	settingsMgr.cpp	/^void SettingsMgr::readSettings()$/;"	f	class:SettingsMgr	typeref:typename:void
readSettings	typeSettings.cpp	/^void TypeSettings::readSettings()$/;"	f	class:TypeSettings	typeref:typename:void
readToBuffer	TestViCommands.cpp	/^void TestViCommands::readToBuffer(QTextStream &in)$/;"	f	class:TestViCommands	typeref:typename:void
readyReadStandardError	MainWindow.cpp	/^void MainWindow::readyReadStandardError()$/;"	f	class:MainWindow	typeref:typename:void
readyReadStandardOutput	MainWindow.cpp	/^void MainWindow::readyReadStandardOutput()$/;"	f	class:MainWindow	typeref:typename:void
redo	Document.cpp	/^int Document::redo()$/;"	f	class:Document	typeref:typename:int
redo	EditView.cpp	/^void EditView::redo()$/;"	f	class:EditView	typeref:typename:void
redoing	ViEngine.h	/^	bool	redoing() const { return m_redoing; }$/;"	f	class:ViEngine	typeref:typename:bool
refKW1Clicked	TypeStgDlg.cpp	/^void TypeStgDlg::refKW1Clicked()$/;"	f	class:TypeStgDlg	typeref:typename:void
refKW2Clicked	TypeStgDlg.cpp	/^void TypeStgDlg::refKW2Clicked()$/;"	f	class:TypeStgDlg	typeref:typename:void
regExp	GrepDlg.cpp	/^bool GrepDlg::regExp() const$/;"	f	class:GrepDlg	typeref:typename:bool
regexpHelp	GrepDlg.cpp	/^void GrepDlg::regexpHelp()$/;"	f	class:GrepDlg	typeref:typename:void
reload	MainWindow.cpp	/^void MainWindow::reload(cchar *codecName)$/;"	f	class:MainWindow	typeref:typename:void
reloadRequested	MainWindow.cpp	/^void MainWindow::reloadRequested(EditView *view, cchar *codecName)$/;"	f	class:MainWindow	typeref:typename:void
removeFromInsertedText	ViEngine.cpp	/^void ViEngine::removeFromInsertedText(const QString &text)$/;"	f	class:ViEngine	typeref:typename:void
removeFromOutlineBar	MainWindow.cpp	/^void MainWindow::removeFromOutlineBar(EditView* view)$/;"	f	class:MainWindow	typeref:typename:void
repeatCount	ViEngine.h	/^	int	repeatCount() const { return (!m_repeatCount ? 1 : m_repeatCount) * m_cdyRepCount; }$/;"	f	class:ViEngine	typeref:typename:int
replaceText	EditView.cpp	/^void EditView::replaceText(const QString &text)$/;"	f	class:EditView	typeref:typename:void
replaceText	MainWindow.cpp	/^void MainWindow::replaceText(QString text)$/;"	f	class:MainWindow	typeref:typename:void
reset	typeSettings.h	/^	void	reset() { init(); }$/;"	f	class:TypeSettings	typeref:typename:void
resetBoxKeisenMode	MainWindow.cpp	/^void MainWindow::resetBoxKeisenMode()$/;"	f	class:MainWindow	typeref:typename:void
resetCursorBlinking	EditView.cpp	/^void EditView::resetCursorBlinking()$/;"	f	class:EditView	typeref:typename:void
resetLineFlag	Document.cpp	/^void Document::resetLineFlag(line_t ln, uint flags)$/;"	f	class:Document	typeref:typename:void
resetRedoRecording	ViEngine.h	/^	void	resetRedoRecording() { m_redoRecording = false; }$/;"	f	class:ViEngine	typeref:typename:void
resetStatus	ViEngine.cpp	/^void ViEngine::resetStatus(bool clearRepCnt)$/;"	f	class:ViEngine	typeref:typename:void
resizeEvent	EditView.cpp	/^void EditView::resizeEvent(QResizeEvent *event)$/;"	f	class:EditView	typeref:typename:void
resizeEvent	MainWindow.cpp	/^void MainWindow::resizeEvent(QResizeEvent *event)$/;"	f	class:MainWindow	typeref:typename:void
revIndent	EditView.cpp	/^void EditView::revIndent(int ln1, int ln2, bool vi)$/;"	f	class:EditView	typeref:typename:void
safeChar	ViewTokenizer.cpp	/^static bool safeChar[256] = {$/;"	v	typeref:typename:bool[256]	file:
save	typeSettings.cpp	/^bool TypeSettings::save(const QString &fileName) const$/;"	f	class:TypeSettings	typeref:typename:bool
saveFile	Document.cpp	/^bool Document::saveFile() const$/;"	f	class:Document	typeref:typename:bool
saveFile	EditView.cpp	/^bool EditView::saveFile() const$/;"	f	class:EditView	typeref:typename:bool
scrollCurBottomOfScreen	EditView.cpp	/^void EditView::scrollCurBottomOfScreen()$/;"	f	class:EditView	typeref:typename:void
scrollCurCenterOfScreen	EditView.cpp	/^void EditView::scrollCurCenterOfScreen()$/;"	f	class:EditView	typeref:typename:void
scrollCurQuarterOfScreen	EditView.cpp	/^void EditView::scrollCurQuarterOfScreen()$/;"	f	class:EditView	typeref:typename:void
scrollCurTopOfScreen	EditView.cpp	/^void EditView::scrollCurTopOfScreen()$/;"	f	class:EditView	typeref:typename:void
scrollDown	EditView.cpp	/^void EditView::scrollDown()$/;"	f	class:EditView	typeref:typename:void
scrollDownHalfPage	EditView.cpp	/^void EditView::scrollDownHalfPage()$/;"	f	class:EditView	typeref:typename:void
scrollDownPage	EditView.cpp	/^void EditView::scrollDownPage(bool shift)$/;"	f	class:EditView	typeref:typename:void
scrollUp	EditView.cpp	/^void EditView::scrollUp()$/;"	f	class:EditView	typeref:typename:void
scrollUpHalfPage	EditView.cpp	/^void EditView::scrollUpHalfPage()$/;"	f	class:EditView	typeref:typename:void
scrollUpPage	EditView.cpp	/^void EditView::scrollUpPage(bool shift)$/;"	f	class:EditView	typeref:typename:void
searchAlgorithm	MainWindow.cpp	/^byte_t MainWindow::searchAlgorithm() const	\/\/ { return m_searchAlgorithm; }$/;"	f	class:MainWindow	typeref:typename:byte_t
searchCurWord	EditView.cpp	/^bool EditView::searchCurWord(QString &txt, bool vi)$/;"	f	class:EditView	typeref:typename:bool
searchEndTag	assocParen.cpp	/^bool searchEndTag(const Buffer &buffer, pos_t &pos)$/;"	f	typeref:typename:bool
searchPat	ViEngine.h	/^	const QString &searchPat(bool &fwd) { fwd = m_searchFwd; return m_searchPat; }$/;"	f	class:ViEngine	typeref:typename:const QString &
searchStartTag	assocParen.cpp	/^bool searchStartTag(const Buffer &buffer, pos_t &pos)$/;"	f	typeref:typename:bool
selectAll	EditView.cpp	/^void EditView::selectAll()$/;"	f	class:EditView	typeref:typename:void
selectColor	TypeStgDlg.cpp	/^void TypeStgDlg::selectColor()$/;"	f	class:TypeStgDlg	typeref:typename:void
selectColor	TypeStgDlg.cpp	/^void TypeStgDlg::selectColor(int colorIX)$/;"	f	class:TypeStgDlg	typeref:typename:void
selectedText	EditView.cpp	/^QString EditView::selectedText() const$/;"	f	class:EditView	typeref:typename:QString
selectedText	TextCursor.cpp	/^QString TextCursor::selectedText() const$/;"	f	class:TextCursor	typeref:typename:QString
selectionFirst	TextCursor.cpp	/^int TextCursor::selectionFirst() const$/;"	f	class:TextCursor	typeref:typename:int
selectionFirstLine	TextCursor.cpp	/^int TextCursor::selectionFirstLine() const$/;"	f	class:TextCursor	typeref:typename:int
selectionLast	TextCursor.cpp	/^int TextCursor::selectionLast() const$/;"	f	class:TextCursor	typeref:typename:int
selectionLastLine	TextCursor.cpp	/^int TextCursor::selectionLastLine() const$/;"	f	class:TextCursor	typeref:typename:int
selectionSize	TextCursor.cpp	/^int TextCursor::selectionSize() const$/;"	f	class:TextCursor	typeref:typename:int
sendMessage	singleapplication.cpp	/^void SingleApplication::sendMessage(const QString &text)$/;"	f	class:SingleApplication	typeref:typename:void
setAnchorWordBeg	TextCursor.h	/^	void	setAnchorWordBeg() { m_anchor = m_wordBegPos; }$/;"	f	class:TextCursor	typeref:typename:void
setAnchorWordEnd	TextCursor.h	/^	void	setAnchorWordEnd() { m_anchor = m_wordEndPos; }$/;"	f	class:TextCursor	typeref:typename:void
setBOM	Document.cpp	/^void Document::setBOM(bool bBom)$/;"	f	class:Document	typeref:typename:void
setBlockCommentText	ViewTokenizer.cpp	/^void ViewTokenizer::setBlockCommentText(const QString &beg, const QString &end)$/;"	f	class:ViewTokenizer	typeref:typename:void
setBoolValue	globalSettings.h	/^	void	setBoolValue(int ix, bool v) { m_boolValues[ix] = v; }$/;"	f	class:GlobalSettings	typeref:typename:void
setBoolValue	typeSettings.h	/^	void	setBoolValue(int ix, bool b) { m_boolValues[ix] = b; }$/;"	f	class:TypeSettings	typeref:typename:void
setButtonColor	TypeStgDlg.cpp	/^void setButtonColor(QToolButton *btn, const QColor &col)$/;"	f	typeref:typename:void
setCharEncoding	Document.cpp	/^void Document::setCharEncoding(uchar charEncoding)$/;"	f	class:Document	typeref:typename:void
setCmd	ViEngine.h	/^	void	setCmd(wchar_t cmd) { m_cmd = cmd; }$/;"	f	class:ViEngine	typeref:typename:void
setCmdLineChar	ViEngine.h	/^	void	setCmdLineChar(QChar ch) { m_cmdLineChar = ch; }$/;"	f	class:ViEngine	typeref:typename:void
setCmdText	ViEngine.h	/^	void	setCmdText(const QString &cmd) { m_cmdText = cmd; }$/;"	f	class:ViEngine	typeref:typename:void
setCodecName	Document.cpp	/^void Document::setCodecName(const QByteArray &)$/;"	f	class:Document	typeref:typename:void
setColor	typeSettings.h	/^	void	setColor(int ix, const QColor &col) { m_colors[ix] = col; }$/;"	f	class:TypeSettings	typeref:typename:void
setCurrentRow	CompletionWidget.cpp	/^void CompletionWidget::setCurrentRow(int ix)$/;"	f	class:CompletionWidget	typeref:typename:void
setCurrentView	MainWindow.cpp	/^void MainWindow::setCurrentView(EditView* view)$/;"	f	class:MainWindow	typeref:typename:void
setCursorLine	ViewTokenizer.h	/^	void	setCursorLine() { m_cursorLine = true; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setCursorLine	drawTokenizer.h	/^	void	setCursorLine() { m_cursorLine = true; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setCursorPosition	EditView.cpp	/^void EditView::setCursorPosition(pos_t pos, int mode)$/;"	f	class:EditView	typeref:typename:void
setEnumValue	globalSettings.h	/^	void	setEnumValue(int ix, int v) { m_enumValues[ix] = v; }$/;"	f	class:GlobalSettings	typeref:typename:void
setFilterCaseSensitive	AutoCompletionDlg.h	/^	void	setFilterCaseSensitive(bool b) { m_filterCaseSensitive = b; }$/;"	f	class:AutoCompletionDlg	typeref:typename:void
setFilterText	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::setFilterText(const QString &ft)$/;"	f	class:AutoCompletionDlg	typeref:typename:void
setFindString	GrepDlg.cpp	/^void GrepDlg::setFindString(const QString &txt)$/;"	f	class:GrepDlg	typeref:typename:void
setFindString	MainWindow.cpp	/^void MainWindow::setFindString(const QString &txt)$/;"	f	class:MainWindow	typeref:typename:void
setFontFamily	GlobalStgDlg.cpp	/^void GlobalStgDlg::setFontFamily(const QString &name)$/;"	f	class:GlobalStgDlg	typeref:typename:void
setFontFamily	TypeStgDlg.cpp	/^void TypeStgDlg::setFontFamily(const QString &name)$/;"	f	class:TypeStgDlg	typeref:typename:void
setFullPathName	EditView.cpp	/^void EditView::setFullPathName(const QString &pathName)$/;"	f	class:EditView	typeref:typename:void
setGlobDoing	ViEngine.h	/^	void	setGlobDoing(bool b) { m_globalDoing = b; }$/;"	f	class:ViEngine	typeref:typename:void
setGreppingDir	GreppingDlg.cpp	/^void GreppingDlg::setGreppingDir(const QString &dirStr)$/;"	f	class:GreppingDlg	typeref:typename:void
setIcon	MainWindow.cpp	/^void MainWindow::setIcon(const QString &fileName, QAction *action)$/;"	f	class:MainWindow	typeref:typename:void
setInBlockComment	ViewTokenizer.h	/^	void	setInBlockComment(bool b) { m_inBlockComment = b; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setInBlockComment	drawTokenizer.h	/^	void	setInBlockComment(bool b) { m_inBlockComment = b; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setInLineComment	ViewTokenizer.h	/^	void	setInLineComment(bool b) { m_inLineComment = b; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setInLineComment	drawTokenizer.h	/^	void	setInLineComment(bool b) { m_inLineComment = b; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setInPHP	ViewTokenizer.h	/^	void	setInPHP(bool b) { m_inPHP = b; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setInPHP	drawTokenizer.h	/^	void	setInPHP(bool b) { m_inPHP = b; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setInScriptStartEnd	ViewTokenizer.h	/^	void	setInScriptStartEnd(bool b) { m_inScriptStartEnd = b; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setInScriptStartEnd	drawTokenizer.h	/^	void	setInScriptStartEnd(bool b) { m_inScriptStartEnd = b; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setInTag	ViewTokenizer.h	/^	void	setInTag(bool b) { m_inHTMLTag= b; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setInTag	drawTokenizer.h	/^	void	setInTag(bool b) { m_inHTMLTag= b; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setIncSearchViewPos	ViEngine.cpp	/^void ViEngine::setIncSearchViewPos(EditView *view, pos_t pos)$/;"	f	class:ViEngine	typeref:typename:void
setIntValue	globalSettings.h	/^	void	setIntValue(int ix, int v) { m_intValues[ix] = v; }$/;"	f	class:GlobalSettings	typeref:typename:void
setIntValue	typeSettings.h	/^	void	setIntValue(int ix, int v) { m_intValues[ix] = v; }$/;"	f	class:TypeSettings	typeref:typename:void
setLast	tokenizer.h	/^	void	setLast(pos_t last) { m_last = last; }$/;"	f	class:Tokenizer	typeref:typename:void
setLastModified	Document.cpp	/^void Document::setLastModified(const QDateTime& lastModified)$/;"	f	class:Document	typeref:typename:void
setLastSubstCmd	ViEngine.h	/^	void	setLastSubstCmd(const QString &t) { m_lastSubstCmd = t; }$/;"	f	class:ViEngine	typeref:typename:void
setLineAndPosition	TextCursor.cpp	/^void TextCursor::setLineAndPosition(int vln, pos_t pos, int mode)$/;"	f	class:TextCursor	typeref:typename:void
setLineBreak	viewLineMgr.cpp	/^void ViewLineMgr::setLineBreak(bool b)$/;"	f	class:ViewLineMgr	typeref:typename:void
setLineCommentText	ViewTokenizer.cpp	/^void ViewTokenizer::setLineCommentText(const QString &lineCommentText)$/;"	f	class:ViewTokenizer	typeref:typename:void
setLineFlag	Document.cpp	/^void Document::setLineFlag(line_t ln, uint flags)$/;"	f	class:Document	typeref:typename:void
setLineNumberVisible	EditView.cpp	/^void EditView::setLineNumberVisible(bool b)$/;"	f	class:EditView	typeref:typename:void
setMark	EditView.cpp	/^void EditView::setMark(pos_t pos, char ch)$/;"	f	class:EditView	typeref:typename:void
setMatchedString	MainWindow.h	/^	void	setMatchedString(const QString& txt) { m_matchedString = txt; }$/;"	f	class:MainWindow	typeref:typename:void
setMode	MainWindow.cpp	/^void MainWindow::setMode(int md)$/;"	f	class:MainWindow	typeref:typename:void
setMode	TextCursor.cpp	/^void TextCursor::setMode(byte_t mode)$/;"	f	class:TextCursor	typeref:typename:void
setMode	ViEngine.cpp	/^void ViEngine::setMode(byte mode)$/;"	f	class:ViEngine	typeref:typename:void
setModified	Document.cpp	/^void Document::setModified(bool b)$/;"	f	class:Document	typeref:typename:void
setModified	EditView.cpp	/^void EditView::setModified(bool b)$/;"	f	class:EditView	typeref:typename:void
setPX	TextCursor.h	/^	void	setPX(int px) { m_px = px; }$/;"	f	class:TextCursor	typeref:typename:void
setPathName	Document.cpp	/^void Document::setPathName(const QString &pathName)$/;"	f	class:Document	typeref:typename:void
setPathNamePrinted	ViEngine.h	/^	void	setPathNamePrinted(bool b) { m_pathNamePrinted = b; }$/;"	f	class:ViEngine	typeref:typename:void
setPlainText	Document.cpp	/^void Document::setPlainText(const QString& txt)$/;"	f	class:Document	typeref:typename:void
setPlainText	EditView.cpp	/^void EditView::setPlainText(const QString& txt)$/;"	f	class:EditView	typeref:typename:void
setPosition	TextCursor.cpp	/^void TextCursor::setPosition(pos_t pos, int mode)$/;"	f	class:TextCursor	typeref:typename:void
setPosition	tokenizer.h	/^	void	setPosition(pos_t pos) { m_pos = pos; }$/;"	f	class:Tokenizer	typeref:typename:void
setPrevMode	ViEngine.cpp	/^void ViEngine::setPrevMode(byte mode)$/;"	f	class:ViEngine	typeref:typename:void
setQuoteChar	ViewTokenizer.h	/^	void	setQuoteChar(char q) { m_quoteChar = q; }$/;"	f	class:ViewTokenizer	typeref:typename:void
setQuoteChar	drawTokenizer.h	/^	void	setQuoteChar(char q) { m_quoteChar = q; }$/;"	f	class:DrawTokenizer	typeref:typename:void
setQuotedText	ViewTokenizer.cpp	/^void ViewTokenizer::setQuotedText(const QString &text)$/;"	f	class:ViewTokenizer	typeref:typename:void
setResizable	AutoCompletionDlg.cpp	/^void AutoCompletionDlg::setResizable(bool b)$/;"	f	class:AutoCompletionDlg	typeref:typename:void
setSearchRegExpOpt	MainWindow.cpp	/^void MainWindow::setSearchRegExpOpt(bool b)$/;"	f	class:MainWindow	typeref:typename:void
setSearchWordOpt	MainWindow.cpp	/^void MainWindow::setSearchWordOpt(bool b)$/;"	f	class:MainWindow	typeref:typename:void
setTextValue	globalSettings.h	/^	void	setTextValue(int ix, const QString &t) { m_textValues[ix] = t; }$/;"	f	class:GlobalSettings	typeref:typename:void
setTextValue	typeSettings.h	/^	void	setTextValue(int ix, const QString &t) { m_textValues[ix] = t; }$/;"	f	class:TypeSettings	typeref:typename:void
setTitle	Document.cpp	/^void Document::setTitle(const QString &title)$/;"	f	class:Document	typeref:typename:void
setToInsertMode	ViEngine.h	/^	void	setToInsertMode(bool b) { m_toInsertMode = b; }$/;"	f	class:ViEngine	typeref:typename:void
setTypeName	GrepDlg.cpp	/^void GrepDlg::setTypeName(const QString &typeName)$/;"	f	class:GrepDlg	typeref:typename:void
setTypeSettings	Document.cpp	/^void Document::setTypeSettings(TypeSettings* typeSettings)$/;"	f	class:Document	typeref:typename:void
setTypeSettings	MainWindow.cpp	/^void MainWindow::setTypeSettings(EditView *view, TypeSettings *typeSettings)$/;"	f	class:MainWindow	typeref:typename:void
setUndoBlockOpened	ViEngine.h	/^	void setUndoBlockOpened(bool b) { m_undoBlockOpened = b; }$/;"	f	class:ViEngine	typeref:typename:void
setVMode	ViEngine.h	/^	void	setVMode(char ch) { m_vMode = ch; }$/;"	f	class:ViEngine	typeref:typename:void
setView	ViEngine.h	/^	void	setView(EditView *view) { m_view = view; }$/;"	f	class:ViEngine	typeref:typename:void
setWordBegPos	TextCursor.h	/^	void	setWordBegPos() { m_wordBegPos = m_pos; }$/;"	f	class:TextCursor	typeref:typename:void
setWordEndPos	TextCursor.h	/^	void	setWordEndPos() { m_wordEndPos = m_pos; }$/;"	f	class:TextCursor	typeref:typename:void
setYankText	ViEngine.cpp	/^void ViEngine::setYankText(const QString &text, bool bLine)$/;"	f	class:ViEngine	typeref:typename:void
setupCandidates	CompletionWidget.cpp	/^int CompletionWidget::setupCandidates()$/;"	f	class:CompletionWidget	typeref:typename:int
setupCandidates	EditView.cpp	/^void setupCandidates(QStringList &lst, const QString &key, const QString &type)$/;"	f	typeref:typename:void
setupCheckButtons	TypeStgDlg.cpp	/^void TypeStgDlg::setupCheckButtons()$/;"	f	class:TypeStgDlg	typeref:typename:void
setupCloseTags	completion.cpp	/^void EditView::setupCloseTags(QStringList &lst)$/;"	f	class:EditView	typeref:typename:void
setupColorButtons	TypeStgDlg.cpp	/^void TypeStgDlg::setupColorButtons()$/;"	f	class:TypeStgDlg	typeref:typename:void
setupColorList	NamedColorDlg.cpp	/^void NamedColorDlg::setupColorList()$/;"	f	class:NamedColorDlg	typeref:typename:void
setupCommandModeShortcut	MainWindow.cpp	/^void MainWindow::setupCommandModeShortcut()$/;"	f	class:MainWindow	typeref:typename:void
setupCompletionCandidates	completion.cpp	/^int EditView::setupCompletionCandidates(QStringList &lst, const QString &text,$/;"	f	class:EditView	typeref:typename:int
setupCompletionCandidates	completion.cpp	/^void EditView::setupCompletionCandidates(const QString &fileName, SSSearch *sss, QStringList &ls/;"	f	class:EditView	typeref:typename:void
setupCompletionCandidatesFollowingSpaces	completion.cpp	/^bool EditView::setupCompletionCandidatesFollowingSpaces(QStringList &lst)$/;"	f	class:EditView	typeref:typename:bool
setupFallingChars	EditView.cpp	/^void EditView::setupFallingChars()$/;"	f	class:EditView	typeref:typename:void
setupFallingCharsBoxSelected	EditView.cpp	/^void EditView::setupFallingCharsBoxSelected()$/;"	f	class:EditView	typeref:typename:void
setupHeaders	EditView.cpp	/^void EditView::setupHeaders(QStringList &lst, pos_t pos2, const QString &text)$/;"	f	class:EditView	typeref:typename:void
setupIcons	MainWindow.cpp	/^void MainWindow::setupIcons()$/;"	f	class:MainWindow	typeref:typename:void
setupInsertModeShortcut	MainWindow.cpp	/^void MainWindow::setupInsertModeShortcut()$/;"	f	class:MainWindow	typeref:typename:void
setupKeywordsCandidates	completion.cpp	/^bool EditView::setupKeywordsCandidates(QStringList &lst, const QString &text)$/;"	f	class:EditView	typeref:typename:bool
setupKeywordsCandidates	completion.cpp	/^void EditView::setupKeywordsCandidates(QStringList &lst, const QString &text, const QList<QStrin/;"	f	class:EditView	typeref:typename:void
setupLibNames	completion.cpp	/^void setupLibNames(QStringList &lst \/*, QString pat*\/)$/;"	f	typeref:typename:void
setupStatusBar	MainWindow.cpp	/^void MainWindow::setupStatusBar()$/;"	f	class:MainWindow	typeref:typename:void
setupWord	completion.cpp	/^bool EditView::setupWord(QStringList &lst, QString &key, pos_t &first)$/;"	f	class:EditView	typeref:typename:bool
sharpIfCommentOut	EditView.cpp	/^void EditView::sharpIfCommentOut()$/;"	f	class:EditView	typeref:typename:void
sharpIfCommentOut	EditView.cpp	/^void EditView::sharpIfCommentOut(bool bElse)$/;"	f	class:EditView	typeref:typename:void
sharpIfElseCommentOut	EditView.cpp	/^void EditView::sharpIfElseCommentOut()$/;"	f	class:EditView	typeref:typename:void
showAutoCompletionDlg	completion.cpp	/^void EditView::showAutoCompletionDlg(const QStringList &lst, QString ft, bool selTail, bool filt/;"	f	class:EditView	typeref:typename:void
showAutoCompletionDlg	ex.cpp	/^void MainWindow::showAutoCompletionDlg(const QStringList &lst, QString ft \/*, bool selTail*\/)$/;"	f	class:MainWindow	typeref:typename:void
showCurrentDir	ex.cpp	/^void MainWindow::showCurrentDir()$/;"	f	class:MainWindow	typeref:typename:void
showMessage	MainWindow.cpp	/^void MainWindow::showMessage(const QString &mess0, int timeout)$/;"	f	class:MainWindow	typeref:typename:void
size	Document.cpp	/^int Document::size() const$/;"	f	class:Document	typeref:typename:int
size	viewLineMgr.cpp	/^int ViewLineMgr::size() const				\/\/	„ÉÜ„Éº„Éñ„É´„Çµ„Ç§„Ç∫$/;"	f	class:ViewLineMgr	typeref:typename:int
skipBlank	TestViCommands.cpp	/^void TestViCommands::skipBlank()$/;"	f	class:TestViCommands	typeref:typename:void
skipLine	tokenizer.cpp	/^void Tokenizer::skipLine()$/;"	f	class:Tokenizer	typeref:typename:void
skipSpace	tokenizer.cpp	/^QChar Tokenizer::skipSpace()$/;"	f	class:Tokenizer	typeref:typename:QChar
skipSpaceOrNewLine	tokenizer.cpp	/^QChar Tokenizer::skipSpaceOrNewLine()$/;"	f	class:Tokenizer	typeref:typename:QChar
splitGt	zenCoding.cpp	/^QStringList splitGt(const QString &text)$/;"	f	typeref:typename:QStringList
ssize_t	Document.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	Document.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
ssize_t	TextCursor.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	TextCursor.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
ssize_t	ViEngine.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	ViEngine.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
ssize_t	assocParen.cpp	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32	file:
ssize_t	assocParen.cpp	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64	file:
ssize_t	assocParen.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	assocParen.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
ssize_t	tokenizer.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	tokenizer.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
ssize_t	viewLineMgr.h	/^	typedef __int32 ssize_t;$/;"	t	typeref:typename:__int32
ssize_t	viewLineMgr.h	/^	typedef __int64 ssize_t;$/;"	t	typeref:typename:__int64
sssrc	MainWindow.h	/^	SSSearch	&sssrc() { return *m_sssrc; }$/;"	f	class:MainWindow	typeref:typename:SSSearch &
sssrc2	MainWindow.h	/^	SSSearch	&sssrc2() { return *m_sssrc2; }		\/\/	„Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆÂçòË™ûÊ§úÁ¥¢Áî®$/;"	f	class:MainWindow	typeref:typename:SSSearch &
subMode	ViEngine.h	/^	int	subMode() const { return m_subMode; }$/;"	f	class:ViEngine	typeref:typename:int
substitute	EditView.cpp	/^void EditView::substitute(int dln1, int dln2, const QString &before, const QString &after, const/;"	f	class:EditView	typeref:typename:void
szhTagPlus	zenCoding.cpp	/^bool szhTagPlus(QString &text,$/;"	f	typeref:typename:bool
tabCloseRequested	MainWindow.cpp	/^void MainWindow::tabCloseRequested(int index)$/;"	f	class:MainWindow	typeref:typename:void
tabCurrentChanged	MainWindow.cpp	/^void MainWindow::tabCurrentChanged(int index)$/;"	f	class:MainWindow	typeref:typename:void
tableForType	typeSettings.cpp	/^const KeyTextItem *tableForType(const QString &typeName)$/;"	f	typeref:typename:const KeyTextItem *
tagJump	EditView.cpp	/^void EditView::tagJump()$/;"	f	class:EditView	typeref:typename:void
tagJump	MainWindow.cpp	/^void MainWindow::tagJump(const QString &fullPathName, int ln)		\/\/	ln: 1 „Ç™„É™„Ç∏„É≥$/;"	f	class:MainWindow	typeref:typename:void
tagJump	OutputView.cpp	/^void OutputView::tagJump()$/;"	f	class:OutputView	typeref:typename:void
tagText	ViewTokenizer.h	/^	QString	tagText() const { return m_tagText; }$/;"	f	class:ViewTokenizer	typeref:typename:QString
tagText	drawTokenizer.h	/^	QString	tagText() const { return m_tagText; }$/;"	f	class:DrawTokenizer	typeref:typename:QString
terminate	GrepEngine.cpp	/^void GrepEngine::terminate()$/;"	f	class:GrepEngine	typeref:typename:void
testViCommands	TestViCommands.cpp	/^void testViCommands(MainWindow *mainWindow, ViEngine *viEngine, const QString &fileName)$/;"	f	typeref:typename:void
text	AutoCompletionDlg.cpp	/^QString AutoCompletionDlg::text() const$/;"	f	class:AutoCompletionDlg	typeref:typename:QString
text	CompletionWidget.cpp	/^QString CompletionWidget::text() const$/;"	f	class:CompletionWidget	typeref:typename:QString
text	Document.cpp	/^QString Document::text(pos_t pos, ssize_t sz) const$/;"	f	class:Document	typeref:typename:QString
text	EditView.cpp	/^QString EditView::text(pos_t pos, ssize_t sz) const$/;"	f	class:EditView	typeref:typename:QString
textCursor	EditView.cpp	/^const TextCursor* EditView::textCursor() const$/;"	f	class:EditView	typeref:typename:const TextCursor *
textCursor	EditView.h	/^	TextCursor*	textCursor() { return m_textCursor; }$/;"	f	class:EditView	typeref:typename:TextCursor *
textInserted	MainWindow.cpp	/^void MainWindow::textInserted(const QString &text)$/;"	f	class:MainWindow	typeref:typename:void
textObjectChar	ViEngine.h	/^	wchar_t	textObjectChar() const { return m_textObjectChar; }$/;"	f	class:ViEngine	typeref:typename:wchar_t
textSearched	MainWindow.cpp	/^void MainWindow::textSearched(const QString&txt, bool word)$/;"	f	class:MainWindow	typeref:typename:void
textValue	globalSettings.h	/^	QString	textValue(int ix) const { return m_textValues[ix]; }$/;"	f	class:GlobalSettings	typeref:typename:QString
textValue	typeSettings.h	/^	QString	textValue(int ix) const { return m_textValues[ix]; }$/;"	f	class:TypeSettings	typeref:typename:QString
textWidth	EditView.cpp	/^int EditView::textWidth(const QString &text) const$/;"	f	class:EditView	typeref:typename:int
textWidth	EditView.cpp	/^int EditView::textWidth(pos_t first, ssize_t sz, \/*pos_t last,*\/ const Buffer* pbuffer) const$/;"	f	class:EditView	typeref:typename:int
title	Document.h	/^	QString	title() const { return m_title; }$/;"	f	class:Document	typeref:typename:QString
title	EditView.cpp	/^QString EditView::title() const$/;"	f	class:EditView	typeref:typename:QString
toggleTrueFalse	EditView.cpp	/^void EditView::toggleTrueFalse()$/;"	f	class:EditView	typeref:typename:void
toggleUpperLowerCase	EditView.cpp	/^void EditView::toggleUpperLowerCase()$/;"	f	class:EditView	typeref:typename:void
tokenLineNum	tokenizer.h	/^	int		tokenLineNum() const { return m_tokenLineNum; }$/;"	f	class:Tokenizer	typeref:typename:int
tokenPosition	tokenizer.h	/^	int		tokenPosition() const { return m_tokenPosition; }$/;"	f	class:Tokenizer	typeref:typename:int
tokenText	tokenizer.h	/^	QString	tokenText() const { return m_tokenText; }$/;"	f	class:Tokenizer	typeref:typename:QString
tokenType	ViewTokenizer.h	/^	byte	tokenType() const { return m_tokenType; }$/;"	f	class:ViewTokenizer	typeref:typename:byte
tokenType	drawTokenizer.h	/^	byte_t	tokenType() const { return m_tokenType; }$/;"	f	class:DrawTokenizer	typeref:typename:byte_t
tokenType	tokenizer.h	/^	int		tokenType() const { return m_tokenType; }$/;"	f	class:Tokenizer	typeref:typename:int
tokenix	ViewTokenizer.h	/^	int		tokenix() const { return m_tokenix; }$/;"	f	class:ViewTokenizer	typeref:typename:int
tokenix	drawTokenizer.h	/^	int		tokenix() const { return m_tokenix; }$/;"	f	class:DrawTokenizer	typeref:typename:int
typeName	Document.cpp	/^QString Document::typeName() const$/;"	f	class:Document	typeref:typename:QString
typeName	EditView.cpp	/^QString EditView::typeName() const$/;"	f	class:EditView	typeref:typename:QString
typeNameForExt	settingsMgr.cpp	/^QString SettingsMgr::typeNameForExt(const QString &ext)$/;"	f	class:SettingsMgr	typeref:typename:QString
typeNameToIcon	MainWindow.cpp	/^QIcon *MainWindow::typeNameToIcon(const QString& typeName)$/;"	f	class:MainWindow	typeref:typename:QIcon *
typeNameToType	settingsMgr.cpp	/^int SettingsMgr::typeNameToType(const QString &name) const$/;"	f	class:SettingsMgr	typeref:typename:int
typeSettings	Document.h	/^	TypeSettings	*typeSettings() { return m_typeSettings; }$/;"	f	class:Document	typeref:typename:TypeSettings *
typeSettings	Document.h	/^	const TypeSettings	*typeSettings() const { return m_typeSettings; }$/;"	f	class:Document	typeref:typename:const TypeSettings *
typeSettings	EditView.cpp	/^TypeSettings *EditView::typeSettings()$/;"	f	class:EditView	typeref:typename:TypeSettings *
typeSettings	EditView.cpp	/^const TypeSettings *EditView::typeSettings() const$/;"	f	class:EditView	typeref:typename:const TypeSettings *
typeSettings	settingsMgr.cpp	/^TypeSettings *SettingsMgr::typeSettings(const QString typeName)		\/\/	í èÌÅAtypeName ÇÕëÂï∂éö$/;"	f	class:SettingsMgr	typeref:typename:TypeSettings *
typeSettings	settingsMgr.cpp	/^TypeSettings *SettingsMgr::typeSettings(int type)$/;"	f	class:SettingsMgr	typeref:typename:TypeSettings *
typeSettingsForExt	settingsMgr.cpp	/^TypeSettings *SettingsMgr::typeSettingsForExt(const QString ext)$/;"	f	class:SettingsMgr	typeref:typename:TypeSettings *
typeSettingsForType	MainWindow.cpp	/^TypeSettings *MainWindow::typeSettingsForType(const QString &type)$/;"	f	class:MainWindow	typeref:typename:TypeSettings *
typesettingsChanged	MainWindow.cpp	/^void MainWindow::typesettingsChanged(EditView *view)$/;"	f	class:MainWindow	typeref:typename:void
uchar	Document.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
uchar	ViEngine.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
uchar	charEncoding.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
uchar	globalSettings.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
uchar	tokenizer.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
uchar	typeSettings.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
ui	GlobalStgDlg.h	/^	Ui::GlobalStgDlg ui;$/;"	m	class:GlobalStgDlg	typeref:typename:Ui::GlobalStgDlg
ui	GrepDlg.h	/^	Ui::GrepDlg ui;$/;"	m	class:GrepDlg	typeref:typename:Ui::GrepDlg
ui	GreppingDlg.h	/^	Ui::GreppingDlg ui;$/;"	m	class:GreppingDlg	typeref:typename:Ui::GreppingDlg
ui	MainWindow.h	/^	Ui::MainWindowClass ui;$/;"	m	class:MainWindow	typeref:typename:Ui::MainWindowClass
ui	TypeStgDlg.h	/^	Ui::TypeStgDlg ui;$/;"	m	class:TypeStgDlg	typeref:typename:Ui::TypeStgDlg
uint	Document.h	/^typedef unsigned int uint;$/;"	t	typeref:typename:unsigned int
undo	Document.cpp	/^int Document::undo()$/;"	f	class:Document	typeref:typename:int
undo	EditView.cpp	/^void EditView::undo()$/;"	f	class:EditView	typeref:typename:void
ungetToken	tokenizer.h	/^	void	ungetToken() { m_pushed = true; };$/;"	f	class:Tokenizer	typeref:typename:void
updateFavoriteFileActions	MainWindow.cpp	/^void MainWindow::updateFavoriteFileActions()$/;"	f	class:MainWindow	typeref:typename:void
updateFindStringCB	MainWindow.cpp	/^void MainWindow::updateFindStringCB()$/;"	f	class:MainWindow	typeref:typename:void
updateFont	EditView.cpp	/^void EditView::updateFont()$/;"	f	class:EditView	typeref:typename:void
updateLineNumberInfo	EditView.cpp	/^void EditView::updateLineNumberInfo()$/;"	f	class:EditView	typeref:typename:void
updateRecentFileActions	MainWindow.cpp	/^void MainWindow::updateRecentFileActions()$/;"	f	class:MainWindow	typeref:typename:void
updateSearchOptions	MainWindow.cpp	/^void MainWindow::updateSearchOptions()		\/\/	„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº„ÅÆÊ§úÁ¥¢„Ç™„Éó„Ç∑„Éß„É≥Êõ¥Êñ∞$/;"	f	class:MainWindow	typeref:typename:void
updateSssrc	MainWindow.cpp	/^void MainWindow::updateSssrc()$/;"	f	class:MainWindow	typeref:typename:void
updateStatusBar	MainWindow.cpp	/^void MainWindow::updateStatusBar()		\/\/	BOM „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„ÇπÁ≠â„ÇíÊõ¥Êñ∞$/;"	f	class:MainWindow	typeref:typename:void
updateTabText	MainWindow.cpp	/^void MainWindow::updateTabText(EditView *view)$/;"	f	class:MainWindow	typeref:typename:void
updateUndoRedoEnabled	MainWindow.cpp	/^void MainWindow::updateUndoRedoEnabled()$/;"	f	class:MainWindow	typeref:typename:void
updateView	Document.cpp	/^void Document::updateView(EditView *view)$/;"	f	class:Document	typeref:typename:void
updateWindowTitle	MainWindow.cpp	/^void MainWindow::updateWindowTitle()$/;"	f	class:MainWindow	typeref:typename:void
vMode	ViEngine.h	/^	char	vMode() const { return m_vMode; }$/;"	f	class:ViEngine	typeref:typename:char
viCmdFixed	MainWindow.cpp	/^void MainWindow::viCmdFixed()$/;"	f	class:MainWindow	typeref:typename:void
viCommand	ViEngine.cpp	/^void ViEngine::viCommand(wchar_t ch, bool hasSelection)$/;"	f	class:ViEngine	typeref:typename:void
viEngine	MainWindow.h	/^	ViEngine	*viEngine() { return m_viEngine; }$/;"	f	class:MainWindow	typeref:typename:ViEngine *
viEngine	MainWindow.h	/^	const ViEngine	*viEngine() const { return m_viEngine; }$/;"	f	class:MainWindow	typeref:typename:const ViEngine *
viFindCharBackward	viEditView.cpp	/^void EditView::viFindCharBackward(wchar_t qch, bool bPrev, int mvmd, int repCnt)$/;"	f	class:EditView	typeref:typename:void
viFindCharForward	viEditView.cpp	/^void EditView::viFindCharForward(wchar_t qch, bool bPrev, int mvmd, int repCnt)$/;"	f	class:EditView	typeref:typename:void
viModeChanged	MainWindow.cpp	/^void MainWindow::viModeChanged()$/;"	f	class:MainWindow	typeref:typename:void
viPasteNext	viEditView.cpp	/^void EditView::viPasteNext()$/;"	f	class:EditView	typeref:typename:void
viPastePrev	viEditView.cpp	/^void EditView::viPastePrev()$/;"	f	class:EditView	typeref:typename:void
viYankLine	viEditView.cpp	/^void EditView::viYankLine()$/;"	f	class:EditView	typeref:typename:void
viYankText	viEditView.cpp	/^void EditView::viYankText()$/;"	f	class:EditView	typeref:typename:void
view	ViEngine.h	/^	EditView *view() { return m_view; }$/;"	f	class:ViEngine	typeref:typename:EditView *
viewItemKey	typeSettings.cpp	/^cchar *TypeSettings::viewItemKey(int ix) const$/;"	f	class:TypeSettings	typeref:typename:cchar *
viewLine	TextCursor.h	/^	int		viewLine() const { return m_viewLine; }$/;"	f	class:TextCursor	typeref:typename:int
viewLineCount	EditView.cpp	/^int EditView::viewLineCount() const$/;"	f	class:EditView	typeref:typename:int
viewLineMgr	EditView.h	/^	ViewLineMgr *viewLineMgr() { return m_viewLineMgr; }$/;"	f	class:EditView	typeref:typename:ViewLineMgr *
viewLineMgr	EditView.h	/^	const ViewLineMgr *viewLineMgr() const { return m_viewLineMgr; }$/;"	f	class:EditView	typeref:typename:const ViewLineMgr *
viewLineOffsetToPx	EditView.cpp	/^int EditView::viewLineOffsetToPx(int vln, int offset) const$/;"	f	class:EditView	typeref:typename:int
viewLineSize	viewLineMgr.cpp	/^int ViewLineMgr::viewLineSize(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:int
viewLineStartPosition	EditView.cpp	/^int EditView::viewLineStartPosition(int vln) const$/;"	f	class:EditView	typeref:typename:int
viewLineStartPosition	TextCursor.cpp	/^int TextCursor::viewLineStartPosition(int vln) const$/;"	f	class:TextCursor	typeref:typename:int
viewLineStartPosition	viewLineMgr.cpp	/^int ViewLineMgr::viewLineStartPosition(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:int
viewLineToDocLine	EditView.cpp	/^int EditView::viewLineToDocLine(int vln) const$/;"	f	class:EditView	typeref:typename:int
viewLineToDocLine	EditView.cpp	/^int EditView::viewLineToDocLine(int vln, int &offset) const$/;"	f	class:EditView	typeref:typename:int
viewLineToDocLine	viewLineMgr.cpp	/^int ViewLineMgr::viewLineToDocLine(int vln) const$/;"	f	class:ViewLineMgr	typeref:typename:int
viewLineToDocLine	viewLineMgr.cpp	/^int ViewLineMgr::viewLineToDocLine(int vln, int &offset) const$/;"	f	class:ViewLineMgr	typeref:typename:int
viewLineToDocLineRaw	viewLineMgr.h	/^	int	viewLineToDocLineRaw(int vln) const { return m_lv[vln].m_docLine; }$/;"	f	class:ViewLineMgr	typeref:typename:int
viewToOutlineBarItem	MainWindow.cpp	/^QTreeWidgetItem* MainWindow::viewToOutlineBarItem(EditView* view)$/;"	f	class:MainWindow	typeref:typename:QTreeWidgetItem *
wheelEvent	EditView.cpp	/^void EditView::wheelEvent(QWheelEvent * event)$/;"	f	class:EditView	typeref:typename:void
wholeWordOnly	GrepDlg.cpp	/^bool GrepDlg::wholeWordOnly() const$/;"	f	class:GrepDlg	typeref:typename:bool
winEventFilter	singleapplication.cpp	/^bool SingleApplication::winEventFilter( MSG * msg, long * result )$/;"	f	class:SingleApplication	typeref:typename:bool
writeSettings	globalSettings.cpp	/^void GlobalSettings::writeSettings() const$/;"	f	class:GlobalSettings	typeref:typename:void
writeSettings	settingsMgr.cpp	/^void SettingsMgr::writeSettings() const$/;"	f	class:SettingsMgr	typeref:typename:void
writeSettings	typeSettings.cpp	/^void TypeSettings::writeSettings() const$/;"	f	class:TypeSettings	typeref:typename:void
yankBufferItem	ViEngine.cpp	/^YankBufferItem *ViEngine::yankBufferItem()$/;"	f	class:ViEngine	typeref:typename:YankBufferItem *
yankBufferItem	ViEngine.cpp	/^const YankBufferItem *ViEngine::yankBufferItem() const$/;"	f	class:ViEngine	typeref:typename:const YankBufferItem *
yankText	ViEngine.cpp	/^const QString ViEngine::yankText(bool &bLine) const$/;"	f	class:ViEngine	typeref:typename:const QString
zchHTML	zenCoding.cpp	/^bool zchHTML($/;"	f	typeref:typename:bool
zchTerm	zenCoding.cpp	/^QString zchTerm(int k,$/;"	f	typeref:typename:QString
zenCoding	zenCoding.cpp	/^void EditView::zenCoding()$/;"	f	class:EditView	typeref:typename:void
zenCodingFor	zenCoding.cpp	/^bool EditView::zenCodingFor(const QString &indentText, const QString &keyText, int ix, QChar prc/;"	f	class:EditView	typeref:typename:bool
zenCodingFromFile	zenCoding.cpp	/^bool EditView::zenCodingFromFile(const QString &fileName,$/;"	f	class:EditView	typeref:typename:bool
zenCodingFromFile	zenCoding.cpp	/^bool EditView::zenCodingFromFile(const QString &indent,$/;"	f	class:EditView	typeref:typename:bool
~AutoCompletionDlg	AutoCompletionDlg.cpp	/^AutoCompletionDlg::~AutoCompletionDlg()$/;"	f	class:AutoCompletionDlg
~CTabBar	CTabBar.cpp	/^CTabBar::~CTabBar()$/;"	f	class:CTabBar
~CTabWidget	CTabWidget.cpp	/^CTabWidget::~CTabWidget()$/;"	f	class:CTabWidget
~CommandLine	CommandLine.cpp	/^CommandLine::~CommandLine()$/;"	f	class:CommandLine
~CompletionWidget	CompletionWidget.cpp	/^CompletionWidget::~CompletionWidget()$/;"	f	class:CompletionWidget
~Document	Document.cpp	/^Document::~Document()$/;"	f	class:Document
~DrawTokenizer	drawTokenizer.h	/^	~DrawTokenizer() {}$/;"	f	class:DrawTokenizer
~EditView	EditView.cpp	/^EditView::~EditView()$/;"	f	class:EditView
~FindLineEdit	FindLineEdit.cpp	/^FindLineEdit::~FindLineEdit()$/;"	f	class:FindLineEdit
~GlobalSettings	globalSettings.h	/^	~GlobalSettings() {};$/;"	f	class:GlobalSettings
~GlobalStgDlg	GlobalStgDlg.cpp	/^GlobalStgDlg::~GlobalStgDlg()$/;"	f	class:GlobalStgDlg
~GrepDlg	GrepDlg.cpp	/^GrepDlg::~GrepDlg()$/;"	f	class:GrepDlg
~GrepEngine	GrepEngine.cpp	/^GrepEngine::~GrepEngine()$/;"	f	class:GrepEngine
~GreppingDlg	GreppingDlg.cpp	/^GreppingDlg::~GreppingDlg()$/;"	f	class:GreppingDlg
~MainWindow	MainWindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow
~NamedColorDlg	NamedColorDlg.cpp	/^NamedColorDlg::~NamedColorDlg()$/;"	f	class:NamedColorDlg
~OutputView	OutputView.cpp	/^OutputView::~OutputView()$/;"	f	class:OutputView
~SettingsMgr	settingsMgr.cpp	/^SettingsMgr::~SettingsMgr()$/;"	f	class:SettingsMgr
~Tokenizer	tokenizer.cpp	/^Tokenizer::~Tokenizer(void)$/;"	f	class:Tokenizer
~TypeSettings	typeSettings.h	/^	~TypeSettings() {};$/;"	f	class:TypeSettings
~TypeStgDlg	TypeStgDlg.cpp	/^TypeStgDlg::~TypeStgDlg()$/;"	f	class:TypeStgDlg
~ViEngine	ViEngine.cpp	/^ViEngine::~ViEngine()$/;"	f	class:ViEngine
~ViewTokenizer	ViewTokenizer.h	/^	~ViewTokenizer() {}$/;"	f	class:ViewTokenizer
